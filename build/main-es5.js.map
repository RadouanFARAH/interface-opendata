{"version":3,"sources":["webpack:///src/app/services/token.guard.ts","webpack:///src/app/services/auth.guard.ts","webpack:///fs (ignored)","webpack:///src/app/pages/home/home.component.ts","webpack:///src/app/pages/home/home.component.html","webpack:///crypto (ignored)","webpack:///src/app/pages/simulator/simulator.component.ts","webpack:///src/app/pages/simulator/simulator.component.html","webpack:///stream (ignored)","webpack:///src/app/services/agenceData.service.ts","webpack:///src/app/components/personne-morale-gestionnaire/personne-morale-gestionnaire.component.ts","webpack:///src/app/components/personne-morale-gestionnaire/personne-morale-gestionnaire.component.html","webpack:///src/environments/environment.ts","webpack:///src/app/pages/login/login.component.ts","webpack:///src/app/pages/login/login.component.html","webpack:///src/app/components/agence-reorientation/agence-reorientation.component.ts","webpack:///src/app/components/agence-reorientation/agence-reorientation.component.html","webpack:///src/app/services/pmDataNew.service.ts","webpack:///src/app/services/token-interceptor.service.ts","webpack:///node_modules/moment/locale sync ^\\.\\/.*$","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/services/event-service.service.ts","webpack:///src/app/components/personne-details/personne-details.component.html","webpack:///src/app/components/personne-details/personne-details.component.ts","webpack:///src/app/components/change-password/change-password.component.ts","webpack:///src/app/components/change-password/change-password.component.html","webpack:///src/app/components/new-demande/new-demande.component.ts","webpack:///src/app/components/new-demande/new-demande.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/services/database.service.ts","webpack:///src/app/components/agents-page/agents-page.component.ts","webpack:///src/app/components/agents-page/agents-page.component.html","webpack:///src/app/components/main-nav/main-nav.component.html","webpack:///src/app/components/main-nav/main-nav.component.ts","webpack:///src/app/services/call-server.service.ts","webpack:///src/app/pages/register/register.component.ts","webpack:///src/app/pages/register/register.component.html","webpack:///src/app/services/not-auth.guard.ts","webpack:///src/app/services/auth.service.ts","webpack:///src/app/components/forgot-password/forgot-password.component.ts","webpack:///src/app/components/forgot-password/forgot-password.component.html","webpack:///src/app/services/pmData.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/santi.pipe.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["TokenGuard","authService","route","token","expiry","JSON","parse","atob","split","exp","Math","floor","Date","getTime","state","getToken","helper","isExpired","isTokenExpired","tokenExpired","navigate","providedIn","AuthGuard","HomeComponent","isMenuOpen","selector","templateUrl","styleUrls","SimulatorComponent","dialogRef","simulation","duree","montant","showAlert","close","taux","val","k","n","val2","pow","montant2","val3","echeancefin","list","i","echeance","base","interet","annuite","amortissement","valeurfinal","vals","Object","keys","map","key","rows","simul","tauxmin","simlation","nbre","simler","retour","AgenceDataService","http","url","get","EXCEL_TYPE","EXCEL_EXTENSION","PersonneMoraleGestionnaireComponent","snackBar","cdr","callServer","dialog","activatedRoute","newOrdersService","dateadapter","agenceDataService","sharedService","display","source","nature","value","viewValue","status","selectedValue","statusQualifications","statutC","statut","displayedColumns","selectedCINValue","focused","isAlert","resultatTraitement","isSourceSelected","offset","pageSizeOptions","pagination","pageNumber","btn","S_selected","isNatureSelected","Gest2","role","localStorage","getItem","startsWith","isAgent","user","origins","includes","isRIFSO","regions","isBO","organismes","length","partenaire","sourceSelectedValue","sourceChanged","natureSelectedValue","natureChanged","setLocale","geVilles","subscribe","respp","villes","results","e","isNew","navigationChanged","dataLength","sourceChange","dataSource","statutSelectedValue","statutQualifierSelectedValue","form2","patchValue","fromDate","toDate","FX_selected","origine","unshift","shift","file","target","files","size","name","snackBarRef","open","duration","horizontalPosition","verticalPosition","onAction","dismiss","formData","FormData","append","uploadFile","res","err","console","log","mot_cle","statut_dem","resultat_prequalif","resultat_qualif","changesObject","act","getNouvellesDemandes","getDemandesPrequalifies","getDemandesEvolan","getDemandesQualifier","notifydrds","rappelerdsdr","notifyDPRM","batchfinished","MAJdemandeSorts","detectChanges","getStatsPreQualif","data","resultat","worksheet","json_to_sheet","workbook","Sheets","SheetNames","excelBuffer","bookType","type","saveAsExcelFile","getStatsQualif","getDataStatsPreQualif","downlowdURL","window","URL","createObjectURL","getDataStatsQualif","getDataStatsNouvelle","getDataStatsEvolan","buffer","Blob","toLocaleDateString","validators","required","clickEventsubscription","getClickEvent","creation","send","currentUrl","routeReuseStrategy","shouldReuseRoute","onSameUrlNavigation","personnes","Previous","total","nbr","dataSourceToFilter","sort","paginator","msg","forEach","p","statuttraitement","isSomethingElse","dateupdate","dateinsert","dateDiff","delay_trait","endsWith","tab","isActive","personne","obj","id","typeclient","nom","prenom","rcommerce","ice","telgsm","cin","lock","width","disableClose","afterClosed","result","filter","sendToEvolan","body","valeurid","exporter","environment","production","LoginComponent","fb","hide","connectbtn","document","getElementById","group","identifiant","password","remember","event","keyCode","connect","login","setItem","changePassword","forgotPassword","connectt","AgenceReorientationComponent","callService","matdiagRef","agenceHint","villeHint","ville","codeagence","getAgencesExecpt","except","agences","daterendezvous","dateHint","rdv","agence","annuler","validate","PmDataNewService","searchobj","post","TokenInterceptorService","injector","request","next","clonedRequest","clone","setHeaders","Authorization","handle","pipe","error","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","code","webpackContextKeys","resolve","module","exports","AppComponent","EventServiceService","subject","asObservable","PersonneDetailsComponent","datafromdialog","router","activeRoute","sanitizer","db","niveaux","titre","formejuridiques","statusTraitement","qualification","genres","view","situations","historyDisplayedColumns","annomalieDisplayedColumns","isHintNomAR","isHintNom","isHintPrenom","isHintPrenomAR","isHintCIN","isHintSituationFamiliale","isHintAdresse","isHintAdresseAR","isHintVille","isHintVilleAR","isHintStatutTraitement","isHintGenre","isHintCodeAgence","isSettingEnded","isIntressed","isPretDeb","adresse","messageExistant","isEmpty","prop","hasOwnProperty","setTimeout","origin","bypassSecurityTrustUrl","urlca","gsmca","data_to_send","checkExistants","entry_date","updateResultatTraitement","onNoClick","then","form","getAgences","resp","toUpperCase","adressePart","el","villeentreprise","getActivities","activities","codeActivite","controls","secteurPart","secteur","codeorganisme","canal","datenaissance","datecreation","dateexpiration","isCIntressed","montantdemande","replace","trim","codeagencecible","charAt","slice","toLowerCase","sendMe","email","projet","raisonsociale","raisonsocialesuite","nifiscale","numpattente","ribentreprise","formejuridique","telbureau","adresseentreprise","rueentreprise","quartierentreprise","codepostaleentreprise","genre","dateDeblocage","rue","quartier","codepostal","teldomicile","telprofessionnel","situationfamiliale","numrib","niveauformalisme","partfemme","nombreecheance","codegestionnaire","action","produit","id_od","montantdebloque","codeTribunal","utm_source","utm_produit","ref_campagne","typeLocal","effectif","dateFinPrlvmt","DateRealisation","chiffreAffaire","numeroContract","valueChanges","qualif","trait","data2","getHistory","history","getAnomalies","annomalies","dataville","getCodePostal","regex","isNumeric","test","getCodePostaleByVille","codePostale","isHintdatenaissance","isHintdatecreation","isHintformejuridique","isHintadresseentreprise","isHintadresseentrepriseAR","isHintraisonsociale","isHinttelgsm","isHintRC","isHintRIB","isHintICE","format","count_errors","arabicCharUnicodeRange","HintNom","String","fromCharCode","charCodeAt","HintNomAR","HintPrenom","HintPrenomAR","HintGenre","HintCIN","Hintformejuridique","HintRC","Hintdatecreation","Hintraisonsociale","Hintadresseentreprise","HintadresseentrepriseAR","HintSituationFamiliale","HintCodeAgence","Hinttelgsm","HintAdresse","HintAdresseAR","HintVille","HintVilleAR","panelClass","an","anomalie","HintStatutTraitement","champ","unlock","Promise","reject","ChangePasswordComponent","matDialogRef","identifiantHint","passwordHint","oldpassword","oldpasswordHint","NewDemandeComponent","getcodeagenes","getSecteur","MaterialAngularModules","AppModule","provide","useClass","multi","declarations","imports","providers","bootstrap","DatabaseService","AgentsPageComponent","activeroute","isHint","isAllerClicked","testConnection","params","cd","def","getDemandesPrequalifQualif","element","codegestionnairecible","setDemandesPrequalifQualif","enterKeyPressed","MainNavComponent","breakpointObserver","location","isHandset$","isHome","isAGENT","isCLIENT","sendClickEvent","height","queryParams","pageIndex","clear","simulate","setLoan","logout","CallServerService","responseType","headers","set","RegisterComponent","databaseService","gsm","repassword","checkPasswords","getOrganismes","notSame","register","reset","organisme","getAgenceByOrganisme","onSubmit","changed","NotAuthGuard","AuthService","credentials","ForgotPasswordComponent","emailHint","PmDataService","routes","path","component","canActivate","runGuardsAndResolvers","children","codes","pathMatch","redirectTo","AppRoutingModule","forRoot","SafeHtmlPipe","args","bypassSecurityTrustHtml","bootstrapModule","webpackEmptyAsyncContext"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree,\n  Router,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\nimport { isJwtExpired } from 'jwt-check-expiration';\n \n@Injectable({\n  providedIn: 'root',\n})\nexport class TokenGuard implements CanActivate {\n  constructor(private authService: AuthService, private route: Router) {}\n  tokenExpired(token: string) {\n    const expiry = (JSON.parse(atob(token.split('.')[1]))).exp;\n    return (Math.floor((new Date).getTime() / 1000)) >= expiry;\n  }\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree>\n    | boolean\n    | UrlTree {\n      let token = this.authService.getToken();\n      const helper = new JwtHelperService();\n      const isExpired = helper.isTokenExpired(token) ||isJwtExpired(token) || this.tokenExpired(token) ;\n  \n      if (token && !isExpired) {\n        return true;\n      } else {\n        this.route.navigate(['login']);\n        return false;\n      }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\nimport { isJwtExpired } from 'jwt-check-expiration';\n \nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree,\n  Router,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private authService: AuthService, private route: Router) {}\n  tokenExpired(token: string) {\n    const expiry = (JSON.parse(atob(token.split('.')[1]))).exp;\n    return (Math.floor((new Date).getTime() / 1000)) >= expiry;\n  }\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree>\n    | boolean\n    | UrlTree {\n    let token = this.authService.getToken();\n    const helper = new JwtHelperService();\n    const isExpired = helper.isTokenExpired(token) ||isJwtExpired(token) || this.tokenExpired(token) ;\n\n    if (token && !isExpired) {\n      return true;\n    } else {\n      this.route.navigate(['login']);\n      return false;\n    }\n  }\n}\n","/* (ignored) */","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n  public isMenuOpen: boolean = false;\n  constructor(private route:Router) { }\n\n  ngOnInit(): void {\n  }\n\n\n  logout(){\n    this.route.navigate(['login'])\n  }\n}\n","<app-main-nav>\r\n    <router-outlet></router-outlet>\r\n</app-main-nav>","/* (ignored) */","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-simulator',\n  templateUrl: './simulator.component.html',\n  styleUrls: ['./simulator.component.scss']\n})\nexport class SimulatorComponent implements OnInit {\n  simulation = {\n    duree: 12,\n    montant: 10000\n  };\n\n  showBootstrapAlert() {\n    this.showAlert = true;\n  }\n\n  closeAlert() {\n    this.showAlert = false;\n  }\n  showAlert: boolean = false;\n  echeancefin: any;\n  public rows: any;\n  constructor(public dialogRef: MatDialogRef<SimulatorComponent>,) { }\n\n  ngOnInit(): void {\n  }\n\n  retour(){\n    this.dialogRef.close();\n  }\n  simler(simulation:any) {\n    if (simulation.montant >= 1000 && simulation.duree > 6) {\n      var taux;\n      if (simulation.montant >= 1000 && simulation.montant <= 7000) {\n        taux = 24;\n      } else if (simulation.montant >= 7001 && simulation.montant <= 15000) {\n        taux = 22;\n      } else if (simulation.montant >= 15001 && simulation.montant <= 30000) {\n        taux = 21;\n      } else if (simulation.montant >= 30001 && simulation.montant <= 48000) {\n        taux = 18.5;\n      }\n\n      var val = taux / 1200;\n      val = 1 + val;\n      var k = 1;\n      var n = simulation.duree;\n      var val2 = 1 - Math.pow(val, -n);\n      var montant = simulation.montant;\n      var montant2 = simulation.montant;\n      var val3 = (montant * taux) / 1200;\n      this.echeancefin = val3 / val2;\n      var list = [];\n      for (var i = 0; i < simulation.duree; i++) {\n        list[i] = {\n          echeance: k,\n          base: montant2,\n          interet: (montant2 * taux) / 1200,\n          annuite: val3 / val2,\n          get amortissement() {\n            return this.annuite - this.interet;\n          },\n          get valeurfinal() {\n            return this.base - this.amortissement;\n          },\n        };\n        montant2 = list[i].valeurfinal;\n        k = k + 1;\n      }\n\n      var vals = Object.keys(list).map(function (key) {\n        return list[key];\n      });\n      this.rows = vals;\n    } else {\n      this.showAlert = true;\n    }\n  }\n\n\n  setbareme(simul:any, list:any) {\n    let taux = list.tauxmin / 1000;\n    let simlation = {\n      montant: simul.montant,\n      taux: taux,\n      nbre: simul.duree,\n    };\n    this.simler(simlation);\n  }\n\n}\n","<div mat-dialog-content>\n    <div class=\"alert alert-danger\" *ngIf=\"showAlert\">\n        Montant inférieur à 1000DH ou durée inférieure à 6\n        <button type=\"button\" class=\"close\" (click)=\"closeAlert()\">&times;</button>\n    </div>\n    <div>\n        <fieldset style=\"padding: 40px;\">\n            <legend *ngIf=\"echeancefin\">\n                <div class=\"card-body bodycard\">\n                    <h3>Echéance Financière:</h3>\n                    <strong>{{ echeancefin | number:'1.0-0' }}</strong>\n                </div>\n            </legend>\n            <div class=\"row\" style=\"width: 100%;\">\n                <div class=\"col\">\n                    <div class=\"form-group\">\n                        <label for=\"montant\" class=\"text-secondary\">Montant:</label>\n                        <input type=\"range\" min=\"1000\" step=\"100\" max=\"50000\" class=\"form-control-range\"\n                            [(ngModel)]=\"simulation.montant\">\n                        <input type=\"number\" id=\"montant\" class=\"form-control\" min=\"1000\"\n                            [(ngModel)]=\"simulation.montant\">\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"row\" style=\"width: 100%;\">\n                <div class=\"col\">\n                    <div class=\"form-group\">\n                        <label for=\"duree\" class=\"text-secondary\">Durée:</label>\n                        <input type=\"number\" id=\"duree\" class=\"form-control\" [(ngModel)]=\"simulation.duree\">\n                    </div>\n                </div>\n            </div>\n        </fieldset>\n    </div>\n</div>\n<div mat-dialog-actions>\n    <div class=\"row\">\n        <div class=\"col\">\n            <button type=\"button\" class=\"btn btn-danger\" (click)=\"retour()\">Retour</button>\n        </div>\n        <div class=\"col\">\n            <button type=\"button\" class=\"btn btn-primary\" (click)=\"simler(simulation)\">Simuler</button>\n        </div>\n    </div>\n</div>","/* (ignored) */","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router'\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AgenceDataService {\n  public url=environment.url;\n  constructor(private http:HttpClient) { }\n  geVilles() {\n    return this.http.get(`${this.url}/getListVilles`)\n  }\n}\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { CallServerService } from 'src/app/services/call-server.service';\nimport { PmDataNewService } from 'src/app/services/pmDataNew.service';\nimport { PersonneDetailsComponent } from '../personne-details/personne-details.component';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { DateAdapter } from '@angular/material/core';\nimport * as FileSaver from 'file-saver';\nimport * as XLSX from 'xlsx';\nimport { ChangeDetectorRef } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { AgenceDataService } from 'src/app/services/agenceData.service';\nimport { EventServiceService } from 'src/app/services/event-service.service';\nimport { Subscription } from 'rxjs';\n\nconst EXCEL_TYPE =\n  'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\nconst EXCEL_EXTENSION = '.xlsx';\n@Component({\n  selector: 'app-personne-morale-gestionnaire',\n  templateUrl: './personne-morale-gestionnaire.component.html',\n  styleUrls: ['./personne-morale-gestionnaire.component.scss'],\n})\nexport class PersonneMoraleGestionnaireComponent implements OnInit {\n  display = 'none';\n  source = [];\n\n  nature = [\n    { value: 'prequalifier', viewValue: 'Demandes pré-qualifiées' },\n    { value: 'qualifier', viewValue: 'Demandes qualifiées' },\n    { value: 'evolan', viewValue: 'Status des contrats' },\n  ];\n\n  status = [\n    { value: '', viewValue: 'Tous' },\n    { value: 'Demande débloquée', viewValue: 'Demande débloquée' },\n    { value: 'Demande validée', viewValue: 'Demande validée' },\n    { value: 'Demande saisie', viewValue: 'Demande saisie' },\n    { value: 'Demande envoyée', viewValue: 'Envoyée à EVOLAN' },\n    { value: 'Demande rejetée', viewValue: 'Demande rejetée' },\n    { value: 'Demande annulée', viewValue: 'Demande annulée' },\n    { value: 'Demande soldée', viewValue: 'Demande soldée' },\n    { value: 'Demande consolidée', viewValue: 'Demande consolidée' },\n  ];\n\n  selectedValue: string = '';\n  statusQualifications = [\n    { statutC: '', statut: 'Tous' },\n    { statutC: 'Injoignable', statut: 'Injoignable' },\n    { statutC: 'Non éligible', statut: 'Non éligible' },\n    { statutC: 'Réorientée', statut: 'Réorientée' },\n    { statutC: 'Hors zone', statut: 'Hors zone' },\n    { statutC: 'Plus intéressé', statut: 'Plus intéressé' },\n    { statutC: 'Intéressé plustard', statut: 'Intéressé plustard' },\n    { statutC: 'RDV confirmé', statut: 'RDV confirmé' },\n    { statutC: 'Dossier en cours', statut: 'Dossier en cours' },\n    { statutC: 'Prêt débloqué', statut: 'Prêt débloqué' },\n    { statutC: 'Prêt soldé', statut: 'Prêt soldé' },\n    { statutC: 'Contrat annulé', statut: 'Contrat annulé' },\n    { statutC: 'Contrat consolidé', statut: 'Contrat consolidé' },\n    { statutC: 'Client actif', statut: 'Client actif' },\n    { statutC: 'Sans_feedback', statut: 'Sans_feedback' },\n  ];\n  statutQualifierSelectedValue: string;\n  selectedValueSearch!: string;\n  displayedColumns: string[] = [\n    'valeurid',\n    'nom',\n\n    'cin',\n    'typeclient',\n    'ville',\n    'agence',\n    'codeagence',\n    'entry_date',\n    'dateDeblocage',\n\n    'montantdemande',\n    'nbrappel',\n    'resultatTraitement',\n    'qualification',\n    'statuttraitement',\n    'montantdebloque',\n    'delay_trait',\n    'options'\n  ];\n  selectedCINValue = '';\n  dataSource: MatTableDataSource<any>;\n  @ViewChild(MatSort) sort!: MatSort;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  focused: boolean = false;\n  agences: any;\n  agent: any;\n  natureSelectedValue: any;\n  sourceSelectedValue: any;\n  statutSelectedValue: any;\n  dataFromDialog: any;\n  alert: any;\n  isAlert: boolean = false;\n  resultatTraitement = [\n    { statutC: '', statut: 'Tous' },\n    { statutC: 'Erronée', statut: 'Erronée' },\n    { statutC: 'Injoignable', statut: 'Injoignable' },\n    // { statutC: \"Refus par l'agence\", statut: \"Refus par l'agence\" },\n    { statutC: 'Non intéressé', statut: 'Non intéressé' },\n    { statutC: 'Intéressé plustard', statut: 'Intéressé plustard' },\n    { statutC: 'Intéressé', statut: 'Intéressé' },\n    { statutC: 'Doublant', statut: 'Doublant' },\n  ];\n  selectedStatut: any;\n  demandesP: any;\n  isSourceSelected = false;\n  villes: any;\n  form2: FormGroup;\n  dataSourceToFilter: MatTableDataSource<any>;\n  isBO: boolean;\n  offset: number = 0;\n  dataLength: number;\n  pageSizeOptions = [2, 5, 10];\n  pagination: number = 10;\n  pageNumber: number = 0;\n  btn: string = '';\n  nbr: number;\n  @ViewChild('exporter') exporter: ElementRef;\n  S_selected: boolean = false;\n  sourceChange: boolean;\n  origine: string;\n  isNatureSelected: boolean = false;\n  total: any;\n  FX_selected: boolean;\n  user: string;\n  regions: string;\n  origins: string;\n  role: string;\n  batchfinished: boolean;\n  Gest2: boolean = false;\n  isAgent: boolean;\n  isRIFSO: boolean;\n  creation: boolean;\n  partenaire: boolean;\n  constructor(\n    private snackBar: MatSnackBar,\n    private cdr: ChangeDetectorRef,\n    public callServer: CallServerService,\n    public dialog: MatDialog,\n    private activatedRoute: ActivatedRoute,\n    private route: Router,\n    private newOrdersService: PmDataNewService,\n    private dateadapter: DateAdapter<Date>,\n    private agenceDataService: AgenceDataService,\n    private sharedService:EventServiceService\n  ) {\n\n    this.role = localStorage.getItem('role');\n    if (this.role.startsWith(\"AGT\")) {\n      this.isAgent = true;\n    }\n    this.user = localStorage.getItem('user');\n    this.origins = localStorage.getItem('origins');\n\n    if (this.origins.includes(\"RF\")) {\n      this.isRIFSO = true\n    }\n    this.regions = localStorage.getItem('regions');\n\n    if (this.role === 'BO') {\n      this.isBO = true;\n    }\n\n    if (this.user === 'GEST2') {\n\n      this.Gest2 = true;\n    }\n\n    // if (this.role.startsWith(\"AGT\")) this.nature.unshift() \n    // if (this.origins.includes(\"WB\")) {\n    //   this.source.unshift({ value: 'WB', viewValue: 'Depuis le Site Web' })\n    // }\n    // if (this.origins.includes(\"RS\")) {\n\n    // }\n    // if (this.origins.includes(\"AW\")) {\n    //   this.source.unshift({ value: 'AW', viewValue: 'Depuis Attijari' })\n    // }\n    // if (this.origins.includes(\"AA\")) {\n    //   this.source.unshift({ value: 'AA', viewValue: 'Depuis liste de Fidélisation' })\n    // }\n    // if (this.origins.includes(\"RF\")) {\n    //   this.source.unshift({ value: 'RF', viewValue: 'Depuis  Plateforme RIFSO' })\n    // }\n    const organismes = localStorage.getItem('organismes')\n    this.source = JSON.parse(organismes)\n    if (this.source.length === 1){\n      this.partenaire = true;\n      this.sourceSelectedValue = this.source[0].value\n      this.sourceChanged()\n      this.natureSelectedValue = 'evolan'\n      this.natureChanged()\n\n    }\n    this.dateadapter.setLocale('en-GB');\n\n    this.agenceDataService.geVilles().subscribe((respp: any) => {\n      this.villes = respp.results;\n    });\n\n  }\n  fileUploaded(e) {\n  }\n\n  getColor(isNew){\n    if (isNew){\n      return 'darkblue'\n    }\n    return 'black'\n  }\n  Previous() {\n    if (this.offset === 0) return;\n    else {\n      this.offset = this.offset - this.pagination;\n      this.pageNumber = Math.floor(this.offset / this.pagination);\n      this.navigationChanged();\n    }\n  }\n\n  Next() {\n    if (this.dataLength < this.pagination) return;\n    else {\n      this.offset = this.offset + this.pagination;\n      this.pageNumber = Math.floor(this.offset / this.pagination);\n      this.navigationChanged();\n    }\n  }\n  sourceChanged() {\n    this.sourceChange = true;\n    this.pageNumber = 0;\n    this.isSourceSelected = true;\n    this.dataSource = null;\n    this.natureSelectedValue = '';\n    this.isNatureSelected = false;\n    this.selectedCINValue = '';\n    this.selectedValue = '';\n    this.statutSelectedValue = '';\n    this.statutQualifierSelectedValue = '';\n    if (!this.partenaire){\n      this.form2.patchValue({\n        fromDate: null,\n        toDate: null,\n      });\n    }\n    this.FX_selected = false;\n    this.S_selected = false;\n    this.offset = 0;\n    if (this.sourceSelectedValue === 'WB'  ) {\n      this.origine = 'WB';\n      this.S_selected = true;\n      this.nature.length == 3  ? this.nature.unshift({ value: 'nouvelle', viewValue: 'Nouvelles demandes' }) : ''\n      // this.getDemanedWeb()\n    } \n     if (this.sourceSelectedValue === 'RS' ) {\n      this.origine = 'RS';\n      this.nature.length == 3  ? this.nature.unshift({ value: 'nouvelle', viewValue: 'Nouvelles demandes' }) : ''\n\n      this.S_selected = true;\n    } \n     if (this.sourceSelectedValue === 'AW' ) {\n      this.origine = 'AW';\n      this.nature.length > 3 ? this.nature.shift() : ''\n      this.S_selected = true;\n    } \n    if (this.sourceSelectedValue === 'RF') {\n      this.origine = 'RF';\n      this.nature.length > 3 ? this.nature.shift() : ''\n      this.S_selected = true;\n    }\n    if (this.sourceSelectedValue === 'AA') {\n      this.origine = 'AA';\n      this.nature.length > 3 ? this.nature.shift() : ''\n      this.S_selected = true;\n    }\n    if (this.sourceSelectedValue === 'FX') {\n      this.FX_selected = true;\n      this.nature.length > 3 ? this.nature.shift() : ''\n    }\n    if (this.sourceSelectedValue === 'AR'){\n      this.origine = 'AR';\n      this.S_selected = true;\n      this.nature.length > 3 ? this.nature.shift() : ''\n    }\n  }\n  arrayBuffer: any;\n  file: File;\n  incomingfile(e) {\n    this.file = e.target.files[0];\n    let size = e.target.files[0].size\n\n    if (this.file.name.split('.')[1] !== 'xlsx') {\n      let snackBarRef = this.snackBar.open('Pas un fichier Excel!', 'OK', {\n        duration: 15000,\n        horizontalPosition: 'center',\n        verticalPosition: 'top',\n      });\n      snackBarRef.onAction().subscribe(() => {\n        snackBarRef.dismiss();\n      });\n    } else {\n      let formData = new FormData()\n      formData.append('file', this.file);\n      this.callServer.uploadFile(formData).subscribe((res) => {\n      }, (err) => {\n        console.log(err);\n      })\n\n    }\n  }\n  navigationChanged() {\n    let source = this.natureSelectedValue;\n    let mot_cle = this.selectedCINValue ? this.selectedCINValue : '';\n    let statut_dem = this.selectedValue ? this.selectedValue : '';\n    let resultat_prequalif = this.statutSelectedValue\n      ? this.statutSelectedValue\n      : '';\n    let resultat_qualif = this.statutQualifierSelectedValue\n      ? this.statutQualifierSelectedValue\n      : '';\n    let fromDate = this.form2.value.fromDate\n      ? this.form2.value.fromDate\n      : new Date('01/01/1970');\n    let toDate = this.form2.value.toDate\n      ? this.form2.value.toDate\n      : new Date('01/01/2050');\n\n    const changesObject = {\n      role: this.role,\n      user: this.user,\n      origins: this.origins,\n      regions: this.regions,\n      origine: this.origine,\n      act: this.btn,\n      mot_cle,\n      statut_dem,\n      resultat_prequalif,\n      resultat_qualif,\n      fromDate,\n      toDate,\n    };\n    this.isSourceSelected = true;\n    this.dataSource = null;\n\n    const offset = this.offset;\n    if (this.natureSelectedValue === 'nouvelle') {\n      this.getNouvellesDemandes(offset, changesObject);\n    } else if (this.natureSelectedValue === 'prequalifier') {\n      this.getDemandesPrequalifies(offset, changesObject);\n    } else if (this.natureSelectedValue === 'evolan') {\n      this.getDemandesEvolan(offset, changesObject);\n    } else if (this.natureSelectedValue === 'qualifier') {\n      this.getDemandesQualifier(offset, changesObject);\n    }\n  }\n  notifydsdr() {\n    this.callServer.notifydrds().subscribe((res) => {\n    });\n  }\n  rappelerdsdr() {\n    this.callServer.rappelerdsdr().subscribe((res) => {\n    });\n  }\n\n  notifyDPRM() {\n    this.callServer.notifyDPRM().subscribe((res) => {\n    });\n  }\n  MAJdemandeSorts() {\n    this.batchfinished = true\n    this.callServer.MAJdemandeSorts().subscribe((res) => {\n      this.navigationChanged()\n      this.batchfinished = false\n    }, (err) => {\n      this.batchfinished = false\n      this.navigationChanged()\n      console.log(err);\n\n    });\n  }\n  natureChanged() {\n    this.pageNumber = 0;\n    this.isSourceSelected = true;\n    this.isNatureSelected = true;\n    this.dataSource = null;\n    this.selectedCINValue = '';\n    this.selectedValue = '';\n    this.statutSelectedValue = '';\n    this.statutQualifierSelectedValue = '';\n    if (!this.partenaire){\n      this.form2.patchValue({\n        fromDate: null,\n        toDate: null,\n      });\n    }\n    this.offset = 0;\n    const offset = this.offset;\n    let source = this.natureSelectedValue;\n    let mot_cle = '';\n    let statut_dem = '';\n    let resultat_prequalif = '';\n    let resultat_qualif = '';\n    let fromDate = new Date('01/01/1970');\n    let toDate = new Date('01/01/2050');\n\n    const changesObject = {\n      role: this.role,\n      user: this.user,\n      origins: this.origins,\n      regions: this.regions,\n      origine: this.origine,\n      act: this.btn,\n      mot_cle,\n      statut_dem,\n      resultat_prequalif,\n      resultat_qualif,\n      fromDate,\n      toDate,\n    };\n    if (this.natureSelectedValue === 'nouvelle' && this.origine !== \"AW\") {\n      this.getNouvellesDemandes(offset, changesObject);\n    } else if (this.natureSelectedValue === 'prequalifier') {\n      this.getDemandesPrequalifies(offset, changesObject);\n    } else if (this.natureSelectedValue === 'evolan') {\n      this.getDemandesEvolan(offset, changesObject);\n    } else if (this.natureSelectedValue === 'qualifier') {\n      this.getDemandesQualifier(offset, changesObject);\n    } else {\n      this.dataSource = new MatTableDataSource([]);\n      this.displayedColumns = []\n      this.cdr.detectChanges();\n      this.display = 'initial';\n    }\n  }\n\n\n  public exportAsExcelFile(): void {\n    if (this.natureSelectedValue === 'prequalifier') {\n      this.callServer.getStatsPreQualif().subscribe((res: any) => {\n        let data = res.resultat;\n        const worksheet: XLSX.WorkSheet = XLSX.utils.json_to_sheet(data);\n        const workbook: XLSX.WorkBook = {\n          Sheets: { data: worksheet },\n          SheetNames: ['data'],\n        };\n        const excelBuffer: any = XLSX.write(workbook, {\n          bookType: 'xlsx',\n          type: 'array',\n        });\n        this.saveAsExcelFile(excelBuffer, 'demandes_pré-qualifiées');\n      });\n    }\n    if (this.natureSelectedValue === 'qualifier') {\n      this.callServer.getStatsQualif().subscribe((res: any) => {\n        let data = res.resultat;\n        const worksheet: XLSX.WorkSheet = XLSX.utils.json_to_sheet(data);\n        const workbook: XLSX.WorkBook = {\n          Sheets: { data: worksheet },\n          SheetNames: ['data'],\n        };\n        const excelBuffer: any = XLSX.write(workbook, {\n          bookType: 'xlsx',\n          type: 'array',\n        });\n        this.saveAsExcelFile(excelBuffer, 'demandes_qualifiées');\n      });\n    }\n  }\n\n  public exportDataAsExcelFile(): void {\n    let source = this.natureSelectedValue;\n    let mot_cle = this.selectedCINValue ? this.selectedCINValue : '';\n    let statut_dem = this.selectedValue ? this.selectedValue : '';\n    let resultat_prequalif = this.statutSelectedValue\n      ? this.statutSelectedValue\n      : '';\n    let resultat_qualif = this.statutQualifierSelectedValue\n      ? this.statutQualifierSelectedValue\n      : '';\n    let fromDate = this.form2.value.fromDate\n      ? this.form2.value.fromDate\n      : new Date('01/01/1970');\n    let toDate = this.form2.value.toDate\n      ? this.form2.value.toDate\n      : new Date('01/01/2050');\n\n    const changesObject = {\n      role: this.role,\n      user: this.user,\n      origins: this.origins,\n      regions: this.regions,\n      origine: this.origine,\n      act: this.btn,\n      mot_cle,\n      statut_dem,\n      resultat_prequalif,\n      resultat_qualif,\n      fromDate,\n      toDate,\n    };\n\n    if (this.natureSelectedValue === 'prequalifier') {\n      this.callServer\n        .getDataStatsPreQualif(changesObject)\n        .subscribe((res: any) => {\n          if (changesObject.origine === \"AW\") {\n            let downlowdURL = window.URL.createObjectURL(res)\n            FileSaver.saveAs(downlowdURL, \"reporting AWB.xlsx\"+EXCEL_EXTENSION)\n          } else {\n            let data = res.resultat;\n            const worksheet: XLSX.WorkSheet = XLSX.utils.json_to_sheet(data);\n            const workbook: XLSX.WorkBook = {\n              Sheets: { data: worksheet },\n              SheetNames: ['data'],\n            };\n            const excelBuffer: any = XLSX.write(workbook, {\n              bookType: 'xlsx',\n              type: 'array',\n            });\n            this.saveAsExcelFile(excelBuffer, 'demandes_pré-qualifiées');\n          }\n        });\n    }\n\n    if (this.natureSelectedValue === 'qualifier') {\n      this.callServer\n        .getDataStatsQualif(changesObject)\n        .subscribe((res: any) => {\n          if (changesObject.origine === \"AW\") {\n            let downlowdURL = window.URL.createObjectURL(res)\n            FileSaver.saveAs(downlowdURL, \"reporting AWB.xlsx\"+EXCEL_EXTENSION)\n          } else {\n            let data = res.resultat;\n            const worksheet: XLSX.WorkSheet = XLSX.utils.json_to_sheet(data);\n            const workbook: XLSX.WorkBook = {\n              Sheets: { data: worksheet },\n              SheetNames: ['data'],\n            };\n            const excelBuffer: any = XLSX.write(workbook, {\n              bookType: 'xlsx',\n              type: 'array',\n            });\n            this.saveAsExcelFile(excelBuffer, 'demandes_qualifées');\n          }\n        });\n    }\n\n    if (this.natureSelectedValue === 'nouvelle') {\n      this.callServer\n        .getDataStatsNouvelle(changesObject)\n        .subscribe((res: any) => {\n          if (changesObject.origine === \"AW\") {\n            let downlowdURL = window.URL.createObjectURL(res)\n            FileSaver.saveAs(downlowdURL, \"reporting AWB.xlsx\"+EXCEL_EXTENSION)\n          } else {\n            let data = res.resultat;\n            const worksheet: XLSX.WorkSheet = XLSX.utils.json_to_sheet(data);\n            const workbook: XLSX.WorkBook = {\n              Sheets: { data: worksheet },\n              SheetNames: ['data'],\n            };\n            const excelBuffer: any = XLSX.write(workbook, {\n              bookType: 'xlsx',\n              type: 'array',\n            });\n            this.saveAsExcelFile(excelBuffer, 'nouvelle_demandes');\n          }\n        });\n    }\n\n    if (this.natureSelectedValue === 'evolan') {\n      this.callServer\n        .getDataStatsEvolan(changesObject)\n        .subscribe((res: any) => {\n          if (changesObject.origine === \"AW\") {\n            let downlowdURL = window.URL.createObjectURL(res)\n            FileSaver.saveAs(downlowdURL, \"reporting AWB\"+EXCEL_EXTENSION)\n          } else {\n            let data = res.resultat;\n            const worksheet: XLSX.WorkSheet = XLSX.utils.json_to_sheet(data);\n            const workbook: XLSX.WorkBook = {\n              Sheets: { data: worksheet },\n              SheetNames: ['data'],\n            };\n            const excelBuffer: any = XLSX.write(workbook, {\n              bookType: 'xlsx',\n              type: 'array',\n            });\n            this.saveAsExcelFile(excelBuffer, 'demandes_envoyées_evolan');\n          }\n        });\n    }\n  }\n\n  private saveAsExcelFile(buffer: any, name: string): void {\n    const data: Blob = new Blob([buffer], { type: EXCEL_TYPE });\n    FileSaver.saveAs(\n      data,\n      'reporting' +\n      '_' +\n      name +\n      '_' +\n      new Date().toLocaleDateString() +\n      EXCEL_EXTENSION\n    );\n  }\n  clickEventsubscription:Subscription;\n  ngOnInit(): void {\n    this.form2 = new FormGroup({\n      fromDate: new FormControl(null, { validators: [Validators.required] }),\n      toDate: new FormControl(null, { validators: [Validators.required] }),\n    });\n    this.clickEventsubscription= this.sharedService.getClickEvent().subscribe(()=>{\n      this.creation = true\n      this.send(null);\n      })\n  }\n\n  reloadComponent() {\n    let currentUrl = this.route.url;\n    this.route.routeReuseStrategy.shouldReuseRoute = () => false;\n    this.route.onSameUrlNavigation = 'reload';\n    this.route.navigate([currentUrl]);\n  }\n\n  getNouvellesDemandes(offset, changesObject) {\n    this.newOrdersService.getNouvellesDemandes(offset, changesObject).subscribe(\n      (res: any) => {\n        let personnes = res.results;\n\n\n        this.displayedColumns = [\n          'id',\n          'nom',\n          'cin',\n          'typeclient',\n          'ville',\n          'agence',\n          'codeagence',\n          'entry_date',\n          'montantdemande',\n          'raisonsociale',\n          'ice',\n          'rcommerce',\n          'utm_source',\n          'utm_produit',\n          'ref_campagne',\n          'options'\n        ];\n\n        this.dataLength = personnes.length;\n        while (this.dataLength === 0 && this.offset != 0) {\n          this.Previous();\n        }\n        this.dataSource = new MatTableDataSource(personnes);\n        this.total =\n          this.dataSource.data.length > 0 ? this.dataSource.data[0].nbr : 0;\n        if (this.dataSource.data.length > 0) {\n          if (this.dataSource.data[0].nbr % 10 !== 0) {\n            this.nbr = Math.floor(this.dataSource.data[0].nbr / 10) + 1;\n          } else {\n            this.nbr = Math.floor(this.dataSource.data[0].nbr / 10);\n          }\n        }\n        this.dataSourceToFilter = new MatTableDataSource(personnes);\n        this.cdr.detectChanges();\n        this.display = 'initial';\n        this.dataSource.sort = this.sort;\n        this.dataSource.paginator = this.paginator;\n      },\n      (err) => (this.dataSource = null)\n    );\n  }\n\n  getDemandesPrequalifies(offset, changesObject) {\n    this.newOrdersService\n      .getDemandesPrequalifies(offset, changesObject)\n      .subscribe(\n        (res: any) => {\n          let personnes = res.msg;\n          personnes.forEach((p) => {\n            \n            if (p.resultatTraitement === 'Intéressé' && (p.statuttraitement !== 'Demande débloquée' && p.statuttraitement !== 'Demande rejetée')) {\n              p.isSomethingElse = true\n            }\n            if (p.dateupdate) {\n\n              let dateupdate = new Date(p.dateupdate);\n              let dateinsert = new Date(p.dateinsert);\n              let dateDiff = Math.floor(\n                -(dateinsert.getTime() - dateupdate.getTime()) /\n                (1000 * 60 * 60 * 24)\n              ); // in days\n              console.log(\"dateinsert :\",dateinsert, \"\\,dateupdate :\",dateupdate);\n              console.log(\"diff = \", dateDiff, \" days\");\n              \n              \n              p.delay_trait = dateDiff;\n            } else {\n              let dateupdate = new Date();\n              let dateinsert = new Date(p.dateinsert);\n              let dateDiff = Math.floor(\n                -(dateinsert.getTime() - dateupdate.getTime()) /\n                (1000 * 60 * 60 * 24)\n              );\n              p.delay_trait = dateDiff;\n            }\n          });\n          this.displayedColumns = [\n            'valeurid',\n            'nom',\n            'cin',\n            'typeclient',\n            'ville',\n            'agence',\n            'codeagence',\n            'emaildr',\n            'emailds',\n            'entry_date',\n            'dateDeblocage',\n            'dateinsert',\n            'montantdemande',\n            'nbrappel',\n            'resultatTraitement',\n            'qualification',\n            'statuttraitement',\n            'montantdebloque',\n            'user',\n            'delay_trait',\n            'options'\n          ];\n\n          this.dataLength = personnes.length;\n          while (this.dataLength === 0 && this.offset != 0) {\n            this.Previous();\n          }\n\n          this.dataSource = new MatTableDataSource(personnes);\n          this.total =\n            this.dataSource.data.length > 0 ? this.dataSource.data[0].nbr : 0;\n          if (this.dataSource.data.length > 0) {\n            if (this.dataSource.data[0].nbr % 10 !== 0) {\n              this.nbr = Math.floor(this.dataSource.data[0].nbr / 10) + 1;\n            } else {\n              this.nbr = Math.floor(this.dataSource.data[0].nbr / 10);\n            }\n          }\n\n          this.dataSourceToFilter = new MatTableDataSource(personnes);\n          this.cdr.detectChanges();\n          this.display = 'initial';\n          this.dataSource.sort = this.sort;\n          this.dataSource.paginator = this.paginator;\n        },\n        (err) => (this.dataSource = null)\n      );\n  }\n  getDemandesQualifier(offset, changesObject) {\n    this.newOrdersService.getDemandesQualifier(offset, changesObject).subscribe(\n      (res: any) => {\n        let personnes = res.results;\n        personnes.forEach((p) => {\n          \n          if (p.resultatTraitement === 'Intéressé' && (!p.statuttraitement.endsWith('bloquée') && p.statuttraitement !== 'Demande rejetée')) {\n            p.isSomethingElse = true\n\n          }\n          if (p.dateupdate) {\n\n            let dateupdate = new Date(p.dateupdate);\n            let dateinsert = new Date(p.dateinsert);\n            let dateDiff = Math.floor(\n              -(dateinsert.getTime() - dateupdate.getTime()) /\n              (1000 * 60 * 60 * 24)\n            ); // in days\n            p.delay_trait = dateDiff;\n          } else {\n            let dateupdate = new Date();\n            let dateinsert = new Date(p.dateinsert);\n            let dateDiff = Math.floor(\n              -(dateinsert.getTime() - dateupdate.getTime()) /\n              (1000 * 60 * 60 * 24)\n            );\n            p.delay_trait = dateDiff;\n          }\n        });\n\n        this.displayedColumns = [\n          'valeurid',\n          'nom',\n\n          'cin',\n          'typeclient',\n          'ville',\n          'agence',\n          'codeagence',\n          'emaildr',\n          'emailds',\n          'entry_date',\n          'dateDeblocage',\n\n          'montantdemande',\n          'nbrappel',\n          'resultatTraitement',\n          'qualification',\n          'statuttraitement',\n          'montantdebloque',\n          'user',\n          'delay_trait',\n          'options'\n        ];\n\n        this.dataLength = personnes.length;\n        while (this.dataLength === 0 && this.offset != 0) {\n          this.Previous();\n        }\n        this.dataSource = new MatTableDataSource(personnes);\n        this.total =\n          this.dataSource.data.length > 0 ? this.dataSource.data[0].nbr : 0;\n        if (this.dataSource.data.length > 0) {\n          if (this.dataSource.data[0].nbr % 10 !== 0) {\n            this.nbr = Math.floor(this.dataSource.data[0].nbr / 10) + 1;\n          } else {\n            this.nbr = Math.floor(this.dataSource.data[0].nbr / 10);\n          }\n        }\n        this.dataSourceToFilter = new MatTableDataSource(personnes);\n        this.cdr.detectChanges();\n        this.display = 'initial';\n        this.dataSource.sort = this.sort;\n        this.dataSource.paginator = this.paginator;\n      },\n      (err) => (this.dataSource = null)\n    );\n  }\n  getDemandesEvolan(offset, changesObject) {\n    this.newOrdersService.getDemandesEvolan(offset, changesObject).subscribe(\n      (res: any) => {\n        let personnes = res.results;\n        personnes.forEach((p) => {\n          \n          if (p.resultatTraitement === 'Intéressé' && (!p.statuttraitement.endsWith('bloquée') && p.statuttraitement !== 'Demande rejetée')) {\n            p.isSomethingElse = true\n\n          }\n          if (p.dateupdate) {\n\n            let dateupdate = new Date(p.dateupdate);\n            let dateinsert = new Date(p.dateinsert);\n            let dateDiff = Math.floor(\n              -(dateinsert.getTime() - dateupdate.getTime()) /\n              (1000 * 60 * 60 * 24)\n            ); // in days\n\n            p.delay_trait = dateDiff;\n          } else {\n            let dateupdate = new Date();\n            let dateinsert = new Date(p.dateinsert);\n            let dateDiff = Math.floor(\n              -(dateinsert.getTime() - dateupdate.getTime()) /\n              (1000 * 60 * 60 * 24)\n            );\n            p.delay_trait = dateDiff;\n          }\n        });\n\n        this.displayedColumns = [\n          // 'valeurid',\n          'entry_date',\n          'typeclient',\n          'rcommerce',\n          'raisonsociale',\n          'cin',\n          'nom',\n          'ville',\n          'agence',\n          'telgsm',\n          // 'codeagence',\n          // 'emaildr',\n          // 'emailds',\n          // 'nbrappel',\n          // 'resultatTraitement',\n          // 'dateDeblocage',\n\n          // 'qualification',\n          'montantdemande',\n          // 'statuttraitement',\n          // 'montantdebloque',\n          // 'delay_trait',\n          'options'\n        ];\n\n        this.dataLength = personnes.length;\n        while (this.dataLength === 0 && this.offset != 0) {\n          this.Previous();\n        }\n        this.dataSource = new MatTableDataSource(personnes);\n        this.total =\n          this.dataSource.data.length > 0 ? this.dataSource.data[0].nbr : 0;\n        if (this.dataSource.data.length > 0) {\n          if (this.dataSource.data[0].nbr % 10 !== 0) {\n            this.nbr = Math.floor(this.dataSource.data[0].nbr / 10) + 1;\n          } else {\n            this.nbr = Math.floor(this.dataSource.data[0].nbr / 10);\n          }\n        }\n\n        this.dataSourceToFilter = new MatTableDataSource(personnes);\n        this.cdr.detectChanges();\n        this.display = 'initial';\n        this.dataSource.sort = this.sort;\n        this.dataSource.paginator = this.paginator;\n      },\n      (err) => (this.dataSource = null)\n    );\n  }\n\n\n  ngAfterViewInit() {\n\n  }\n\n  onChangeAll(btn) {\n\n    this.pageNumber = 0;\n    this.btn = btn;\n    let act = this.btn;\n    let source = this.natureSelectedValue;\n    let mot_cle = this.selectedCINValue ? this.selectedCINValue : '';\n    let statut_dem = this.selectedValue ? this.selectedValue : '';\n    let resultat_prequalif = this.statutSelectedValue\n      ? this.statutSelectedValue\n      : '';\n    let resultat_qualif = this.statutQualifierSelectedValue\n      ? this.statutQualifierSelectedValue\n      : '';\n    let fromDate = this.form2.value.fromDate\n      ? this.form2.value.fromDate\n      : new Date('01/01/1970');\n    let toDate = this.form2.value.toDate\n      ? this.form2.value.toDate\n      : new Date('01/01/2050');\n\n    const changesObject = {\n      role: this.role,\n      user: this.user,\n      origins: this.origins,\n      regions: this.regions,\n      origine: this.origine,\n      act: this.btn,\n      mot_cle,\n      statut_dem,\n      resultat_prequalif,\n      resultat_qualif,\n      fromDate,\n      toDate,\n    };\n    this.offset = 0;\n    const offset = this.offset;\n    if (this.natureSelectedValue === 'nouvelle') {\n      this.getNouvellesDemandes(offset, changesObject);\n    } else if (this.natureSelectedValue === 'prequalifier') {\n\n      this.getDemandesPrequalifies(offset, changesObject);\n    } else if (this.natureSelectedValue === 'evolan') {\n      this.getDemandesEvolan(offset, changesObject);\n    } else if (this.natureSelectedValue === 'qualifier') {\n      this.getDemandesQualifier(offset, changesObject);\n    }\n  }\n\n  makeItFocused(e: any) {\n    this.focused = e.tab.isActive;\n  }\n\n  send(personne): void {\n\n    if (!personne){\n      \n      this.natureSelectedValue = 'nouvelle'\n    }\n    if (this.natureSelectedValue === 'nouvelle') {\n      // check if locked\n      let user = localStorage.getItem('user');\n      let obj = {\n        id: personne?.id,\n        typeclient: personne?.typeclient,\n        user: user,\n        nom: personne?.nom,\n        prenom: personne?.prenom,\n        rcommerce: personne?.rcommerce,\n        ice: personne?.ice,\n        telgsm: personne?.telgsm,\n        cin: personne?.cin,\n        origine: this.origine\n      };\n      if ((this.origine==='RS' || this.origine==='WB')&& !this.creation){\n        this.callServer.lock(obj).subscribe(\n          (res) => {\n            const dialogRef = this.dialog.open(PersonneDetailsComponent, {\n              width: \"80vw\",\n              disableClose: true,\n              data: {\n                villes: this.villes,\n                personne,\n                source: this.natureSelectedValue,\n                origine: this.origine,\n                regions: this.regions\n              },\n            });\n  \n            dialogRef.afterClosed().subscribe((result) => {\n          \n              this.navigationChanged();\n              if (result === 'nouvelle') {\n                this.dataSource.data = this.dataSourceToFilter.data.filter(\n                  (e) => e.id != personne.id\n                );\n                this.dataSourceToFilter.data =\n                  this.dataSourceToFilter.data.filter((e) => e.id != personne.id);\n              }\n            });\n          },\n          (err) => {\n            if (err.status && err.status === 505) {\n              let snackBarRef = this.snackBar.open('lock failed!', 'OK', {\n                duration: 2000,\n                horizontalPosition: 'center',\n                verticalPosition: 'top',\n              });\n              snackBarRef.onAction().subscribe(() => {\n                snackBarRef.dismiss();\n              });\n            }\n          }\n        );\n      }else{\n        const dialogRef = this.dialog.open(PersonneDetailsComponent, {\n          width: \"80vw\",\n          disableClose: true,\n          data: {\n            villes: this.villes,\n            personne,\n            source: this.natureSelectedValue,\n            origine: this.origine,\n            regions: this.regions\n          },\n        });\n\n        dialogRef.afterClosed().subscribe((result) => {\n        });\n      }\n\n    } else {\n      const dialogRef = this.dialog.open(PersonneDetailsComponent, {\n        width: \"80vw\",\n        disableClose: true,\n        data: {\n          villes: this.villes,\n          personne,\n          source: this.natureSelectedValue,\n          origine: this.origine,\n          regions: this.regions\n        },\n      });\n\n      dialogRef.afterClosed().subscribe((result) => {\n\n        this.navigationChanged();\n        if (result === 'nouvelle') {\n          this.dataSource.data = this.dataSourceToFilter.data.filter(\n            (e) => e.id != personne.id\n          );\n          this.dataSourceToFilter.data = this.dataSourceToFilter.data.filter(\n            (e) => e.id != personne.id\n          );\n        }\n      });\n    }\n  }\n\n\n  sendToEvolan(personne) {\n    this.callServer.sendToEvolan(personne).subscribe(\n      (res: any) => {\n        let body = {\n          data: res,\n          valeurid: personne.valeurid,\n        };\n      },\n      (err) => {\n        console.log(err);\n      }\n    );\n  }\n}\n","<!-- <mat-tab-group class=\"one\" (selectedTabChange)=\"makeItFocused($event)\" color=\"warn\"> -->\n<!-- Personne Physique  -->\n<!-- \n    <mat-tab label=\"Les Demandes Réseaux Sociaux\"> -->\n<div *ngIf=\"partenaire\">\n  <div style=\"display: flex;\n  margin: 10px;\">\n    <div class=\"fields\">\n      <mat-form-field class=\"filter\" appearance=\"fill\">\n        <mat-label>Selectionner la source</mat-label>\n        <mat-select [(ngModel)]=\"sourceSelectedValue\" (selectionChange)=\"sourceChanged()\">\n          <mat-option *ngFor=\"let statut of source\" [value]=\"statut.value\">\n            {{ statut.viewValue }}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n      <div class=\"filter\" *ngIf=\"FX_selected\" appearance=\"fill\">\n        <input (change)=\"incomingfile($event)\" name=\"file\" id=\"file\" class=\"fileInput\" type=\"file\"\n          accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\" />\n        <label id=\"fileLibel\" for=\"file\">Selectionner le fichier</label>\n      </div>\n      <mat-form-field class=\"filter\" *ngIf=\"S_selected && !partenaire\" appearance=\"fill\">\n        <mat-label>Selectionner la nature</mat-label>\n        <mat-select [(ngModel)]=\"natureSelectedValue\" (selectionChange)=\"natureChanged()\">\n          <mat-option *ngFor=\"let statut of nature\" [value]=\"statut.value\">\n            {{ statut.viewValue }}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n      <mat-form-field *ngIf=\"natureSelectedValue === 'qualifier'\" class=\"filter\" appearance=\"fill\">\n        <mat-label>Filtrer par statut qualification</mat-label>\n        <mat-select [(ngModel)]=\"statutQualifierSelectedValue\" (selectionChange)=\"onChangeAll('')\">\n          <mat-option *ngFor=\"let statut of statusQualifications\" [value]=\"statut.statutC\">\n            {{ statut.statut }}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n      <mat-form-field *ngIf=\"natureSelectedValue === 'prequalifier'\" class=\"filter\" appearance=\"fill\">\n        <mat-label>Filtrer par résultat du traitement</mat-label>\n        <mat-select [(ngModel)]=\"statutSelectedValue\" (selectionChange)=\"onChangeAll('')\">\n          <mat-option *ngFor=\"let statut of resultatTraitement\" [value]=\"statut.statutC\">\n            {{ statut.statut }}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n      <mat-form-field *ngIf=\"natureSelectedValue === 'evolan'\" class=\"filter\" appearance=\"fill\">\n        <mat-label>Filtrer par statut de la demande</mat-label>\n        <mat-select [(ngModel)]=\"selectedValue\" (selectionChange)=\"onChangeAll('')\">\n          <mat-option *ngFor=\"let statut of status\" [value]=\"statut.value\">\n            {{ statut.viewValue }}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n      <mat-form-field *ngIf=\"dataSource\" class=\"filter mot_cle\" appearance=\"fill\">\n        <mat-label>Mot Clé</mat-label>\n        <input [(ngModel)]=\"selectedCINValue\" (keyup)=\"onChangeAll('')\" type=\"text\" maxlength=\"32\" minlength=\"3\"\n          matInput />\n      </mat-form-field>\n  \n    </div>\n  \n    <form *ngIf=\"dataSource\" class=\"fieldss\" [formGroup]=\"form2\">\n      <mat-form-field style=\"width: 130px\" class=\"filter\" appearance=\"fill\">\n        <input matInput placeholder=\"De\" [matDatepicker]=\"picker1\" formControlName=\"fromDate\" required\n          (click)=\"picker1.open()\" />\n        <mat-datepicker-toggle matSuffix [for]=\"picker1\"></mat-datepicker-toggle>\n        <mat-datepicker #picker1></mat-datepicker>\n      </mat-form-field>\n  \n      <mat-form-field style=\"width: 130px\" class=\"filter\" appearance=\"fill\">\n        <input (keypress)=\"shoit()\" matInput placeholder=\"à\" [matDatepicker]=\"picker2\" formControlName=\"toDate\" required\n          (click)=\"picker2.open()\" />\n        <mat-datepicker-toggle matSuffix [for]=\"picker2\"></mat-datepicker-toggle>\n        <mat-datepicker #picker2></mat-datepicker>\n      </mat-form-field>\n      <br />\n      <button class=\"btnr\" mat-raised-button color=\"warn\" (click)=\"onChangeAll('dem')\">\n        Par date_dem\n      </button>\n      <button class=\"btnr\" mat-raised-button color=\"warn\" (click)=\"onChangeAll('trait')\">\n        Par date_trait\n      </button>\n    </form>\n  </div>\n  <ngb-alert *ngIf=\"isAlert\" type=\"danger\">{{ alert }}</ngb-alert>\n  <!--  Table-->\n  <mat-spinner style=\"margin: 0 auto\" *ngIf=\"!dataSource && isSourceSelected && sourceChange && isNatureSelected\">\n  </mat-spinner>\n  \n  <h1 *ngIf=\"!dataSource && !isSourceSelected && sourceChange\" style=\"text-align: center; font-weight: 700;\">No data</h1>\n  <div class=\"navigation-buttons\" *ngIf=\"dataSource\">\n    <button mat-raised-button (click)=\"Previous()\">Précédent</button>\n    <button mat-raised-button id=\"page\">page {{pageNumber+1}} / {{nbr}} | total: {{total}}</button>\n    <button mat-raised-button (click)=\"Next()\">Suivant</button>\n  </div>\n  <div *ngIf=\"dataSource\">\n    <div>\n      <table mat-table [dataSource]=\"dataSource\" matTableExporter #exporter=\"matTableExporter\" class=\"mat-elevation-z8\"\n        matSort>\n        <!-- <ng-container matColumnDef=\"valeurid\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>V_ID</th>\n          <td mat-cell *matCellDef=\"let element\">{{ element.valeurid }}</td>\n        </ng-container> -->\n        <!-- <ng-container matColumnDef=\"id\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>ID</th>\n          <td mat-cell *matCellDef=\"let element\">{{ element.id }}</td>\n        </ng-container> -->\n        <ng-container matColumnDef=\"typeclient\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header></th>\n          <td mat-cell *matCellDef=\"let element\">{{ element.typeclient }}</td>\n        </ng-container>\n        <ng-container matColumnDef=\"nom\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>Nom</th>\n          <td mat-cell *matCellDef=\"let element\">{{ element.nom }} {{ element.prenom }} </td>\n        </ng-container>\n        <ng-container matColumnDef=\"raisonsociale\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>Raison <br> Social</th>\n          <td mat-cell *matCellDef=\"let element\">{{ element.raisonsociale }} {{ element.raisonsocialesuite }} </td>\n        </ng-container>\n        <!-- <ng-container matColumnDef=\"prenom\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header></th>\n          <td mat-cell *matCellDef=\"let element\">{{ element.prenom }}</td>\n        </ng-container> -->\n        <ng-container matColumnDef=\"cin\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>CIN</th>\n          <td mat-cell *matCellDef=\"let element\">{{ element.cin }}</td>\n        </ng-container>\n        <ng-container matColumnDef=\"rcommerce\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>RC</th>\n          <td mat-cell *matCellDef=\"let element\"> {{ element.rcommerce }} </td>\n        </ng-container>\n        <!-- <ng-container matColumnDef=\"email\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>Email</th>\n          <td mat-cell *matCellDef=\"let element\">{{ element.email }}</td>\n        </ng-container> -->\n        <ng-container matColumnDef=\"ville\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>Ville</th>\n          <td mat-cell *matCellDef=\"let element\">{{ element.ville }}</td>\n        </ng-container>\n        <ng-container matColumnDef=\"agence\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>Agence</th>\n          <td mat-cell *matCellDef=\"let element\">{{ element.agence }}</td>\n        </ng-container>\n        <ng-container matColumnDef=\"telgsm\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>Tél</th>\n          <td mat-cell *matCellDef=\"let element\">{{ element.telgsm }}</td>\n        </ng-container>\n        <!-- <ng-container matColumnDef=\"codeagence\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>Code<br />PDV</th>\n          <td mat-cell *matCellDef=\"let element\">{{ element.origine=='AW'?element.codeagencecible:element.codeagence }}\n          </td>\n        </ng-container>\n        <ng-container matColumnDef=\"emaildr\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>DR</th>\n          <td mat-cell *matCellDef=\"let element\">\n            {{ element.emaildr ? element.emaildr.split(\"@\")[0] : \"\" }}\n          </td>\n        </ng-container>\n        <ng-container matColumnDef=\"emailds\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>DS</th>\n          <td mat-cell *matCellDef=\"let element\">\n            {{ element.emailds ? element.emailds.split(\"@\")[0] : \"\" }}\n          </td>\n        </ng-container> -->\n        <ng-container matColumnDef=\"entry_date\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>Date<br />Dem</th>\n          <td mat-cell *matCellDef=\"let element\">\n            {{ element.entry_date | date: \"dd/MM/yyyy\" }}\n          </td>\n        </ng-container>\n        <!-- <ng-container matColumnDef=\"dateinsert\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>Date<br />Trait</th>\n          <td mat-cell *matCellDef=\"let element\">\n            {{ element.dateinsert | date: \"dd/MM/yyyy\" }}\n          </td>\n  \n        </ng-container>\n        <ng-container matColumnDef=\"delay_trait\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>Delais<br />Trait</th>\n          <td mat-cell *matCellDef=\"let element\"> {{ element.delay_trait }}</td>\n        </ng-container> -->\n        <ng-container matColumnDef=\"montantdemande\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>Montant</th>\n          <td mat-cell *matCellDef=\"let element\">{{ element.montantdemande }}</td>\n        </ng-container>\n        <ng-container matColumnDef=\"dateDeblocage\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>Date<br />Deb</th>\n          <td mat-cell *matCellDef=\"let element\">\n            {{ element.dateDeblocage }}\n          </td>\n        </ng-container>\n        <!-- <ng-container matColumnDef=\"secteur\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>Secteur</th>\n          <td mat-cell *matCellDef=\"let element\">{{ element.secteur }}</td>\n        </ng-container> -->\n   \n        <!-- <ng-container matColumnDef=\"nbrappel\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>\n            Nbr<br />Validations\n          </th>\n          <td mat-cell *matCellDef=\"let element\"><span\n              [ngStyle]=\"{'color':element.numtiers? 'green':'red', 'font-size':'40px'}\">&#8226;</span> {{ element.nbrappel\n            }}</td>\n        </ng-container> -->\n        <!-- <ng-container matColumnDef=\"resultatTraitement\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>\n            Pré<br />qualif\n          </th>\n          <td mat-cell *matCellDef=\"let element\">\n            {{\n            element.resultatTraitement === \"nouvelle\"\n            ? \"\"\n            : (element.resultatTraitement===\"Doublant\" && element.origine===\"AW\")?\"Doublon\":element.resultatTraitement\n            }}\n          </td>\n        </ng-container> -->\n        <!-- <ng-container matColumnDef=\"qualification\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>Qualification</th>\n          <td mat-cell *matCellDef=\"let element\">\n            {{ element.qualification }}\n          </td>\n        </ng-container> -->\n        <!-- <ng-container matColumnDef=\"statuttraitement\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>\n            Statut<br />Dem\n          </th>\n          <td mat-cell *matCellDef=\"let element\">\n            {{\n            !element.numtiers?element.statuttraitement === \"Demande envoyée\"? \"\":\n            element.statuttraitement:element.statuttraitement\n            }}\n          </td>\n        </ng-container> -->\n        <!-- <ng-container matColumnDef=\"montantdebloque\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>\n            Montant<br />Deb\n          </th>\n          <td mat-cell *matCellDef=\"let element\">\n            {{ element.montantdebloque }}\n          </td>\n        </ng-container> -->\n<!--   \n        <ng-container matColumnDef=\"user\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>User</th>\n          <td mat-cell *matCellDef=\"let element\"> {{ element.user }} </td>\n        </ng-container>\n  \n  \n        <ng-container matColumnDef=\"raisonsociale\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>Nom_TPE</th>\n          <td mat-cell *matCellDef=\"let element\"> {{ element.raisonsociale }} </td>\n        </ng-container>\n        <ng-container matColumnDef=\"ice\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>ICE</th>\n          <td mat-cell *matCellDef=\"let element\"> {{ element.ice }} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"utm_produit\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>PRODUIT</th>\n          <td mat-cell *matCellDef=\"let element\"> {{ element.utm_produit }} </td>\n        </ng-container>\n        <ng-container matColumnDef=\"ref_campagne\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>REF</th>\n          <td mat-cell *matCellDef=\"let element\"> {{ element.ref_campagne }} </td>\n        </ng-container>\n        <ng-container matColumnDef=\"utm_source\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>SOURCE</th>\n          <td mat-cell *matCellDef=\"let element\"> {{ element.utm_source }} </td>\n        </ng-container> -->\n        <!--  -->\n        <ng-container matColumnDef=\"options\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header></th>\n          <td mat-cell *matCellDef=\"let element\">\n            <mat-icon *ngIf=\"!(natureSelectedValue==='nouvelle' && !role.startsWith('AGT'))\"  (click)=\"send(element)\"\n              style=\"position: relative; margin-right: 4px; bottom: 3px\" matPrefix><img style=\"width: 30px\" width=\"40px\"\n                src=\"../../../assets/more.png\" alt=\"more details\" /></mat-icon>\n          </td>\n        </ng-container>\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <!-- [style.color]=\"getColor(row.nouveau)\" -->\n        <tr mat-row\n          [ngStyle]=\"{ 'background-color': row.delay_trait>10 && row.isSomethingElse? '#ff6f6f' : 'white'}\"\n          [ngClass]=\"{'make_blue':row.nouveau==1}\"\n          *matRowDef=\"let row; columns: displayedColumns\"></tr>\n      </table>\n    </div>\n  </div>\n  \n  <div class=\"navigation-buttons\" *ngIf=\"dataSource\">\n    <button mat-raised-button (click)=\"Previous()\">Précédent</button>\n    <button mat-raised-button id=\"page\">page {{pageNumber+1}} / {{nbr}} | total: {{total}}</button>\n    <button mat-raised-button (click)=\"Next()\">Suivant</button>\n  </div>\n  \n  <div style=\"margin: 0px auto; display: table;position: relative;top: 15px;\">\n    <button *ngIf=\"isBO\" class=\"btnr\" mat-raised-button color=\"warn\" (click)=\"notifydsdr()\">\n      Notifier les dr/ds\n    </button>\n  \n    <button *ngIf=\"isBO\" class=\"btnr\" mat-raised-button color=\"warn\" (click)=\"rappelerdsdr()\">\n      Rappeler les dr/ds\n    </button>\n    <button *ngIf=\"isBO\" class=\"btnr\" mat-raised-button color=\"warn\" (click)=\"notifyDPRM()\">\n      Notifier le DPRM\n    </button>\n    <button *ngIf=\"isBO\" class=\"btnr\" mat-raised-button color=\"warn\" (click)=\"MAJdemandeSorts()\">\n      Récupération des sorts\n    </button>\n    <mat-spinner style=\"margin: 0 auto\" *ngIf=\"batchfinished\">\n    </mat-spinner>\n    \n    <button *ngIf=\"\n      dataSource &&\n      (natureSelectedValue == 'qualifier' ||\n        natureSelectedValue == 'prequalifier')\n    \" class=\"btnr\" mat-raised-button color=\"warn\" (click)=\"exportAsExcelFile()\">\n      Reporting de jour\n    </button>\n    <button style=\"margin: 10px\" mat-raised-button *ngIf=\"dataSource\" color=\"warn\" (click)=\"exportDataAsExcelFile()\">\n      Exporter en format Excel\n    </button>\n  </div>\n</div>","export const environment = {\n  production: true,\n  url:\"https://192.168.150.40:8888/api\",\n  // url_opendata:\"https://opendatapreprod2.alamana.org.ma:8888/api\"\n};\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ChangePasswordComponent } from 'src/app/components/change-password/change-password.component';\nimport { ForgotPasswordComponent } from 'src/app/components/forgot-password/forgot-password.component';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  hide = true;\n  data:FormGroup\n  constructor(private dialog:MatDialog,private route:Router, private authService:AuthService, private fb:FormBuilder, private snackBar:MatSnackBar) { }\n\n  ngOnInit(): void {\n    var connectbtn = document.getElementById('connect')\n\n    this.data = this.fb.group({\n      identifiant:['', Validators.required],\n      password:['', Validators.required],\n      remember:['']\n    })\n  }\n\n  connectt(event){\n    \n    if (event.keyCode === 13 ){\n      this.connect()\n    }\n  }\n  connect(){\n    \n    this.authService.login(this.data.value).subscribe((res:any)=>{\n      localStorage.setItem('token',res.token)\n      localStorage.setItem('role',res.role)\n      localStorage.setItem('user',res.user)\n      localStorage.setItem('origins',res.origins)\n      localStorage.setItem('organismes',res.organismes)\n      localStorage.setItem('regions',res.regions)\n      this.route.navigate(['home'])\n    },(err)=>{\n        if (err.status && err.status === 401) {\n          let snackBarRef = this.snackBar.open('identifiant ou password incorrect ou encours de validation!', 'OK', {duration:15000, horizontalPosition:'center', verticalPosition:'top'});\n          snackBarRef.onAction().subscribe(()=>{\n            snackBarRef.dismiss()\n          })\n        }\n        else {\n          let snackBarRef = this.snackBar.open('Erreur serveur ressayer plus tard!', 'OK', {duration:15000, horizontalPosition:'center', verticalPosition:'top'});\n          snackBarRef.onAction().subscribe(()=>{\n            snackBarRef.dismiss()\n          })\n        }\n    })\n    \n  }\n\n  changePassword(){\n    const dialogRef = this.dialog.open(ChangePasswordComponent, {\n      disableClose: true,\n      data: {},\n    });\n    dialogRef.afterClosed().subscribe((e)=>{\n      if (e){\n      }\n    })\n  }\n  forgotPassword(){\n    const dialogRef = this.dialog.open(ForgotPasswordComponent, {\n      disableClose: true,\n      data: {},\n    });\n    dialogRef.afterClosed().subscribe((e)=>{\n      if (e){\n      }\n    })\n  }\n}\n","<div class=\"on_top_of_body\">\n  <div class=\"form_container\">\n    <div class=\"logo\">\n      <img width=\"150px\" height=\"150px\" src=\"../../../assets/logo.png\" />\n    </div>\n\n    <div class=\"open_data\">\n      <h1>Plateforme de pré-qualification</h1>\n    </div>\n    <form [formGroup]=\"data\">\n      <div style=\"margin: 15px auto;\">\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Identifiant</mat-label>\n          <input formControlName=\"identifiant\" matInput placeholder=\"Identifiant\" />\n          <mat-icon style=\"position: relative;\n          bottom: 7px;\" matPrefix><img src=\"../../../assets/account.png\" alt=\"account icon\"></mat-icon>\n          <mat-hint *ngIf=\"false\">Hint</mat-hint>\n        </mat-form-field>\n      </div>\n      <div style=\"margin: 15px auto;\">\n        <mat-form-field appearance=\"fill\">\n          <mat-label> Mot de passe</mat-label>\n          <input formControlName=\"password\" matInput [type]=\"hide ? 'password' : 'text'\" placeholder=\"Mot de passe\" />\n          <mat-icon style=\"position: relative;\n          bottom: 7px;\" matPrefix><img src=\"../../../assets/lock-open.png\" alt=\"account icon\"></mat-icon>\n          <mat-hint *ngIf=\"false\">Hint</mat-hint>\n          <mat-icon (click)=\"hide=!hide\" style=\"position: relative;\n          bottom: 7px;\" matSuffix><img [src]=\"hide?'../../../assets/invisible.png':'../../../assets/visible.png'\" alt=\"account icon\"></mat-icon>\n        </mat-form-field>\n        <p class=\"little-link\">\n          <a (click)=\"changePassword()\">Changer mot de passe</a>\n          <a (click)=\"forgotPassword()\">mot de passe oublié?</a>\n        </p>\n      </div>\n\n      <!-- <p class=\"remember_me\">\n        <mat-checkbox formControlName=\"remember\" color=\"warn\">Se rappeler de moi</mat-checkbox>\n        <a href=\"#\">Mot de passe oublié?</a>\n      </p> -->\n      <p class=\"login\">\n        <button id=\"connect\" [disabled]=\"!data.valid\" mat-raised-button (keypress)=\"connectt($event)\" (click)=\"connect()\">\n          <h1>se connecter</h1>\n        </button>\n      </p>\n    </form>\n\n\n\n    <!--\n  <p class=\"login\">\n    <button mat-raised-button (click)=\"setToken()\"><h1>Get Token</h1></button>\n  </p>\n  -->\n\n    <!-- <p style=\"text-align: center\"><a href=\"/register\">Créer un compte</a></p> -->\n  </div>\n</div>","import { Component, Inject, OnInit } from '@angular/core';\nimport { DateAdapter } from '@angular/material/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { CallServerService } from 'src/app/services/call-server.service';\n\n@Component({\n  selector: 'app-agence-reorientation',\n  templateUrl: './agence-reorientation.component.html',\n  styleUrls: ['./agence-reorientation.component.scss']\n})\nexport class AgenceReorientationComponent implements OnInit {\n  agences: any;\n  agence: any;\n  ville: any;\n  agenceHint = false;\n  villeHint = false;\n  daterendezvous;\n  dateHint: boolean;\n  codeagence: any;\n    constructor(private dateadapter: DateAdapter<Date>,private callService: CallServerService, private matdiagRef: MatDialogRef<AgenceReorientationComponent>, @Inject(MAT_DIALOG_DATA) public data: any) {\n    let ville = data.personne.ville\n    this.ville=data.personne.ville\n    this.codeagence=data.personne.codeagence\n    this.dateadapter.setLocale('en-GB'); // dd/MM/YYYY\n\n\n    this.callService.getAgencesExecpt({ ville: ville, except:this.codeagence }).subscribe((res: any) => {\n      this.agences = res.results;\n    })\n  }\n\n  ngOnInit(): void {\n  }\n\n  annuler(){\n    this.matdiagRef.close()\n  }\n  validate() {\n    if (!this.daterendezvous) {\n      this.dateHint  = true\n      return\n    }\n    if (!this.ville && !this.data.rdv) {\n      this.villeHint  = true\n      return\n    }\n    if (!this.agence && !this.data.rdv) {\n      this.agenceHint  = true\n      return\n    }\n    this.matdiagRef.close({ agence: this.agence, ville: this.ville, daterendezvous:this.daterendezvous })\n  }\n\n  getcodeagences() {\n\n    this.callService.getAgencesExecpt({ ville: this.ville,except:this.codeagence }).subscribe((res: any) => {\n      this.agences = res.results;\n    })\n  }\n}\n","<div mat-dialog-content>\n    <div *ngIf=\"!data.rdv\">\n        <h1>Réorienter vers :</h1>\n        \n    </div>\n    <form>\n\n        <div style=\"margin: 15px auto;\" *ngIf=\"!data.rdv\">\n            <mat-form-field appearance=\"standard\">\n                <mat-label>La ville</mat-label>\n                <mat-select [(ngModel)]=\"ville\" [ngModelOptions]=\"{standalone: true}\" (selectionChange)=\"getcodeagences()\"\n                    [ngModelOptions]=\"{standalone: true}\">\n                    <mat-option *ngFor=\"let ville of data.villes\" [value]=\"ville.ville\">\n                        {{ ville.ville }}\n                    </mat-option>\n                </mat-select>\n                <mat-hint style=\"color: crimson\" *ngIf=\"villeHint\">Ville est obligatoire</mat-hint>\n            </mat-form-field>\n        </div>\n        <div style=\"margin: 15px auto;\" *ngIf=\"!data.rdv\">\n            <mat-form-field appearance=\"standard\">\n                <mat-label>l'agence</mat-label>\n                <mat-select [(ngModel)]=\"agence\" [ngModelOptions]=\"{standalone: true}\" [ngModelOptions]=\"{standalone: true}\">\n                    <mat-option *ngFor=\"let agence of agences\" [value]=\"agence\">\n                        {{ agence.agence }} ({{agence.codeagence}})\n                    </mat-option>\n                </mat-select>\n                <mat-hint style=\"color: crimson\" *ngIf=\"agenceHint\">Agence est obligatoire</mat-hint>\n            </mat-form-field>\n        </div>\n        <div style=\"margin: 15px auto;\">\n            <mat-form-field appearance=\"fill\">\n              <mat-label>Date Rendez-Vous</mat-label>\n              <input [(ngModel)]=\"daterendezvous\" [ngModelOptions]=\"{standalone: true}\" matInput [matDatepicker]=\"daterendezvouspicker\" />\n              <mat-datepicker-toggle matSuffix [for]=\"daterendezvouspicker\"></mat-datepicker-toggle>\n              <mat-datepicker #daterendezvouspicker></mat-datepicker>\n              <mat-hint style=\"color: crimson\" *ngIf=\"dateHint\">Date est obligatoire</mat-hint>\n            </mat-form-field>\n          </div>\n    </form>\n</div>\n<div mat-dialog-actions>\n    <button mat-flat-button color=\"warn\" (click)=\"annuler()\">Annuler</button>\n    <button mat-flat-button color=\"primary\" (click)=\"validate()\">OK</button>\n</div>","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router'\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class PmDataNewService\r\n//  implements Resolve<Object>\r\n {\r\n  public url=environment.url;\r\n  constructor(private http:HttpClient) { }\r\n  // resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): any[] | Observable<Object> | Promise<any[]> {\r\n  //   return this.http.post(`${this.url}/nouvellesdemandes',{})\r\n  // }\r\n\r\n  getNouvellesDemandes(offset,searchobj){\r\n    return this.http.post(`${this.url}/nouvellesdemandes`, {...{offset}, ...searchobj})\r\n  }\r\n  getDemandesEvolan(offset,searchobj){\r\n    return this.http.post(`${this.url}/demandesRS`, {...{offset}, ...searchobj})\r\n  }\r\n  getDemandesQualifier(offset, searchobj){\r\n    return this.http.post(`${this.url}/demandesqualifer`, {...{offset}, ...searchobj})\r\n  }\r\n  getDemandesPrequalifies(offset, searchobj){\r\n    return this.http.post(`${this.url}/demandesPrequalifies`, {...{offset}, ...searchobj})\r\n  }\r\n\r\n  getDemandesPrequalifQualif(data){\r\n    return this.http.post(`${this.url}/getDemandesPrequalifQualif`, data)\r\n  }\r\n  setDemandesPrequalifQualif(data){\r\n    return this.http.post(`${this.url}/setDemandesPrequalifQualif`, data)\r\n  }\r\n}\r\n","import { Injectable, Injector } from '@angular/core';\r\nimport { HttpErrorResponse, HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http'\r\nimport {AuthService} from './auth.service'\r\nimport { catchError } from 'rxjs/operators';\r\nimport { throwError } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n@Injectable()\r\nexport class TokenInterceptorService implements HttpInterceptor  {\r\n \r\n  constructor(private injector:Injector, private route: Router) { \r\n  }\r\n  intercept(request: HttpRequest<any>, next: HttpHandler) {\r\n    let authService = this.injector.get(AuthService)\r\n    var clonedRequest = request.clone({\r\n        setHeaders: {\r\n          Authorization: `Bearer ${authService.getToken()}`\r\n        }\r\n      });\r\n    return next.handle(clonedRequest).pipe(catchError(error => {\r\n      if (error instanceof HttpErrorResponse && error.status === 401) {\r\n        this.route.navigate(['login']);\r\n      }\r\n      return throwError(error);\r\n    }));\r\n  }\r\n}\r\n","var map = {\n\t\"./af\": \"K/tc\",\n\t\"./af.js\": \"K/tc\",\n\t\"./ar\": \"jnO4\",\n\t\"./ar-dz\": \"o1bE\",\n\t\"./ar-dz.js\": \"o1bE\",\n\t\"./ar-kw\": \"Qj4J\",\n\t\"./ar-kw.js\": \"Qj4J\",\n\t\"./ar-ly\": \"HP3h\",\n\t\"./ar-ly.js\": \"HP3h\",\n\t\"./ar-ma\": \"CoRJ\",\n\t\"./ar-ma.js\": \"CoRJ\",\n\t\"./ar-sa\": \"gjCT\",\n\t\"./ar-sa.js\": \"gjCT\",\n\t\"./ar-tn\": \"bYM6\",\n\t\"./ar-tn.js\": \"bYM6\",\n\t\"./ar.js\": \"jnO4\",\n\t\"./az\": \"SFxW\",\n\t\"./az.js\": \"SFxW\",\n\t\"./be\": \"H8ED\",\n\t\"./be.js\": \"H8ED\",\n\t\"./bg\": \"hKrs\",\n\t\"./bg.js\": \"hKrs\",\n\t\"./bm\": \"p/rL\",\n\t\"./bm.js\": \"p/rL\",\n\t\"./bn\": \"kEOa\",\n\t\"./bn-bd\": \"loYQ\",\n\t\"./bn-bd.js\": \"loYQ\",\n\t\"./bn.js\": \"kEOa\",\n\t\"./bo\": \"0mo+\",\n\t\"./bo.js\": \"0mo+\",\n\t\"./br\": \"aIdf\",\n\t\"./br.js\": \"aIdf\",\n\t\"./bs\": \"JVSJ\",\n\t\"./bs.js\": \"JVSJ\",\n\t\"./ca\": \"1xZ4\",\n\t\"./ca.js\": \"1xZ4\",\n\t\"./cs\": \"PA2r\",\n\t\"./cs.js\": \"PA2r\",\n\t\"./cv\": \"A+xa\",\n\t\"./cv.js\": \"A+xa\",\n\t\"./cy\": \"l5ep\",\n\t\"./cy.js\": \"l5ep\",\n\t\"./da\": \"DxQv\",\n\t\"./da.js\": \"DxQv\",\n\t\"./de\": \"tGlX\",\n\t\"./de-at\": \"s+uk\",\n\t\"./de-at.js\": \"s+uk\",\n\t\"./de-ch\": \"u3GI\",\n\t\"./de-ch.js\": \"u3GI\",\n\t\"./de.js\": \"tGlX\",\n\t\"./dv\": \"WYrj\",\n\t\"./dv.js\": \"WYrj\",\n\t\"./el\": \"jUeY\",\n\t\"./el.js\": \"jUeY\",\n\t\"./en-au\": \"Dmvi\",\n\t\"./en-au.js\": \"Dmvi\",\n\t\"./en-ca\": \"OIYi\",\n\t\"./en-ca.js\": \"OIYi\",\n\t\"./en-gb\": \"Oaa7\",\n\t\"./en-gb.js\": \"Oaa7\",\n\t\"./en-ie\": \"4dOw\",\n\t\"./en-ie.js\": \"4dOw\",\n\t\"./en-il\": \"czMo\",\n\t\"./en-il.js\": \"czMo\",\n\t\"./en-in\": \"7C5Q\",\n\t\"./en-in.js\": \"7C5Q\",\n\t\"./en-nz\": \"b1Dy\",\n\t\"./en-nz.js\": \"b1Dy\",\n\t\"./en-sg\": \"t+mt\",\n\t\"./en-sg.js\": \"t+mt\",\n\t\"./eo\": \"Zduo\",\n\t\"./eo.js\": \"Zduo\",\n\t\"./es\": \"iYuL\",\n\t\"./es-do\": \"CjzT\",\n\t\"./es-do.js\": \"CjzT\",\n\t\"./es-mx\": \"tbfe\",\n\t\"./es-mx.js\": \"tbfe\",\n\t\"./es-us\": \"Vclq\",\n\t\"./es-us.js\": \"Vclq\",\n\t\"./es.js\": \"iYuL\",\n\t\"./et\": \"7BjC\",\n\t\"./et.js\": \"7BjC\",\n\t\"./eu\": \"D/JM\",\n\t\"./eu.js\": \"D/JM\",\n\t\"./fa\": \"jfSC\",\n\t\"./fa.js\": \"jfSC\",\n\t\"./fi\": \"gekB\",\n\t\"./fi.js\": \"gekB\",\n\t\"./fil\": \"1ppg\",\n\t\"./fil.js\": \"1ppg\",\n\t\"./fo\": \"ByF4\",\n\t\"./fo.js\": \"ByF4\",\n\t\"./fr\": \"nyYc\",\n\t\"./fr-ca\": \"2fjn\",\n\t\"./fr-ca.js\": \"2fjn\",\n\t\"./fr-ch\": \"Dkky\",\n\t\"./fr-ch.js\": \"Dkky\",\n\t\"./fr.js\": \"nyYc\",\n\t\"./fy\": \"cRix\",\n\t\"./fy.js\": \"cRix\",\n\t\"./ga\": \"USCx\",\n\t\"./ga.js\": \"USCx\",\n\t\"./gd\": \"9rRi\",\n\t\"./gd.js\": \"9rRi\",\n\t\"./gl\": \"iEDd\",\n\t\"./gl.js\": \"iEDd\",\n\t\"./gom-deva\": \"qvJo\",\n\t\"./gom-deva.js\": \"qvJo\",\n\t\"./gom-latn\": \"DKr+\",\n\t\"./gom-latn.js\": \"DKr+\",\n\t\"./gu\": \"4MV3\",\n\t\"./gu.js\": \"4MV3\",\n\t\"./he\": \"x6pH\",\n\t\"./he.js\": \"x6pH\",\n\t\"./hi\": \"3E1r\",\n\t\"./hi.js\": \"3E1r\",\n\t\"./hr\": \"S6ln\",\n\t\"./hr.js\": \"S6ln\",\n\t\"./hu\": \"WxRl\",\n\t\"./hu.js\": \"WxRl\",\n\t\"./hy-am\": \"1rYy\",\n\t\"./hy-am.js\": \"1rYy\",\n\t\"./id\": \"UDhR\",\n\t\"./id.js\": \"UDhR\",\n\t\"./is\": \"BVg3\",\n\t\"./is.js\": \"BVg3\",\n\t\"./it\": \"bpih\",\n\t\"./it-ch\": \"bxKX\",\n\t\"./it-ch.js\": \"bxKX\",\n\t\"./it.js\": \"bpih\",\n\t\"./ja\": \"B55N\",\n\t\"./ja.js\": \"B55N\",\n\t\"./jv\": \"tUCv\",\n\t\"./jv.js\": \"tUCv\",\n\t\"./ka\": \"IBtZ\",\n\t\"./ka.js\": \"IBtZ\",\n\t\"./kk\": \"bXm7\",\n\t\"./kk.js\": \"bXm7\",\n\t\"./km\": \"6B0Y\",\n\t\"./km.js\": \"6B0Y\",\n\t\"./kn\": \"PpIw\",\n\t\"./kn.js\": \"PpIw\",\n\t\"./ko\": \"Ivi+\",\n\t\"./ko.js\": \"Ivi+\",\n\t\"./ku\": \"JCF/\",\n\t\"./ku.js\": \"JCF/\",\n\t\"./ky\": \"lgnt\",\n\t\"./ky.js\": \"lgnt\",\n\t\"./lb\": \"RAwQ\",\n\t\"./lb.js\": \"RAwQ\",\n\t\"./lo\": \"sp3z\",\n\t\"./lo.js\": \"sp3z\",\n\t\"./lt\": \"JvlW\",\n\t\"./lt.js\": \"JvlW\",\n\t\"./lv\": \"uXwI\",\n\t\"./lv.js\": \"uXwI\",\n\t\"./me\": \"KTz0\",\n\t\"./me.js\": \"KTz0\",\n\t\"./mi\": \"aIsn\",\n\t\"./mi.js\": \"aIsn\",\n\t\"./mk\": \"aQkU\",\n\t\"./mk.js\": \"aQkU\",\n\t\"./ml\": \"AvvY\",\n\t\"./ml.js\": \"AvvY\",\n\t\"./mn\": \"lYtQ\",\n\t\"./mn.js\": \"lYtQ\",\n\t\"./mr\": \"Ob0Z\",\n\t\"./mr.js\": \"Ob0Z\",\n\t\"./ms\": \"6+QB\",\n\t\"./ms-my\": \"ZAMP\",\n\t\"./ms-my.js\": \"ZAMP\",\n\t\"./ms.js\": \"6+QB\",\n\t\"./mt\": \"G0Uy\",\n\t\"./mt.js\": \"G0Uy\",\n\t\"./my\": \"honF\",\n\t\"./my.js\": \"honF\",\n\t\"./nb\": \"bOMt\",\n\t\"./nb.js\": \"bOMt\",\n\t\"./ne\": \"OjkT\",\n\t\"./ne.js\": \"OjkT\",\n\t\"./nl\": \"+s0g\",\n\t\"./nl-be\": \"2ykv\",\n\t\"./nl-be.js\": \"2ykv\",\n\t\"./nl.js\": \"+s0g\",\n\t\"./nn\": \"uEye\",\n\t\"./nn.js\": \"uEye\",\n\t\"./oc-lnc\": \"Fnuy\",\n\t\"./oc-lnc.js\": \"Fnuy\",\n\t\"./pa-in\": \"8/+R\",\n\t\"./pa-in.js\": \"8/+R\",\n\t\"./pl\": \"jVdC\",\n\t\"./pl.js\": \"jVdC\",\n\t\"./pt\": \"8mBD\",\n\t\"./pt-br\": \"0tRk\",\n\t\"./pt-br.js\": \"0tRk\",\n\t\"./pt.js\": \"8mBD\",\n\t\"./ro\": \"lyxo\",\n\t\"./ro.js\": \"lyxo\",\n\t\"./ru\": \"lXzo\",\n\t\"./ru.js\": \"lXzo\",\n\t\"./sd\": \"Z4QM\",\n\t\"./sd.js\": \"Z4QM\",\n\t\"./se\": \"//9w\",\n\t\"./se.js\": \"//9w\",\n\t\"./si\": \"7aV9\",\n\t\"./si.js\": \"7aV9\",\n\t\"./sk\": \"e+ae\",\n\t\"./sk.js\": \"e+ae\",\n\t\"./sl\": \"gVVK\",\n\t\"./sl.js\": \"gVVK\",\n\t\"./sq\": \"yPMs\",\n\t\"./sq.js\": \"yPMs\",\n\t\"./sr\": \"zx6S\",\n\t\"./sr-cyrl\": \"E+lV\",\n\t\"./sr-cyrl.js\": \"E+lV\",\n\t\"./sr.js\": \"zx6S\",\n\t\"./ss\": \"Ur1D\",\n\t\"./ss.js\": \"Ur1D\",\n\t\"./sv\": \"X709\",\n\t\"./sv.js\": \"X709\",\n\t\"./sw\": \"dNwA\",\n\t\"./sw.js\": \"dNwA\",\n\t\"./ta\": \"PeUW\",\n\t\"./ta.js\": \"PeUW\",\n\t\"./te\": \"XLvN\",\n\t\"./te.js\": \"XLvN\",\n\t\"./tet\": \"V2x9\",\n\t\"./tet.js\": \"V2x9\",\n\t\"./tg\": \"Oxv6\",\n\t\"./tg.js\": \"Oxv6\",\n\t\"./th\": \"EOgW\",\n\t\"./th.js\": \"EOgW\",\n\t\"./tk\": \"Wv91\",\n\t\"./tk.js\": \"Wv91\",\n\t\"./tl-ph\": \"Dzi0\",\n\t\"./tl-ph.js\": \"Dzi0\",\n\t\"./tlh\": \"z3Vd\",\n\t\"./tlh.js\": \"z3Vd\",\n\t\"./tr\": \"DoHr\",\n\t\"./tr.js\": \"DoHr\",\n\t\"./tzl\": \"z1FC\",\n\t\"./tzl.js\": \"z1FC\",\n\t\"./tzm\": \"wQk9\",\n\t\"./tzm-latn\": \"tT3J\",\n\t\"./tzm-latn.js\": \"tT3J\",\n\t\"./tzm.js\": \"wQk9\",\n\t\"./ug-cn\": \"YRex\",\n\t\"./ug-cn.js\": \"YRex\",\n\t\"./uk\": \"raLr\",\n\t\"./uk.js\": \"raLr\",\n\t\"./ur\": \"UpQW\",\n\t\"./ur.js\": \"UpQW\",\n\t\"./uz\": \"Loxo\",\n\t\"./uz-latn\": \"AQ68\",\n\t\"./uz-latn.js\": \"AQ68\",\n\t\"./uz.js\": \"Loxo\",\n\t\"./vi\": \"KSF8\",\n\t\"./vi.js\": \"KSF8\",\n\t\"./x-pseudo\": \"/X5v\",\n\t\"./x-pseudo.js\": \"/X5v\",\n\t\"./yo\": \"fzPg\",\n\t\"./yo.js\": \"fzPg\",\n\t\"./zh-cn\": \"XDpg\",\n\t\"./zh-cn.js\": \"XDpg\",\n\t\"./zh-hk\": \"SatO\",\n\t\"./zh-hk.js\": \"SatO\",\n\t\"./zh-mo\": \"OmwH\",\n\t\"./zh-mo.js\": \"OmwH\",\n\t\"./zh-tw\": \"kOpN\",\n\t\"./zh-tw.js\": \"kOpN\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"RnhZ\";","import { Component } from '@angular/core';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {}\n","<router-outlet></router-outlet>","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EventServiceService {\n\n  private subject = new Subject<any>(); \n\n  sendClickEvent() {\n    this.subject.next();\n  } \n\n  getClickEvent(): Observable<any> {\n    return this.subject.asObservable();\n  }\n}\n","<div mat-dialog-content>\n  <div class=\"nbrappel\" *ngIf=\"personne.resultatTraitement != 'nouvelle'\">\n    <p>\n      {{\n      personne?personne.nbrappel:''\n      }}\n    </p>\n  </div>\n  <div class=\"resultatEvolan2\" *ngIf=\"personne.resultatTraitement == 'nouvelle'\">\n    <p>\n      {{\n      messageExistant\n      }}\n    </p>\n  </div>\n  <div class=\"chats\">\n    <div class=\"resultatTraitement\">\n      <p>\n        {{\n        personne?personne.resultatTraitement === \"nouvelle\"\n        ? \"Nouvelle demande\"\n        : personne.resultatTraitement:'Nouvelle Demande'\n        }}\n        [{{personne?personne.typeclient:''}}]\n      </p>\n    </div>\n    <div class=\"resultatTraitement\">\n      <p>\n        {{\n        personne?personne.numtiers:''\n        }}\n      </p>\n    </div>\n    <div class=\"resultatEvolan\" *ngIf=\"personne.resultatTraitement !== 'nouvelle'\">\n      <p>\n        {{\n        personne?personne.statuttraitement === \"Demande rejetée\" ? personne.motif:\"\":\"\"\n        }}\n      </p>\n    </div>\n\n  </div>\n\n  <mat-spinner style=\"margin: 0 auto;\" *ngIf=\"!isSettingEnded\"></mat-spinner>\n\n  <form class=\"form\" [formGroup]=\"form\" *ngIf=\"isSettingEnded\">\n    <div *ngIf=\"personne.creation && source.length>1\" style=\"margin: 15px auto;\">\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Source (origine)</mat-label>\n        <mat-select formControlName=\"origine\">\n          <mat-option *ngFor=\"let s of source\" [value]=\"s.value\"> {{s.viewValue}}</mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n    <div style=\"margin: 15px auto;\">\n      <mat-form-field appearance=\"fill\">\n        <mat-label>TypeClient</mat-label>\n        <mat-select [disabled]=\"!(personne.creation || role.startsWith('GEST'))\" formControlName=\"typeclient\"\n          (selectionChange)=\"typeclientChanged()\">\n          <mat-option value=\"M\"> Personne Morale</mat-option>\n          <mat-option value=\"P\"> Personne Physique </mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n    <!-- TPE Morale -->\n\n    <div style=\"margin: 15px auto;\" *ngIf=\"personne.typeclient=='M'\">\n      <mat-form-field appearance=\"fill\">\n        <mat-label>ICE</mat-label>\n        <input formControlName=\"ice\" matInput />\n        <!-- <mat-hint style=\"color: crimson;\" *ngIf=\"isHintICE\">{{HintICE}}</mat-hint> -->\n      </mat-form-field>\n    </div>\n    <div style=\"margin: 15px auto;\" *ngIf=\"personne.typeclient=='M'\">\n      <mat-form-field appearance=\"fill\">\n        <mat-label>RC</mat-label>\n        <input formControlName=\"rcommerce\" matInput />\n        <mat-hint style=\"color: crimson;\" *ngIf=\"isHintRC\">{{HintRC}}</mat-hint>\n      </mat-form-field>\n    </div>\n    <div style=\"margin: 15px auto;\" *ngIf=\"personne.typeclient=='M'\">\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Raison Social</mat-label>\n        <input formControlName=\"raisonsociale\" matInput />\n        <mat-hint style=\"color: crimson;\" *ngIf=\"isHintraisonsociale\">{{Hintraisonsociale}}</mat-hint>\n      </mat-form-field>\n    </div>\n    <!-- <div style=\"margin: 15px auto;\" *ngIf=\"personne.typeclient=='M'\">\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Raison Social Suite</mat-label>\n      <input formControlName=\"raisonsocialesuite\" matInput />\n      <mat-hint style=\"color: crimson;\" *ngIf=\"false\">Hint</mat-hint>\n    </mat-form-field>\n  </div> -->\n    <div style=\"margin: 15px auto;\" *ngIf=\"personne.typeclient=='M'\">\n      <mat-form-field appearance=\"fill\">\n        <mat-label>N° Fiscal</mat-label>\n        <input formControlName=\"nifiscale\" matInput />\n        <mat-hint style=\"color: crimson;\" *ngIf=\"false\">Hint</mat-hint>\n      </mat-form-field>\n    </div>\n    <div style=\"margin: 15px auto;\" *ngIf=\"personne.typeclient=='M'\">\n      <mat-form-field appearance=\"fill\">\n        <mat-label>N° Pattente</mat-label>\n        <input formControlName=\"numpattente\" matInput />\n        <mat-hint style=\"color: crimson;\" *ngIf=\"false\">Hint</mat-hint>\n      </mat-form-field>\n    </div>\n\n    <div style=\"margin: 15px auto;\" *ngIf=\"personne.typeclient=='M'\">\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Date Création (Entreprise)</mat-label>\n        <input formControlName=\"datecreation\" matInput [matDatepicker]=\"datecreationpicker\" />\n        <mat-datepicker-toggle matSuffix [for]=\"datecreationpicker\"></mat-datepicker-toggle>\n        <mat-datepicker #datecreationpicker></mat-datepicker>\n        <mat-hint style=\"color: crimson\" *ngIf=\"isHintdatecreation\">{{Hintdatecreation}}</mat-hint>\n      </mat-form-field>\n    </div>\n\n    <div *ngIf=\"personne.typeclient=='M'\" style=\"margin: 15px auto;\">\n      <mat-form-field appearance=\"fill\">\n        <mat-label>RIB Entreprise</mat-label>\n        <input type=\"text\" minlength=\"24\" maxlength=\"24\" formControlName=\"ribentreprise\" matInput />\n        <mat-hint style=\"color: crimson\" *ngIf=\"isHintRIB\">{{HintRIB}}</mat-hint>\n      </mat-form-field>\n    </div>\n\n    <div style=\"margin: 15px auto;\" *ngIf=\"personne.typeclient=='M'\">\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Activité</mat-label>\n        <mat-select formControlName=\"codeActivite\" (selectionChange)=\"getSecteur()\">\n          <mat-option *ngFor=\"let v of activities\" [value]=\"v.code\">\n            {{ v.activite }} ({{ v.code }})\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n    <div style=\"margin: 15px auto;\" *ngIf=\"personne.typeclient=='M'\">\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Adresse (Entreprise)</mat-label>\n        <input type=\"text\" maxlength=\"32\" minlength=\"3\" formControlName=\"adresseentreprise\" matInput />\n        <mat-hint style=\"color: crimson\" *ngIf=\"isHintadresseentreprise\">{{\n          Hintadresseentreprise\n          }}</mat-hint>\n        <mat-hint style=\"color: crimson\" *ngIf=\"isHintadresseentrepriseAR\">{{\n          HintadresseentrepriseAR\n          }}</mat-hint>\n      </mat-form-field>\n    </div>\n    <div style=\"margin: 15px auto;\" *ngIf=\"personne.typeclient=='M'\">\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Quartier (Entreprise)</mat-label>\n        <input type=\"text\" maxlength=\"32\" minlength=\"3\" formControlName=\"rueentreprise\" matInput />\n      </mat-form-field>\n    </div>\n    <div style=\"margin: 15px auto;\" *ngIf=\"personne.typeclient=='M'\">\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Rue (Entreprise)</mat-label>\n        <input type=\"text\" maxlength=\"32\" minlength=\"3\" formControlName=\"quartierentreprise\" matInput />\n      </mat-form-field>\n    </div>\n\n    <!-- <div style=\"margin: 15px auto;\" *ngIf=\"personne.typeclient=='M'\">\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Code Postal (Entreprise)</mat-label>\n        <input type=\"text\" maxlength=\"5\" minlength=\"5\" formControlName=\"codepostaleentreprise\" matInput />\n        <mat-hint style=\"color: crimson\" *ngIf=\"false\">Hint</mat-hint>\n      </mat-form-field>\n    </div> -->\n\n    <div style=\"margin: 15px auto;\" *ngIf=\"personne.typeclient=='M'\">\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Niveau Formalisme</mat-label>\n        <mat-select formControlName=\"niveauformalisme\">\n          <mat-option *ngFor=\"let niveau of niveaux\" [value]=\"niveau.code\">\n            {{niveau.titre}}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n    <div style=\"margin: 15px auto;\" *ngIf=\"personne.typeclient=='M'\">\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Forme Juridique</mat-label>\n        <mat-select formControlName=\"formejuridique\">\n          <mat-option *ngFor=\"let formejuridique of formejuridiques\" [value]=\"formejuridique.code\">\n            {{formejuridique.titre}}\n          </mat-option>\n        </mat-select>\n        <mat-hint style=\"color: crimson\" *ngIf=\"isHintformejuridique\">{{Hintformejuridique}}</mat-hint>\n\n      </mat-form-field>\n    </div>\n\n    <!-- Personne Physique -->\n    <div style=\"margin: 15px auto;\">\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Nom {{personne.typeclient==\"M\"?'(Gérant)':''}}</mat-label>\n        <input type=\"text\" maxlength=\"32\" minlength=\"3\" formControlName=\"nom\" matInput />\n        <mat-hint style=\"color: crimson\" *ngIf=\"isHintNom\">{{\n          HintNom\n          }}</mat-hint>\n        <mat-hint style=\"color: crimson\" *ngIf=\"isHintNomAR\">{{\n          HintNomAR\n          }}</mat-hint>\n      </mat-form-field>\n    </div>\n\n    <div style=\"margin: 15px auto;\">\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Prénom {{personne.typeclient==\"M\"?'(Gérant)':''}}</mat-label>\n        <input type=\"text\" maxlength=\"32\" minlength=\"3\" formControlName=\"prenom\" matInput />\n        <mat-hint style=\"color: crimson\" *ngIf=\"isHintPrenom\">{{\n          HintPrenom\n          }}</mat-hint>\n        <mat-hint style=\"color: crimson\" *ngIf=\"isHintPrenomAR\">{{\n          HintPrenomAR\n          }}</mat-hint>\n      </mat-form-field>\n    </div>\n\n    <div style=\"margin: 15px auto;\">\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Genre {{personne.typeclient==\"M\"?'(Gérant)':''}}</mat-label>\n        <mat-select formControlName=\"genre\">\n          <mat-option *ngFor=\"let g of genres\" [value]=\"g.code\">\n            {{ g.view }}\n          </mat-option>\n        </mat-select>\n        <mat-hint style=\"color: crimson\" *ngIf=\"isHintGenre\">{{\n          HintGenre\n          }}</mat-hint>\n      </mat-form-field>\n    </div>\n\n    <div style=\"margin: 15px auto;\">\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Date Naissance {{personne.typeclient==\"M\"?'(Gérant)':''}}</mat-label>\n        <input formControlName=\"datenaissance\" matInput [matDatepicker]=\"datenaisscepicker\" />\n        <mat-datepicker-toggle matSuffix [for]=\"datenaisscepicker\"></mat-datepicker-toggle>\n        <mat-datepicker #datenaisscepicker></mat-datepicker>\n        <!-- <mat-hint style=\"color: crimson\" *ngIf=\"isHintdatenaissance\">{{Hintdatenaissance}}</mat-hint> -->\n      </mat-form-field>\n    </div>\n\n    <div style=\"margin: 15px auto;\">\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Situation Familiale {{personne.typeclient==\"M\"?'(Gérant)':''}}</mat-label>\n        <mat-select formControlName=\"situationfamiliale\">\n          <mat-option *ngFor=\"let s of situations\" [value]=\"s.code\">\n            {{ s.view }}\n          </mat-option>\n        </mat-select>\n        <mat-hint style=\"color: crimson\" *ngIf=\"isHintSituationFamiliale\">{{\n          HintSituationFamiliale\n          }}</mat-hint>\n      </mat-form-field>\n    </div>\n\n    <div style=\"margin: 15px auto;\">\n      <mat-form-field appearance=\"fill\">\n        <mat-label>CIN {{personne.typeclient==\"M\"?'(Gérant)':''}}</mat-label>\n        <input type=\"text\" maxlength=\"15\" minlength=\"3\" formControlName=\"cin\" matInput />\n        <mat-hint style=\"color: crimson\" *ngIf=\"isHintCIN\">{{\n          HintCIN\n          }}</mat-hint>\n      </mat-form-field>\n    </div>\n\n    <div style=\"margin: 15px auto;\">\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Date Expiration CIN {{personne.typeclient==\"M\"?'(Gérant)':''}}</mat-label>\n        <input formControlName=\"dateexpiration\" matInput [matDatepicker]=\"dateexpirationpicker\" />\n        <mat-datepicker-toggle matSuffix [for]=\"dateexpirationpicker\"></mat-datepicker-toggle>\n        <mat-datepicker #dateexpirationpicker></mat-datepicker>\n        <mat-hint style=\"color: crimson\" *ngIf=\"false\">Hint</mat-hint>\n      </mat-form-field>\n    </div>\n\n    <div style=\"margin: 15px auto;\">\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Adresse {{personne.typeclient==\"M\"?'(Gérant)':''}}</mat-label>\n        <input type=\"text\" maxlength=\"32\" minlength=\"3\" formControlName=\"adresse\" matInput />\n        <mat-hint style=\"color: crimson\" *ngIf=\"isHintAdresse\">{{\n          HintAdresse\n          }}</mat-hint>\n        <mat-hint style=\"color: crimson\" *ngIf=\"isHintAdresseAR\">{{\n          HintAdresseAR\n          }}</mat-hint>\n      </mat-form-field>\n    </div>\n\n    <div style=\"margin: 15px auto;\">\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Quartier {{personne.typeclient==\"M\"?'(Gérant)':''}}</mat-label>\n        <input type=\"text\" maxlength=\"32\" minlength=\"3\" formControlName=\"rue\" matInput />\n      </mat-form-field>\n    </div>\n\n    <div style=\"margin: 15px auto;\">\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Rue {{personne.typeclient==\"M\"?'(Gérant)':''}}</mat-label>\n        <input type=\"text\" maxlength=\"32\" minlength=\"3\" formControlName=\"quartier\" matInput />\n      </mat-form-field>\n    </div>\n<!-- \n    <div style=\"margin: 15px auto;\">\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Code Postal {{personne.typeclient==\"M\"?'(Gérant)':''}}</mat-label>\n        <input type=\"text\" maxlength=\"5\" minlength=\"5\" formControlName=\"codepostal\" matInput />\n        <mat-hint style=\"color: crimson\" *ngIf=\"false\">Hint</mat-hint>\n      </mat-form-field>\n    </div> -->\n\n    <div style=\"margin: 15px auto;\">\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Email</mat-label>\n        <input formControlName=\"email\" matInput />\n        <mat-hint style=\"color: crimson\" *ngIf=\"false\">Hint</mat-hint>\n      </mat-form-field>\n    </div>\n    <!-- <div style=\"margin: 15px auto;\">\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Tel Bureau</mat-label>\n        <input type=\"text\" maxlength=\"10\" minlength=\"10\" formControlName=\"telbureau\" matInput />\n        <mat-hint style=\"color: crimson\" *ngIf=\"false\">Hint</mat-hint>\n      </mat-form-field>\n    </div> -->\n\n    <!-- <div style=\"margin: 15px auto;\">\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Tel Domicile</mat-label>\n        <input type=\"text\" maxlength=\"10\" minlength=\"10\" formControlName=\"teldomicile\" matInput />\n        <mat-hint style=\"color: crimson\" *ngIf=\"false\">Hint</mat-hint>\n      </mat-form-field>\n    </div> -->\n\n    <div style=\"margin: 15px auto;\">\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Tel GSM</mat-label>\n        <input type=\"text\" maxlength=\"10\" minlength=\"10\" formControlName=\"telgsm\" matInput />\n        <mat-hint style=\"color: crimson\" *ngIf=\"isHinttelgsm\">{{Hinttelgsm}}</mat-hint>\n      </mat-form-field>\n    </div>\n\n    <!-- <div style=\"margin: 15px auto;\">\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Tel Professionnel</mat-label>\n        <input type=\"text\" maxlength=\"10\" minlength=\"10\" formControlName=\"telprofessionnel\" matInput />\n        <mat-hint style=\"color: crimson\" *ngIf=\"false\">Hint</mat-hint>\n      </mat-form-field>\n    </div> -->\n\n    <div style=\"margin: 15px auto;\">\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Montant Demandé</mat-label>\n        <input max=\"50000\" min=\"0\" formControlName=\"montantdemande\" matInput />\n        <mat-hint style=\"color: crimson\" *ngIf=\"false\">Hint</mat-hint>\n      </mat-form-field>\n    </div>\n\n    <div style=\"margin: 15px auto;\">\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Nombre d'échéances</mat-label>\n        <input type=\"number\" max=\"24\" min=\"1\" formControlName=\"nombreecheance\" matInput />\n        <mat-hint style=\"color: crimson\" *ngIf=\"false\">Hint</mat-hint>\n      </mat-form-field>\n    </div>\n\n    <div style=\"margin: 15px auto;\">\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Produit</mat-label>\n        <input formControlName=\"produit\" matInput />\n        <mat-hint style=\"color: crimson\" *ngIf=\"false\">Hint</mat-hint>\n      </mat-form-field>\n    </div>\n\n    <div style=\"margin: 15px auto;\">\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Secteur</mat-label>\n        <input formControlName=\"secteur\" matInput />\n        <mat-hint style=\"color: crimson\" *ngIf=\"false\">Hint</mat-hint>\n      </mat-form-field>\n    </div>\n\n    <div style=\"margin: 15px auto;\">\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Projet</mat-label>\n        <input formControlName=\"projet\" matInput />\n        <mat-hint style=\"color: crimson\" *ngIf=\"false\">Hint</mat-hint>\n      </mat-form-field>\n    </div>\n\n\n    <div style=\"margin: 15px auto;\">\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Numéro RIB</mat-label>\n        <input type=\"text\" minlength=\"24\" maxlength=\"24\" formControlName=\"numrib\" matInput />\n      </mat-form-field>\n    </div>\n\n    <div style=\"margin: 15px auto;\">\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Pré-qualification</mat-label>\n        <mat-select [disabled]=\"isCIntressed\" formControlName=\"resultatTraitement\"\n          (selectionChange)=\"changeQualification()\">\n          <mat-option *ngFor=\"let status of statusTraitement\" [value]=\"status.statut\">\n            {{ status.statut }}\n          </mat-option>\n        </mat-select>\n        <mat-hint style=\"color: crimson\" *ngIf=\"isHintStatutTraitement\">{{\n          HintStatutTraitement\n          }}</mat-hint>\n      </mat-form-field>\n    </div>\n    <!-- <div *ngIf=\"(isIntressed || isCIntressed) && !personne.creation\" style=\"margin: 15px auto;\">\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Qualification</mat-label>\n        <mat-select formControlName=\"qualification\">\n          <mat-option *ngFor=\"let status of qualification\" [value]=\"status.statut\">\n            {{ status.statut }}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div> -->\n\n    <!-- <div *ngIf=\"isPretDeb\" style=\"margin: 15px auto;\">\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Montant Débloqué</mat-label>\n        <input type=\"number\" max=\"50000\" min=\"0\" formControlName=\"montantdebloque\" matInput />\n        <mat-hint style=\"color: crimson\" *ngIf=\"false\">Hint</mat-hint>\n      </mat-form-field>\n    </div> -->\n\n\n\n    <div style=\"margin: 15px auto;\">\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Ville {{personne.typeclient==\"M\"?'(Gérant)':''}}</mat-label>\n        <mat-select formControlName=\"ville\" (selectionChange)=\"getcodeagenesP(personne.typeclient)\">\n          <mat-option *ngFor=\"let v of villes\" [value]=\"v.ville\">\n            {{ v.ville }}\n          </mat-option>\n        </mat-select>\n        <mat-hint type=\"text\" style=\"color: crimson\" *ngIf=\"isHintVille\">{{ HintVille }}</mat-hint>\n        <mat-hint type=\"text\" style=\"color: crimson\" *ngIf=\"isHintVilleAR\">{{ HintVilleAR }}</mat-hint>\n      </mat-form-field>\n    </div>\n\n\n    <!--  *********************Champs pour RIFSO ************* -->\n    <!-- ************************************************************************ -->\n    <!-- <div style=\"margin: 15px auto;\" *ngIf=\"personne.typeclient=='M'\">\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Chiffre d'affaire</mat-label>\n        <input type=\"text\" formControlName=\"chiffreAffaire\" matInput />\n        <mat-hint style=\"color: crimson\" *ngIf=\"false\">Hint</mat-hint>\n      </mat-form-field>\n    </div> -->\n    <!-- <div style=\"margin: 15px auto;\" *ngIf=\"personne.typeclient=='M'\">\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Code Activité</mat-label>\n        <input type=\"text\" maxlength=\"2\" minlength=\"2\" formControlName=\"codeActivite\" matInput />\n        <mat-hint style=\"color: crimson\" *ngIf=\"false\">Hint</mat-hint>\n      </mat-form-field>\n    </div> -->\n    <!-- <div style=\"margin: 15px auto;\" *ngIf=\"personne.typeclient=='M'\">\n      <mat-form-field appearance=\"fill\">\n        <mat-label>type Local</mat-label>\n        <input type=\"text\" maxlength=\"1\" minlength=\"1\" formControlName=\"typeLocal\" matInput />\n        <mat-hint style=\"color: crimson\" *ngIf=\"false\">Hint</mat-hint>\n      </mat-form-field>\n    </div> -->\n    <!-- <div style=\"margin: 15px auto;\" *ngIf=\"personne.typeclient=='M'\">\n      <mat-form-field appearance=\"fill\">\n        <mat-label>effectif</mat-label>\n        <input type=\"text\" formControlName=\"effectif\" matInput />\n        <mat-hint style=\"color: crimson\" *ngIf=\"false\">Hint</mat-hint>\n      </mat-form-field>\n    </div> -->\n    <!-- <div style=\"margin: 15px auto;\" *ngIf=\"personne.typeclient=='M'\">\n      <mat-form-field appearance=\"fill\">\n        <mat-label>dateFinPrlvmt</mat-label>\n        <input type=\"text\" formControlName=\"dateFinPrlvmt\" matInput />\n        <mat-hint style=\"color: crimson\" *ngIf=\"false\">Hint</mat-hint>\n      </mat-form-field>\n    </div> -->\n    <!-- <div style=\"margin: 15px auto;\" *ngIf=\"personne.typeclient=='M'\">\n      <mat-form-field appearance=\"fill\">\n        <mat-label>DateRealisation</mat-label>\n        <input type=\"text\" formControlName=\"DateRealisation\" matInput />\n        <mat-hint style=\"color: crimson\" *ngIf=\"false\">Hint</mat-hint>\n      </mat-form-field>\n    </div> -->\n\n    <!-- <div style=\"margin: 15px auto;\" *ngIf=\"personne.typeclient=='M'\">\n      <mat-form-field appearance=\"fill\">\n        <mat-label>numeroContract</mat-label>\n        <input type=\"text\" formControlName=\"numeroContract\" matInput />\n        <mat-hint style=\"color: crimson\" *ngIf=\"false\">Hint</mat-hint>\n      </mat-form-field>\n    </div> -->\n    <!-- <div *ngIf=\"personne.typeclient=='M'\" style=\"margin: 15px auto;\">\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Partfemme</mat-label>\n        <input (keypress)=\"preventCaracters($event)\" type=\"number\" max=\"2\" min=\"2\" formControlName=\"partfemme\" matInput />\n        <mat-hint style=\"color: crimson\" *ngIf=\"false\">Hint</mat-hint>\n      </mat-form-field>\n    </div> -->\n    <!-- ************************************************************************ -->\n\n    <div style=\"margin: 15px auto;\" *ngIf=\"personne.typeclient=='M'\">\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Ville (Entreprise)</mat-label>\n        <mat-select formControlName=\"villeentreprise\" (selectionChange)=\"getcodeagenesM(personne.typeclient)\">\n          <mat-option *ngFor=\"let v of villes\" [value]=\"v.ville\">\n            {{ v.ville }}\n          </mat-option>\n        </mat-select>\n        <mat-hint type=\"text\" style=\"color: crimson\" *ngIf=\"isHintVille\">{{ HintVille }}</mat-hint>\n        <mat-hint type=\"text\" style=\"color: crimson\" *ngIf=\"isHintVilleAR\">{{ HintVilleAR }}</mat-hint>\n      </mat-form-field>\n    </div>\n\n    <div style=\"margin: 15px auto;\">\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Agence </mat-label>\n        <mat-select formControlName=\"codeagence\" (selectionChange)=\"agenceChange()\">\n          <mat-option *ngFor=\"let agence of agences\" [value]=\"agence.codeagence\">\n            {{ agence.agence }} ({{agence.codeagence}})\n          </mat-option>\n        </mat-select>\n        <mat-hint type=\"text\" style=\"color: crimson\" *ngIf=\"isHintCodeAgence\">{{ HintCodeAgence }}</mat-hint>\n        <mat-hint type=\"text\" style=\"color: crimson\" *ngIf=\"isHintCodeAgenceAR\">{{ HintCodeAgenceAR }}</mat-hint>\n\n        <mat-hint *ngIf=\"agence\" style=\"color: rgb(8, 2, 3); margin-top: 12px;min-width: 180px;font-size: small;\"> <span\n            style=\"color:#626262\">Adresse: </span>{{\n          adresse\n          }}</mat-hint>\n      </mat-form-field>\n    </div>\n    <div style=\"margin: 15px auto;\">\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Date Rendez-Vous</mat-label>\n        <input formControlName=\"daterendezvous\" matInput [matDatepicker]=\"daterendezvouspicker\" />\n        <mat-datepicker-toggle matSuffix [for]=\"daterendezvouspicker\"></mat-datepicker-toggle>\n        <mat-datepicker #daterendezvouspicker></mat-datepicker>\n        <mat-hint style=\"color: crimson\" *ngIf=\"false\">Hint</mat-hint>\n      </mat-form-field>\n    </div>\n    <div style=\"margin: 15px auto;\">\n      <mat-checkbox formControlName=\"sendMe\">Notification Agence!</mat-checkbox>\n    </div>\n    <div class=\"buttons\">\n    </div>\n  </form>\n  <div style=\"display: flex;\njustify-content: center;flex-direction: column;\" *ngIf=\"form.value\">\n    <h1 style=\"margin: 20px; text-align: center;\">Historique des qualifications : </h1>\n    <hr>\n    <table mat-table [dataSource]=\"history\" matTableExporter #exporter=\"matTableExporter\" class=\"mat-elevation-z8\"\n      matSort>\n      <!-- <ng-container matColumnDef=\"valeurid\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>ID</th>\n        <td mat-cell *matCellDef=\"let element\">{{ element.valeurid }}</td>\n      </ng-container> -->\n      <ng-container matColumnDef=\"resultatTraitement\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Pré-qualification</th>\n        <td mat-cell *matCellDef=\"let element\">{{ element.resultatTraitement }}</td>\n      </ng-container>\n      <ng-container matColumnDef=\"user\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Traité Initialment par</th>\n        <td mat-cell *matCellDef=\"let element\">{{ element.user }}</td>\n      </ng-container>\n      <ng-container matColumnDef=\"codegestionnairecible\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Traité Dernierement par</th>\n        <td mat-cell *matCellDef=\"let element\">{{ element.codegestionnairecible }}</td>\n      </ng-container>\n      <ng-container matColumnDef=\"entry_date\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Date Dernier Traitement</th>\n        <td mat-cell *matCellDef=\"let element\">{{ element.entry_date }}</td>\n      </ng-container>\n      <!-- <ng-container matColumnDef=\"qualification\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Qualification</th>\n        <td mat-cell *matCellDef=\"let element\">{{ element.qualification }}</td>\n      </ng-container> -->\n      <ng-container matColumnDef=\"statuttraitement\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Statut Contrat</th>\n        <td mat-cell *matCellDef=\"let element\">{{ element.statuttraitement }}</td>\n      </ng-container>\n      <tr mat-header-row *matHeaderRowDef=\"historyDisplayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: historyDisplayedColumns\"></tr>\n    </table>\n\n    <h1 style=\"margin: 50px 20px; text-align: center;\">les annomlies trouvées pour cette demande : </h1>\n    <hr>\n    <table mat-table [dataSource]=\"annomalies\" matTableExporter #exporter=\"matTableExporter\" class=\"mat-elevation-z8\"\n      matSort>\n      <ng-container matColumnDef=\"champ\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Champ</th>\n        <td mat-cell *matCellDef=\"let element\">{{ element.champ }}</td>\n      </ng-container>\n      <ng-container matColumnDef=\"anomalie\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Annomalie </th>\n        <td mat-cell *matCellDef=\"let element\">{{ element.anomalie }}</td>\n      </ng-container>\n      <tr mat-header-row *matHeaderRowDef=\"annomalieDisplayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: annomalieDisplayedColumns\"></tr>\n    </table>\n  </div>\n\n</div>\n<div mat-dialog-actions>\n  <button (click)=\"retour('')\" mat-raised-button color=\"warn\">\n    <mat-icon style=\"position: relative;margin-left: 10px; bottom: 10px; right: 20px;\" matPrefix><img\n        src=\"../../../assets/undo.png\" alt=\"account icon\"></mat-icon>\n    Retour\n  </button>\n  <div>\n\n    <button\n      [disabled]=\"(personne.dateDeblocage!='' || personne.dateDeblocage!=null || personne.dateDeblocage!=undefined  ) && (personne.statuttraitement==='Demande débloquée' || personne.statuttraitement==='Demande soldée')\"\n      (click)=\"sendToEvolan()\" mat-raised-button color=\"primary\">\n      <mat-icon style=\"position: relative;margin-left: 10px; bottom: 10px; right: 20px;\" matPrefix><img\n          src=\"../../../assets/valider.png\" alt=\"account icon\"></mat-icon>\n      Valider\n    </button>\n  </div>\n\n\n\n  <a mat-raised-button [href]=\"url\" *ngIf=\"!personne.creation\">\n    <mat-icon style=\"position: relative;margin-left: 10px; bottom: 10px; right: 20px;\" matPrefix><img\n        src=\"../../../assets/call.png\" alt=\"account icon\"></mat-icon>\n    Appeler Client\n  </a>\n  <a *ngIf=\"personne.resultatTraitement !== 'nouvelle' && !personne.creation\" mat-raised-button [href]=\"urlca\">\n    <mat-icon style=\"position: relative;margin-left: 10px; bottom: 10px; right: 20px;\" matPrefix><img\n        src=\"../../../assets/call.png\" alt=\"account icon\">\n    </mat-icon>\n    Appeler CA : {{personne.gsmca}}\n  </a>\n</div>","import { HttpClient } from '@angular/common/http';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport {\n  MatDialog,\n  MatDialogRef,\n  MAT_DIALOG_DATA,\n} from '@angular/material/dialog';\nimport { DateAdapter } from '@angular/material/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CallServerService } from 'src/app/services/call-server.service';\nimport * as moment from 'moment/moment';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { DatabaseService } from 'src/app/services/database.service';\nimport { MatTableDataSource } from '@angular/material/table';\n\n@Component({\n  selector: 'app-personne-details',\n  templateUrl: './personne-details.component.html',\n  styleUrls: ['./personne-details.component.scss'],\n})\nexport class PersonneDetailsComponent implements OnInit {\n  personne: any;\n  niveaux = [{ code: \"1001\", titre: \"INSCRIT AU REGISTRE DE COMMERCE\" },\n  { code: \"1002\", titre: \"Auto Entrepreneur\" },\n  { code: \"1003\", titre: \"Assujiti Taxe PRO\" },\n  { code: \"1004\", titre: \"Inscrit Registre PRO\" },\n  { code: \"1005\", titre: \"Agrement Pro\" },\n  { code: \"1006\", titre: \"Aucun Justif Formalisme\" }];\n\n  formejuridiques = [{ code: \"B\", titre: \"Entrepreneur individuel\" },\n  { code: \"C\", titre: \"Société en nom collectif\" },\n  { code: \"D\", titre: \"Société en commandite simple\" },\n  { code: \"E\", titre: \"Association ou sté en participation\" },\n  { code: \"F\", titre: \"Société anonyme\" },\n  { code: \"G\", titre: \"Société en commandite par action\" },\n  { code: \"H\", titre: \"Société à responsabilté limitée\" },\n  { code: \"I\", titre: \"S.A.R.L. d'associé unique\" },\n  { code: \"J\", titre: \"Société coopérative\" },\n  { code: \"K\", titre: \"Société civile\" },\n  { code: \"M\", titre: \"Société de fait \" }]\n  agences: any[];\n  isAlert: boolean = false;\n  alert: any;\n  // logs: any;\n\n  statusTraitement = [\n    // { statut: 'Refus par l\\'agence' },\n    { statut: 'Erronée' },\n    { statut: 'Intéressé' },\n    { statut: 'Non intéressé' },\n    { statut: 'Injoignable' },\n    { statut: 'Intéressé plustard' },\n  ];\n  qualification = [\n    { statut: 'Injoignable' },\n    { statut: 'Non éligible' },\n    { statut: 'Réorientée' },\n    { statut: 'Hors zone' },\n    { statut: 'Plus intéressé' },\n    { statut: 'Intéressé plustard' },\n    { statut: 'Client non venu au RDV' },\n    { statut: 'RDV confirmé' },\n    { statut: 'Dossier en cours' },\n    { statut: 'Prêt débloqué' },\n    { statut: 'Prêt soldé' },\n    { statut: 'Contrat annulé' },\n    { statut: 'Contrat consolidé' },\n    { statut: 'Sans_feedback' },\n  ];\n  genres = [{ code: \"M.\", view: \"Homme\" }, { code: \"MME\", view: \"Femme\" }];\n  situations = [{ code: \"M\", view: \"Marié\" }, { code: \"C\", view: \"Célibataire\" }]\n  historyDisplayedColumns = [\"resultatTraitement\", \"user\", \"codegestionnairecible\", \"entry_date\", \"statuttraitement\"]\n  annomalieDisplayedColumns = [\"champ\", \"anomalie\"]\n  url: any;\n  urlca: any;\n  url2: 'sip:0618265025';\n  form: FormGroup;\n  HintNom: string;\n  HintNomAR: string;\n  isHintNomAR: boolean = false;\n  isHintNom: boolean = false;\n  isHintPrenom: boolean = false;\n  isHintPrenomAR: boolean = false;\n  isHintCIN: boolean = false;\n  isHintSituationFamiliale: boolean = false;\n  isHintAdresse: boolean = false;\n  isHintAdresseAR: boolean = false;\n  isHintVille: boolean = false;\n  isHintVilleAR: boolean = false;\n  isHintStatutTraitement: boolean = false;\n  isHintGenre: boolean = false;\n  isHintCodeAgence: boolean = false;\n  isHintdatenaissance: boolean;\n  isHintdatecreation: boolean;\n  isHintformejuridique: boolean;\n  isHintadresseentreprise: boolean;\n  isHintadresseentrepriseAR: boolean;\n  isHintraisonsociale: boolean;\n  isHinttelgsm: boolean;\n  isHintRC: boolean;\n  isHintRIB: boolean;\n  isHintICE: boolean;\n\n  Hintadresseentreprise: string;\n\n\n  isSettingEnded: boolean = false;\n\n  HintPrenom: string;\n  HintPrenomAR: string;\n  HintCIN: string;\n  HintSituationFamiliale: string;\n  HintAdresse: string;\n  HintAdresseAR: string;\n  HintVille: string;\n  HintVilleAR: string;\n  HintStatutTraitement: string;\n  HintGenre: string;\n  HintCodeAgence: string;\n  villes: any;\n  villecodeagence: any;\n  // codeagence: any;\n  isIntressed: boolean = false;\n  isPretDeb: boolean = false;\n  isCIntressed: boolean;\n  origine: any;\n  regions: any;\n  history: MatTableDataSource<any>;\n  adresse: string = \"\";\n  annomalies: MatTableDataSource<any>;\n  activities: any;\n  messageExistant: string = '';\n  role: string;\n  isAgent: boolean;\n  origins: string;\n  isRIFSO: boolean;\n  user: string;\n  Hintdatenaissance: string;\n  Hintdatecreation: string;\n  Hintformejuridique: string;\n  HintRIB: string;\n  HintRC: string;\n  HintICE: string;\n  source: any;\n\n\n\n\n  HintadresseentrepriseAR: string;\n  Hintraisonsociale: string;\n  Hinttelgsm: string;\n\n  constructor(\n    public dialogRef: MatDialogRef<PersonneDetailsComponent>,\n    @Inject(MAT_DIALOG_DATA) public datafromdialog,\n    private router: Router,\n    private snackBar: MatSnackBar,\n    public callServer: CallServerService,\n    public dialog: MatDialog,\n    private dateadapter: DateAdapter<Date>,\n    private activeRoute: ActivatedRoute,\n    private http: HttpClient,\n    private sanitizer: DomSanitizer,\n    private fb: FormBuilder,\n    private db: DatabaseService\n  ) {\n    setTimeout(() => {\n      this.isSettingEnded = true;\n    }, 1000);\n    this.dateadapter.setLocale('en-GB'); // dd/MM/YYYY\n    this.villes = datafromdialog.villes;\n    this.personne = datafromdialog.personne;\n\n    if (!this.personne) {\n      this.personne = {};\n      // this.personne.resultatTraitement = 'nouvelle';\n      this.personne.creation = 'YES'\n      this.personne.typeclient = 'P'\n    }\n    const organismes = localStorage.getItem('organismes')\n    this.source = JSON.parse(organismes)\n    let origins = localStorage.getItem('origins')\n    let origin = origins.split(',')[0]\n    this.origine = datafromdialog.origine ? datafromdialog.origine : origin;\n    this.regions = datafromdialog.regions;\n    this.url = this.sanitizer.bypassSecurityTrustUrl(\n      `sip:${this.personne ? this.personne.telgsm : null}`\n    );\n    this.urlca = this.sanitizer.bypassSecurityTrustUrl(\n      `sip:${this.personne ? this.personne.gsmca : null}`\n    );\n    let data_to_send = {\n      source: datafromdialog.source,\n      cin: datafromdialog.personne ? datafromdialog.personne.cin : null,\n      valeurid: datafromdialog.personne ? datafromdialog.personne.valeurid : null,\n      telgsm: datafromdialog.personne ? datafromdialog.personne.telgsm : null,\n      nom: datafromdialog.personne ? datafromdialog.personne.nom : null,\n      prenom: datafromdialog.personne ? datafromdialog.personne.prenom : null,\n      typeclient: datafromdialog.personne ? datafromdialog.personne.typeclient : 'P'\n    }\n    if (this.datafromdialog.personne) {\n      this.callServer.checkExistants(data_to_send).subscribe((obj: any) => {\n        if (obj.length > 0) {\n          this.messageExistant = `Ce prospect possède déja une demande encours avec le statut : ${obj[0].statuttraitement} daté en ${obj[0].entry_date} (${obj[0].user})`\n          if (datafromdialog.personne?.resultatTraitement === 'Injoignable') {\n            this.callServer.updateResultatTraitement(data_to_send).subscribe((obj: any) => {\n              this.onNoClick(this.datafromdialog.source).then(() => { })\n            }, (err) => {\n              console.log(err);\n            })\n          }\n        }\n      })\n    }\n    this.role = localStorage.getItem('role');\n    if (this.role.startsWith(\"AGT\")) {\n      this.isAgent = true;\n    }\n    this.origins = localStorage.getItem('origins');\n    if (this.origins.includes(\"RIFSO\")) {\n      this.isRIFSO = true\n    }\n  }\n  getcodeagenesP(typeclient) {\n    if (typeclient === 'P') {\n      this.adresse = ''\n      let data = {\n        ville: this.form.value.ville,\n      };\n      this.callServer.getAgences(data).subscribe(\n        (resp: any) => {\n          this.agences = resp.results;\n          if (data.ville.toUpperCase() === \"RABAT\" && !this.isRIFSO) {\n            this.agences = this.agences.filter(agence => agence.codeagence !== \"SG\");\n          }\n          if (this.form.value.codeagence) {\n            let adressePart = this.agences.filter(el => el.codeagence == this.form.value.codeagence)\n            this.adresse = adressePart[0].adresse\n          }\n\n        },\n        (err) => console.log(err)\n      );\n    } else {\n\n    }\n\n  }\n  getcodeagenesM(typeclient) {\n    if (typeclient === 'P') {\n\n    } else {\n      this.adresse = ''\n      let data = {\n        ville: this.form.value.villeentreprise,\n      };\n      this.callServer.getAgences(data).subscribe(\n        (resp: any) => {\n          this.agences = resp.results;\n          if (data.ville.toUpperCase() === \"RABAT\" && !this.isRIFSO) {\n            this.agences = this.agences.filter(agence => agence.codeagence !== \"SG\");\n          }\n          let adressePart = this.agences.filter(el => el.codeagence == this.form.value.codeagence)\n          this.adresse = adressePart[0].adresse\n        },\n        (err) => console.log(err)\n      );\n    }\n  }\n  getActivities() {\n    this.callServer.getActivities().subscribe(\n      (results: any) => {\n        this.activities = results;\n      },\n      (err) => console.log(err)\n    );\n  }\n  getSecteur() {\n    let codeActivite = this.form.controls['codeActivite'].value\n    let secteurPart = this.activities.filter(el => el.code == codeActivite)\n    this.form.patchValue({\n      secteur: secteurPart[0].secteur,\n    });\n  }\n  ngOnInit(): void {\n    this.getActivities()\n\n    let codeorganisme = this.origine == \"RS\" ? \"AAA\" : this.origine == \"WB\" ? \"AAA\" : this.origine == \"AW\" ? \"AWB\" : \"\";\n    let canal = this.origine == \"RS\" ? \"107\" : this.origine == \"WB\" ? \"108\" : this.origine == \"AW\" ? \"115\" : \"\"\n\n    if (this.personne && !this.isEmpty(this.personne)) {\n      if (this.personne?.daterendezvous) {\n        if (this.personne?.daterendezvous.length === 10) {\n          this.personne.daterendezvous = new Date(this.personne?.daterendezvous.split('/')[2] + \"/\" + this.personne?.daterendezvous.split('/')[1] + \"/\" + this.personne?.daterendezvous.split('/')[0])\n        } else\n          this.personne.daterendezvous = new Date(this.personne?.daterendezvous);\n      }\n      if (this.personne.datenaissance) {\n        if (this.personne?.datenaissance.length === 10) {\n          this.personne.datenaissance = new Date(this.personne?.datenaissance.split('/')[2] + \"/\" + this.personne?.datenaissance.split('/')[1] + \"/\" + this.personne?.datenaissance.split('/')[0])\n        } else if (this.personne?.datenaissance.length === 19) {\n          this.personne.datenaissance = new Date(this.personne?.datenaissance);\n        } else {\n          this.personne.datenaissance = \"\"\n        }\n      }\n      if (this.personne.datecreation) {\n        if (this.personne?.datecreation.length === 10) {\n          this.personne.datecreation = new Date(this.personne?.datecreation.split('/')[2] + \"/\" + this.personne?.datecreation.split('/')[1] + \"/\" + this.personne?.datecreation.split('/')[0])\n        } else if (this.personne?.datecreation.length === 19) {\n          this.personne.datecreation = new Date(this.personne?.datecreation);\n        } else {\n          this.personne.datecreation = \"\"\n        }\n      }\n      if (this.personne?.dateexpiration) {\n        if (this.personne?.dateexpiration.length === 10) {\n          this.personne.dateexpiration = new Date(this.personne?.dateexpiration.split('/')[2] + \"/\" + this.personne?.dateexpiration.split('/')[1] + \"/\" + this.personne?.dateexpiration.split('/')[0])\n        } else\n          this.personne.dateexpiration = new Date(this.personne?.dateexpiration);\n      }\n\n      if (this.personne?.resultatTraitement === 'Intéressé') {\n        this.isCIntressed = true;\n      } else {\n        this.isCIntressed = false;\n        // this.isIntressed = false;\n      }\n      if (this.personne?.qualification === 'Prêt débloqué') {\n\n        this.isPretDeb = true;\n      } else {\n\n        this.isPretDeb = false;\n      }\n      if (this.personne?.montantdemande) {\n        this.personne.montantdemande = this.personne?.montantdemande.replace(/[\\u0600-\\u06FF]/g, \"\").trim()\n        this.personne.montantdemande = this.personne?.montantdemande.replace(/[^0-9]/g, \"\").trim()\n      }\n\n      let codeagence = this.personne?.origine == \"AW\" ? this.personne?.codeagencecible : this.personne?.codeagence;\n      let ville = this.personne.ville ? this.personne.ville.charAt(0).toUpperCase() + this.personne.ville.slice(1).toLowerCase() : '';\n      console.log(\"ville :\",ville);\n      \n      let codeorganisme = this.origine == \"RS\" ? \"AAA\" : this.origine == \"WB\" ? \"AAA\" : this.origine == \"AW\" ? \"AWB\" : \"\";\n      let canal = this.origine == \"RS\" ? \"107\" : this.origine == \"WB\" ? \"108\" : this.origine == \"AW\" ? \"115\" : \"\"\n\n      this.form = this.fb.group({\n        user: [this.personne?.user],\n        sendMe: [true],\n        id: [this.personne?.id],\n        agence: [this.personne?.agence],\n        entry_date: [this.personne?.entry_date],\n        email: [this.personne?.email],\n        secteur: [this.personne?.secteur],\n        projet: [this.personne?.projet],\n        daterendezvous: [this.personne?.daterendezvous],\n        typeclient: [this.personne?.typeclient],\n        raisonsociale: [this.personne?.raisonsociale],\n        raisonsocialesuite: [this.personne?.raisonsocialesuite],\n        ice: [this.personne.ice],\n        rcommerce: [this.personne.rcommerce],\n        nifiscale: [this.personne?.nifiscale],\n        numpattente: [this.personne?.numpattente],\n        datecreation: [this.personne?.datecreation],\n        ribentreprise: [this.personne?.ribentreprise],\n        formejuridique: [this.personne?.formejuridique],\n        telbureau: [this.personne?.telgsm],\n        adresseentreprise: [this.personne?.adresseentreprise],\n        rueentreprise: [this.personne?.rueentreprise],\n        quartierentreprise: [this.personne?.quartierentreprise],\n        codepostaleentreprise: [this.personne?.codepostaleentreprise],\n        villeentreprise: [this.personne?.villeentreprise],\n        genre: [this.personne?.genre],\n        nom: [this.personne?.nom],\n        prenom: [this.personne?.prenom],\n        cin: [this.personne?.cin],\n        dateexpiration: [this.personne?.dateexpiration],\n        dateDeblocage: [this.personne?.dateDeblocage],\n        adresse: [this.personne?.adresse],\n        rue: [this.personne?.rue],\n        quartier: [this.personne?.quartier],\n        codepostal: [this.personne?.codepostal],\n        ville: [ville],\n        teldomicile: [this.personne?.telgsm],\n        telgsm: [this.personne?.telgsm],\n        telprofessionnel: [this.personne?.telgsm],\n        datenaissance: [this.personne?.datenaissance],\n        situationfamiliale: [this.personne?.situationfamiliale],\n        numrib: [this.personne?.numrib],\n        niveauformalisme: [this.personne?.niveauformalisme],\n        partfemme: [this.personne?.partfemme],\n        montantdemande: [this.personne?.montantdemande],\n        nombreecheance: [this.personne?.nombreecheance],\n        codeagence: [codeagence],\n        codegestionnaire: [this.personne?.codegestionnaire],\n        action: ['TEST'],\n        canal: [canal],\n        codeagencecible: [this.personne?.codeagencecible],\n        codeorganisme: [codeorganisme],\n        origine: [this.origine],\n        produit: [this.personne?.produit],\n        // resultatTraitement: new FormControl({value: this.personne.resultatTraitement, disabled: this.isCIntressed}),\n        resultatTraitement: [this.personne.resultatTraitement],\n        statuttraitement: [this.personne?.statuttraitement],\n        id_od: [this.personne?.id],\n        valeurid: [this.personne?.valeurid],\n        qualification: [this.personne?.qualification],\n        montantdebloque: [this.personne?.montantdebloque],\n        codeTribunal: [this.personne?.montantdebloque],\n        utm_source: [this.personne?.utm_source],\n        utm_produit: [this.personne?.utm_produit],\n        ref_campagne: [this.personne?.ref_campagne],\n        // *********************Champs pour RIFSO *************\n        //************************************************************************/\n        codeActivite: [this.personne?.codeActivite],\n        typeLocal: [this.personne?.typeLocal],\n        effectif: [this.personne?.effectif],\n        dateFinPrlvmt: [this.personne?.dateFinPrlvmt],\n        DateRealisation: [this.personne?.DateRealisation],\n        chiffreAffaire: [this.personne?.chiffreAffaire],\n        numeroContract: [this.personne?.numeroContract],\n        //************************************************************************/\n      });\n    } else {\n      this.user = localStorage.getItem('user');\n      this.form = this.fb.group({\n        user: [this.user],\n        sendMe: [true],\n        id: [null],\n        agence: [''],\n        entry_date: [null],\n        email: [''],\n        secteur: [''],\n        projet: [''],\n        daterendezvous: [null],\n        typeclient: ['P'],\n        raisonsociale: [''],\n        raisonsocialesuite: [''],\n        ice: [''],\n        rcommerce: [''],\n        nifiscale: [''],\n        numpattente: [''],\n        datecreation: [null],\n        ribentreprise: [null],\n        formejuridique: [''],\n        telbureau: [null],\n        adresseentreprise: [null],\n        rueentreprise: [null],\n        quartierentreprise: [null],\n        codepostaleentreprise: [null],\n        villeentreprise: [null],\n        genre: [null],\n        nom: [null],\n        prenom: [null],\n        cin: [null],\n        dateexpiration: [null],\n        dateDeblocage: [null],\n        adresse: [null],\n        rue: [null],\n        quartier: [null],\n        codepostal: [null],\n        ville: [null],\n        teldomicile: [null],\n        telgsm: [null],\n        telprofessionnel: [null],\n        datenaissance: [null],\n        situationfamiliale: [null],\n        numrib: [null],\n        niveauformalisme: [null],\n        partfemme: [null],\n        montantdemande: [null],\n        nombreecheance: [null],\n        codeagence: [null],\n        codegestionnaire: [null],\n        action: [null],\n        canal: [canal],\n        codeagencecible: [null],\n        codeorganisme: [codeorganisme],\n        origine: [this.origine],\n        produit: [null],\n        resultatTraitement: [\"Intéressé\"],\n        statuttraitement: [null],\n        id_od: [null],\n        valeurid: [null],\n        qualification: [null],\n        montantdebloque: [null],\n        codeTribunal: [null],\n        utm_source: [null],\n        utm_produit: [null],\n        ref_campagne: [null],\n        // *********************Champs pour RIFSO *************\n        //************************************************************************/\n        codeActivite: [null],\n        typeLocal: [null],\n        effectif: [null],\n        dateFinPrlvmt: [null],\n        DateRealisation: [null],\n        chiffreAffaire: [null],\n        numeroContract: [null],\n        //************************************************************************/\n      });\n    }\n\n    this.form.valueChanges.subscribe((res) => {\n\n      console.log(\"l'origine est :\", this.origine);\n\n      let qualif = this.form.value.qualification;\n      let trait = this.form.value.resultatTraitement;\n      if (qualif === 'Prêt débloqué') {\n        this.isPretDeb = true;\n      } else {\n        this.isPretDeb = false;\n      }\n      if (trait === 'Intéressé') {\n        this.isIntressed = true;\n      } else {\n        this.isIntressed = false;\n      }\n    });\n  }\n  typeclientChanged() {\n    this.personne.typeclient = this.form.value.typeclient\n    this.agences = []\n    this.villes = this.datafromdialog.villes;\n    this.form.patchValue({\n      ville: '',\n    });\n  }\n  agenceChange() {\n    let agence = this.form.controls['codeagence'].value\n    let adressePart = this.agences.filter(el => el.codeagence == agence)\n    this.adresse = adressePart[0].adresse\n  }\n  isEmpty = (obj) => {\n    for (var prop in obj) {\n      if (obj.hasOwnProperty(prop))\n        return false;\n    }\n    return true;\n  }\n  ngAfterViewInit() {\n    let data2 = {\n      valeurid: this.personne ? this.personne.valeurid : null\n    }\n    this.callServer.getHistory(data2).subscribe((res: any) => {\n      this.history = new MatTableDataSource(res.result);\n    })\n    this.callServer.getAnomalies(this.datafromdialog.personne?.valeurid).subscribe((res: any) => {\n      this.annomalies = new MatTableDataSource(res)\n    });\n    let data = {\n      agence: this.personne ? this.personne.agence : null,\n    };\n    let dataville = {\n      ville: this.personne ? this.personne.ville : \"ALL\",\n    };\n    this.callServer.getAgences(dataville).subscribe(\n      (resp: any) => {\n        this.agences = resp.results;\n      },\n      (err) => console.log(err)\n    );\n    if (this.personne && !this.isEmpty(this.personne)) {\n      if (this.personne?.datenaissance) {\n        this.form.patchValue({\n          datenaissance: new Date(this.personne?.datenaissance),\n        });\n      }\n      if (this.personne?.datecreation) {\n        this.form.patchValue({\n          datecreation: new Date(this.personne?.datecreation),\n        });\n      }\n      if (this.personne?.dateexpiration) {\n        this.form.patchValue({\n          dateexpiration: new Date(this.personne?.dateexpiration),\n        });\n      }\n    }\n\n    this.getCodePostal();\n\n  }\n\n  preventCaracters(event) {\n\n    let regex = /[0-9]/g;\n    var k;\n    k = event.key;  //         k = event.keyCode;  (Both can be used)\n    let isNumeric = regex.test(k);\n    return isNumeric\n  }\n  async getCodePostal() {\n    let ville = this.personne ? this.personne.ville : null\n    this.db.getCodePostaleByVille({ ville: ville }).subscribe((res: any) => {\n      if (res.length > 0)\n        this.form.patchValue({\n          codepostal: res.codePostale,\n        });\n    }, err => console.log(err))\n  }\n\n\n\n\n  sendToEvolan() {\n    let personne = this.form.value;\n\n    this.isHintNomAR = false;\n    this.isHintNom = false;\n    this.isHintPrenom = false;\n    this.isHintPrenomAR = false;\n    this.isHintCIN = false;\n    this.isHintSituationFamiliale = false;\n    this.isHintAdresse = false;\n    this.isHintAdresseAR = false;\n    this.isHintVille = false;\n    this.isHintVilleAR = false;\n    this.isHintStatutTraitement = false;\n    this.isHintGenre = false;\n    this.isHintCodeAgence = false;\n    this.isHintdatenaissance = false;\n    this.isHintdatecreation = false;\n    this.isHintformejuridique = false;\n    this.isHintadresseentreprise = false;\n    this.isHintadresseentrepriseAR = false;\n    this.isHintraisonsociale = false;\n    this.isHinttelgsm = false;\n    this.isHintRC = false;\n    this.isHintRIB = false;\n    this.isHintICE = false;\n\n    personne.montantdemande\n    if (personne?.datenaissance) {\n      personne.datenaissance = moment(personne?.datenaissance).format('DD/MM/YYYY')\n    }\n    if (personne?.datecreation) {\n      personne.datecreation = moment(personne?.datecreation).format('DD/MM/YYYY')\n    }\n    if (personne?.dateexpiration) {\n      personne.dateexpiration = moment(personne?.dateexpiration).format('DD/MM/YYYY')\n    }\n    if (personne?.daterendezvous) {\n      personne.daterendezvous = moment(personne?.daterendezvous).format('DD/MM/YYYY')\n    }\n    var count_errors = 0\n    console.log(\"personne?.resultatTraitement :\", personne.resultatTraitement);\n\n    if (personne?.resultatTraitement) {\n\n      if (personne?.resultatTraitement === 'Intéressé') {\n        personne.action = 'REC';\n        var arabicCharUnicodeRange = /[\\u0600-\\u06FF]/;\n        if (!personne?.nom) {\n          this.HintNom = 'le nom est obligatoire';\n          this.isHintNom = true;\n          count_errors++;\n        } else if (\n          arabicCharUnicodeRange.test(\n            String.fromCharCode(personne?.nom.charCodeAt(0))\n          )\n        ) {\n          this.HintNomAR = 'le nom doit être en francais';\n          this.isHintNomAR = true;\n          count_errors++;\n        }\n        if (!personne?.prenom) {\n          this.HintPrenom = 'le prenom est obligatoire';\n          this.isHintPrenom = true;\n          count_errors++;\n\n        } else if (\n          arabicCharUnicodeRange.test(\n            String.fromCharCode(personne?.prenom.charCodeAt(0))\n          )\n        ) {\n          this.HintPrenomAR = 'le prenom doit être en francais';\n          this.isHintPrenomAR = true;\n          count_errors++;\n        }\n        if (!personne?.genre) {\n          this.HintGenre = 'le genre est obligatoire';\n          this.isHintGenre = true;\n          count_errors++;\n        }\n        if (!personne?.cin) {\n          this.HintCIN = 'le cin est obligatoire';\n          this.isHintCIN = true;\n          count_errors++;\n        }\n        if (personne.typeclient == \"M\" && !personne.formejuridique) {\n          this.Hintformejuridique = 'forme juridique est obligatoire';\n          this.isHintformejuridique = true;\n          count_errors++;\n        }\n        if (personne.origine!=\"AW\" && personne.typeclient == \"M\" && !personne.rcommerce) {\n          this.HintRC = 'RC est obligatoire';\n          this.isHintRC = true;\n          count_errors++;\n        }\n        // if (personne.typeclient ==\"M\" && !personne.ice) {\n        //   this.HintICE = 'ICE est obligatoire';\n        //   this.isHintICE = true;\n        //   return;\n        // }\n        // if (personne.typeclient == \"M\" && !personne.ribentreprise) {\n        //   this.HintRIB = 'Numéro RIB est obligatoire';\n        //   this.isHintRIB = true;\n        //   return;\n        // }\n        if (personne.typeclient == \"M\" && !personne.datecreation) {\n          this.Hintdatecreation = 'date creation est obligatoire';\n          this.isHintdatecreation = true;\n          count_errors++;\n        }\n        if (personne.typeclient == \"M\" && !personne.raisonsociale) {\n          this.Hintraisonsociale = 'raison sociale est obligatoire';\n          this.isHintraisonsociale = true;\n          count_errors++;\n        }\n        if (personne.typeclient == \"M\" && !personne.adresseentreprise) {\n          this.Hintadresseentreprise = \"l'adresse est obligatoire\";\n          this.isHintadresseentreprise = true;\n          count_errors++;\n\n        } else if (personne.adresseentreprise &&\n          arabicCharUnicodeRange.test(\n            String.fromCharCode(personne?.adresseentreprise.charCodeAt(0))\n          )\n        ) {\n          this.HintadresseentrepriseAR = \"l'adresse doit être en francais\";\n          this.isHintadresseentrepriseAR = true;\n          count_errors++;\n\n        }\n        if (personne?.situationfamiliale !== \"C\" && personne?.situationfamiliale !== \"M\") {\n          this.HintSituationFamiliale =\n            'la situation familiale est obligatoire';\n          this.isHintSituationFamiliale = true;\n          count_errors++;\n        }\n        if (!personne?.codeagence) {\n          this.HintCodeAgence = \"l'Agence est obligatoire\";\n          this.isHintCodeAgence = true;\n          count_errors++;\n        }\n        if (!personne?.telgsm) {\n          this.Hinttelgsm = \"Téléphone est obligatoire\";\n          this.isHinttelgsm = true;\n          count_errors++;\n        }\n        if (!personne?.adresse) {\n          this.HintAdresse = \"l'adresse est obligatoire\";\n          this.isHintAdresse = true;\n          count_errors++;\n        } else if (\n          arabicCharUnicodeRange.test(\n            String.fromCharCode(personne?.adresse.charCodeAt(0))\n          )\n        ) {\n          this.HintAdresseAR = \"l'adresse doit être en francais\";\n          this.isHintAdresseAR = true;\n          count_errors++;\n        }\n        if (!personne?.ville) {\n          this.HintVille = 'la ville est obligatoire';\n          this.isHintVille = true;\n          count_errors++;\n        } else if (\n          arabicCharUnicodeRange.test(\n            String.fromCharCode(personne?.ville.charCodeAt(0))\n          )\n        ) {\n          this.HintVilleAR = 'la ville doit être en francais';\n          this.isHintVilleAR = true;\n          count_errors++;\n        }\n        this.isSettingEnded = false;\n        console.log(\"count errors 1 :\", count_errors);\n\n        if (count_errors != 0) {\n          this.isSettingEnded = true;\n          return;\n        } else {\n          this.callServer.sendToEvolan(personne).subscribe(\n            (res: any) => {\n              this.isSettingEnded = true;\n\n              this.onNoClick(this.datafromdialog.source).then(() => {\n                let snackBarRef = this.snackBar.open(\n                  'Demande enregistrer avec ID :' + res.msg,\n                  'OK',\n                  {\n                    duration: 15000,\n                    horizontalPosition: 'center',\n                    verticalPosition: 'bottom',\n                    panelClass: 'successClassSnack',\n                  }\n                );\n                snackBarRef.onAction().subscribe(() => {\n                  snackBarRef.dismiss();\n                });\n              });\n            },\n            (err) => {\n              this.isSettingEnded = true;\n\n              if (err.status === 500) {\n                let snackBarRef = this.snackBar.open(\n                  'une erreur est survenue, veuillez réessayer plustard',\n                  'OK',\n                  {\n                    duration: 15000,\n                    horizontalPosition: 'center',\n                    verticalPosition: 'top',\n                  }\n                );\n                snackBarRef.onAction().subscribe(() => {\n                  snackBarRef.dismiss();\n                });\n              } else {\n                this.isSettingEnded = true;\n\n                err.error.forEach((an) => {\n                  let snackBarRef = this.snackBar.open(\n                    an.anomalie,\n                    'OK',\n                    {\n                      duration: 15000,\n                      horizontalPosition: 'center',\n                      verticalPosition: 'top',\n                    }\n                  );\n                  snackBarRef.onAction().subscribe(() => {\n                    snackBarRef.dismiss();\n                  });\n                });\n              }\n            }\n          );\n        }\n      } else {\n        console.log(\"count errors 2 :\", count_errors);\n\n        if (personne?.resultatTraitement === 'nouvelle') {\n          this.HintStatutTraitement = 'le resultat de traitement est obligatoire';\n          this.isHintStatutTraitement = true;\n        } else {\n        personne.action = 'TEST';\n        this.isSettingEnded = false;\n        this.callServer.sendToEvolan(personne).subscribe(\n          (res: any) => {\n            this.onNoClick(this.datafromdialog.source).then(() => {\n              let snackBarRef = this.snackBar.open(\n                'Demande enregistrer avec ID :' + res.msg,\n                'OK',\n                {\n                  duration: 15000,\n                  horizontalPosition: 'center',\n                  verticalPosition: 'bottom',\n                  panelClass: 'successClassSnack',\n                }\n              );\n              snackBarRef.onAction().subscribe(() => {\n                snackBarRef.dismiss();\n              });\n            });\n          },\n          (err) => {\n            this.isSettingEnded = true;\n            err.error.forEach((an) => {\n              let snackBarRef = this.snackBar.open(\n                an.champ + an.anomalie,\n                'OK',\n                {\n                  duration: 15000,\n                  horizontalPosition: 'center',\n                  verticalPosition: 'top',\n                }\n              );\n              snackBarRef.onAction().subscribe(() => {\n                snackBarRef.dismiss();\n              });\n            });\n          }\n        );\n        }\n      }\n    } else {\n      console.log(\"count errors 3 :\", count_errors);\n\n      this.HintStatutTraitement = 'resultat de traitement est obligatoire';\n      this.isHintStatutTraitement = true;\n    }\n  }\n  changeQualification() {\n    let trait = this.form.value.resultatTraitement;\n    if (trait === 'Intéressé') {\n      this.form.patchValue({\n        qualification: \"Sans_feedback\"\n      });\n    }\n  }\n  retour(status): Promise<any> {\n    let user = localStorage.getItem('role')\n    if (!this.personne.creation && !this.personne.valeurid) {\n      let obj = {\n        origine: this.origine,\n        id: this.personne?.id,\n        user: user,\n        nom: this.personne?.nom,\n        prenom: this.personne?.prenom,\n        telgsm: this.personne?.telgsm,\n        cin: this.personne?.cin,\n      };\n      this.callServer.unlock(obj).subscribe((res) => {\n      }, (err) => {\n        if (err.status && err.status === 505) {\n          let snackBarRef = this.snackBar.open('unlock failed!', 'OK', { duration: 2000, horizontalPosition: 'center', verticalPosition: 'top' });\n          snackBarRef.onAction().subscribe(() => {\n            snackBarRef.dismiss()\n          })\n        }\n      });\n\n    }\n    this.dialogRef.close(status);\n    return new Promise((resolve, reject) => {\n      resolve('');\n    });\n  }\n  onNoClick(status): Promise<any> {\n    this.dialogRef.close(status);\n    return new Promise((resolve, reject) => {\n      resolve('');\n    });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { CallServerService } from 'src/app/services/call-server.service';\n\n@Component({\n  selector: 'app-change-password',\n  templateUrl: './change-password.component.html',\n  styleUrls: ['./change-password.component.scss']\n})\nexport class ChangePasswordComponent implements OnInit {\n  identifiant:string;\n  password:string;\n  oldpassword:string;\n  passwordHint: boolean;\n  oldpasswordHint: boolean;\n  identifiantHint: boolean;\n  constructor(private router:Router,private matDialogRef:MatDialogRef<ChangePasswordComponent>, private callServer:CallServerService, private snackBar:MatSnackBar) { }\n\n  ngOnInit(): void {\n  }\n  annuler(){\n    this.matDialogRef.close()\n  }\n  validate(){\n    if (!this.identifiant){\n      this.identifiantHint=true;\n      setTimeout(()=>{\n        this.identifiantHint=false\n      }, 3000)\n      return;\n    }\n    if (!this.password){\n      this.passwordHint = true;\n      setTimeout(()=>{\n        this.passwordHint=false\n      }, 3000)\n      return;\n    }\n    if (!this.oldpassword){\n      this.oldpasswordHint = true;\n      setTimeout(()=>{\n        this.oldpasswordHint=false\n      }, 3000)\n      return;\n    }\n    let data={\n      password:this.password,\n      oldpassword:this.oldpassword,\n      identifiant:this.identifiant\n    }\n    this.callServer.changePassword(data).subscribe((res)=>{\n      let snackBarRef = this.snackBar.open('Mot de passe modifié avec succés.', 'OK', {duration:15000, horizontalPosition:'center', verticalPosition:'top', panelClass:\"successClassSnack\"});\n      snackBarRef.onAction().subscribe(()=>{\n        snackBarRef.dismiss()\n      })\n      this.matDialogRef.close()\n    }, (err)=>{\n      if (err.status == 416){\n        let snackBarRef = this.snackBar.open(err.error.msg, 'OK', {duration:15000, horizontalPosition:'center', verticalPosition:'top', panelClass:\"failureClassSnack\"});\n        snackBarRef.onAction().subscribe(()=>{\n          snackBarRef.dismiss()\n        })\n      }else if (err.status == 417){\n        let snackBarRef = this.snackBar.open(err.error.msg, 'OK', {duration:15000, horizontalPosition:'center', verticalPosition:'top', panelClass:\"failureClassSnack\"});\n        snackBarRef.onAction().subscribe(()=>{\n          snackBarRef.dismiss()\n        })\n      }else if (err.status == 400){\n        let snackBarRef = this.snackBar.open(err.error.msg, 'OK', {duration:15000, horizontalPosition:'center', verticalPosition:'top', panelClass:\"failureClassSnack\"});\n        snackBarRef.onAction().subscribe(()=>{\n          snackBarRef.dismiss()\n        })\n      }else { \n        let snackBarRef = this.snackBar.open('Un problème est survenu, réessayez plus tard.', 'OK', {duration:15000, horizontalPosition:'center', verticalPosition:'top', panelClass:\"failureClassSnack\"});\n        snackBarRef.onAction().subscribe(()=>{\n          snackBarRef.dismiss()\n        })\n      }\n    })\n  }\n}\n","<div mat-dialog-content>\n    <div>\n        <h1>Changement mot de passe :</h1>\n    </div>\n    <form style=\"width:350px\">\n        <div style=\"margin: 20px auto;display: flex; flex-direction: column;gap: 10px;\">\n            <mat-form-field appearance=\"standard\">\n                <mat-label>Votre Identifiant</mat-label>\n                <input matInput [(ngModel)]=\"identifiant\" [ngModelOptions]=\"{standalone: true}\">\n                <mat-hint style=\"color: crimson\" *ngIf=\"identifiantHint\">identifiant est obligatoire</mat-hint>\n            </mat-form-field>\n        </div>\n        <div style=\"margin: 20px auto; display: flex; flex-direction: column;gap: 10px;\">\n            <mat-form-field appearance=\"standard\">\n                <mat-label>Mot de Pass Actuel</mat-label>\n                <input matInput [(ngModel)]=\"oldpassword\" [ngModelOptions]=\"{standalone: true}\">\n            </mat-form-field>\n            <mat-hint style=\"color: crimson\" *ngIf=\"oldpasswordHint\">Veuillez saisir votre mot de passe actuel.</mat-hint>\n            <!-- <mat-hint style=\"color: rgb(25, 32, 128)\">Assurez-vous que votre mot de passe comporte au moins 6 caractères et qu'il contient des lettres, des chiffres et des caractères spéciaux.</mat-hint> -->\n        </div>\n        <div style=\"margin: 20px auto; display: flex; flex-direction: column;gap: 10px;\">\n            <mat-form-field appearance=\"standard\">\n                <mat-label>Nouveau Mot de Pass</mat-label>\n                <input matInput [(ngModel)]=\"password\" [ngModelOptions]=\"{standalone: true}\">\n            </mat-form-field>\n            <mat-hint style=\"color: crimson\" *ngIf=\"passwordHint\">Veuillez saisir votre nouveau mot de passe.</mat-hint>\n            <mat-hint style=\"color: rgb(25, 32, 128)\">Assurez-vous que votre mot de passe comporte au moins 6 caractères et qu'il contient des lettres, des chiffres et des caractères spéciaux.</mat-hint>\n        </div>\n    </form>\n</div>\n<div mat-dialog-actions>\n    <button mat-flat-button color=\"warn\" (click)=\"annuler()\">Annuler</button>\n    <button mat-flat-button color=\"primary\" (click)=\"validate()\">Valider</button>\n</div>","import { HttpClient } from '@angular/common/http';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport {\n  MatDialog,\n  MatDialogRef,\n  MAT_DIALOG_DATA,\n} from '@angular/material/dialog';\nimport { DateAdapter } from '@angular/material/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CallServerService } from 'src/app/services/call-server.service';\nimport * as moment from 'moment/moment';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { DatabaseService } from 'src/app/services/database.service';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { AgenceDataService } from 'src/app/services/agenceData.service';\n\n@Component({\n  selector: 'app-new-demande',\n  templateUrl: './new-demande.component.html',\n  styleUrls: ['./new-demande.component.scss']\n})\nexport class NewDemandeComponent implements OnInit {\n  personne: any;\n  typeclient: any = \"P\";\n  niveaux = [{ code: \"1001\", titre: \"INSCRIT AU REGISTRE DE COMMERCE\" }, { code: \"1002\", titre: \"Auto Entrepreneur\" }, { code: \"1003\", titre: \"Assujiti Taxe PRO\" }, { code: \"1004\", titre: \"Inscrit Registre PRO\" }, { code: \"1005\", titre: \"Agrement Pro\" }, { code: \"1006\", titre: \"Aucun Justif Formalisme\" }];\n  formejuridiques = [{ code: \"B\", titre: \"Entrepreneur individuel\" }, { code: \"C\", titre: \"Société en nom collectif\" }, { code: \"D\", titre: \"Société en commandite simple\" }, { code: \"E\", titre: \"Association ou sté en participation\" }, { code: \"F\", titre: \"Société anonyme\" }, { code: \"G\", titre: \"Société en commandite par action\" }, { code: \"H\", titre: \"Société à responsabilté limitée\" }, { code: \"I\", titre: \"S.A.R.L. d'associé unique\" }, { code: \"J\", titre: \"Société coopérative\" }, { code: \"K\", titre: \"Société civile\" }, { code: \"M\", titre: \"Société de fait\" }]\n  agences: any[];\n  isAlert: boolean = false;\n  alert: any;\n\n\n  // logs: any;\n\n  statusTraitement = [\n    // { statut: 'Refus par l\\'agence' },\n    { statut: 'Erronée' },\n    { statut: 'Intéressé' },\n    { statut: 'Non intéressé' },\n    { statut: 'Injoignable' },\n    { statut: 'Intéressé plustard' },\n  ];\n  qualification = [\n    { statut: 'Injoignable' },\n    { statut: 'Non éligible' },\n    { statut: 'Réorientée' },\n    { statut: 'Hors zone' },\n    { statut: 'Plus intéressé' },\n    { statut: 'Intéressé plustard' },\n    { statut: 'Client non venu au RDV' },\n    { statut: 'RDV confirmé' },\n    { statut: 'Dossier en cours' },\n    { statut: 'Prêt débloqué' },\n    { statut: 'Prêt soldé' },\n    { statut: 'Contrat annulé' },\n    { statut: 'Contrat consolidé' },\n    { statut: 'Sans_feedback' },\n  ];\n  historyDisplayedColumns = [\"valeurid\", \"resultatTraitement\", \"user\", \"codegestionnairecible\", \"entry_date\", \"qualification\", \"statuttraitement\"]\n  annomalieDisplayedColumns = [\"champ\", \"anomalie\"]\n  url: any;\n  urlca: any;\n  url2: 'sip:0618265025';\n  form: FormGroup;\n  HintNom: string;\n  isHintNom: boolean = false;\n  HintNomAR: string;\n  isHintNomAR: boolean = false;\n  HintPrenom: string;\n  isHintPrenom: boolean = false;\n  HintPrenomAR: string;\n  isHintPrenomAR: boolean = false;\n  HintCIN: string;\n  isHintCIN: boolean = false;\n  HintSituationFamiliale: string;\n  isHintSituationFamiliale: boolean = false;\n  HintAdresse: string;\n  isHintAdresse: boolean = false;\n  HintAdresseAR: string;\n  isHintAdresseAR: boolean = false;\n  HintVille: string;\n  isHintVille: boolean = false;\n  HintVilleAR: string;\n  isHintVilleAR: boolean = false;\n  HintStatutTraitement: string;\n  isHintStatutTraitement: boolean = false;\n  HintGenre: string;\n  isHintGenre: boolean = false;\n  isHintCodeAgence: boolean = false;\n  HintCodeAgence: string;\n  villes: any;\n  villecodeagence: any;\n  isSettingEnded: boolean = false;\n  // codeagence: any;\n  isIntressed: boolean = false;\n  isPretDeb: boolean = false;\n  isCIntressed: boolean;\n  origine: any = \"AA\";\n  regions: any;\n  history: MatTableDataSource<any>;\n  adresse: string = \"\";\n  annomalies: MatTableDataSource<any>;\n  activities: any;\n  messageExistant: string = '';\n  role: string;\n  isAgent: boolean;\n  origins: string;\n  isRIFSO: boolean;\n\n  constructor(\n    private router: Router,\n    private snackBar: MatSnackBar,\n    public callServer: CallServerService,\n    public dialog: MatDialog,\n    private dateadapter: DateAdapter<Date>,\n    private activeRoute: ActivatedRoute,\n    private http: HttpClient,\n    private sanitizer: DomSanitizer,\n    private fb: FormBuilder,\n    private db: DatabaseService,\n    private agenceDataService: AgenceDataService\n  ) {\n    this.dateadapter.setLocale('en-GB'); // dd/MM/YYYY\n    this.agenceDataService.geVilles().subscribe((respp: any) => {\n      this.villes = respp.results;\n    });\n\n\n\n    this.role = localStorage.getItem('role');\n    if (this.role.startsWith(\"AGT\")) {\n      this.isAgent = true;\n    }\n    this.origins = localStorage.getItem('origins');\n\n    if (this.origins.includes(\"RIFSO\")) {\n      this.isRIFSO = true\n    }\n  }\n  getcodeagenes() {\n    this.adresse = ''\n\n    let data = {\n      ville: this.form.value.ville,\n    };\n    this.callServer.getAgences(data).subscribe(\n      (resp: any) => {\n        this.agences = resp.results;\n        if (data.ville.toUpperCase() === \"RABAT\" && !this.isRIFSO) {\n          this.agences = this.agences.filter(agence => agence.codeagence !== \"SG\");\n        }\n      },\n      (err) => console.log(err)\n    );\n  }\n\n  getActivities() {\n    this.callServer.getActivities().subscribe(\n      (results: any) => {\n        this.activities = results;\n      },\n      (err) => console.log(err)\n    );\n  }\n  getSecteur() {\n    let codeActivite = this.form.controls['codeActivite'].value\n    let secteurPart = this.activities.filter(el => el.code == codeActivite)\n    this.form.patchValue({\n      secteur: secteurPart[0].secteur,\n    });\n  }\n  ngOnInit(): void {\n    this.getActivities()\n    let codeorganisme = this.origine == \"RS\" ? \"AAA\" : this.origine == \"WB\" ? \"AAA\" : this.origine == \"AW\" ? \"AWB\" : \"\";\n    let canal = this.origine == \"RS\" ? \"107\" : this.origine == \"WB\" ? \"108\" : this.origine == \"AW\" ? \"115\" : \"\"\n\n    this.form = this.fb.group({\n      user: [\"\"],\n      sendMe: [true],\n      id: [null],\n      agence: [\"\"],\n      entry_date: [null],\n      email: [null],\n      secteur: [null],\n      projet: [null],\n      daterendezvous: [null],\n      typeclient: [\"P\"],\n      raisonsociale: [null],\n      raisonsocialesuite: [null],\n      ice: [null],\n      rcommerce: [null],\n      nifiscale: [null],\n      numpattente: [null],\n      datecreation: [null],\n      ribentreprise: [null],\n      formejuridique: [null],\n      telbureau: [null],\n      adresseentreprise: [null],\n      rueentreprise: [null],\n      quartierentreprise: [null],\n      codepostaleentreprise: [null],\n      villeentreprise: [null],\n      genre: [null],\n      nom: [null],\n      prenom: [null],\n      cin: [null],\n      dateexpiration: [null],\n      dateDeblocage: [null],\n      adresse: [null],\n      rue: [null],\n      quartier: [null],\n      codepostal: [null],\n      ville: [null],\n      teldomicile: [null],\n      telgsm: [null],\n      telprofessionnel: [null],\n      datenaissance: [null],\n      situationfamiliale: [null],\n      numrib: [null],\n      niveauformalisme: [null],\n      partfemme: [null],\n      montantdemande: [null],\n      nombreecheance: [null],\n      codeagence: [null],\n      codegestionnaire: [null],\n      action: [null],\n      canal: [null],\n      codeagencecible: [null],\n      codeorganisme: [null],\n      origine: [null],\n      produit: [null],\n      resultatTraitement: [null],\n      statuttraitement: [null],\n      id_od: [null],\n      valeurid: [null],\n      qualification: [null],\n      montantdebloque: [null],\n      codeTribunal: [null],\n      // *********************Champs pour RIFSO *************\n      //************************************************************************/\n      codeActivite: [null],\n      typeLocal: [null],\n      effectif: [null],\n      dateFinPrlvmt: [null],\n      DateRealisation: [null],\n      chiffreAffaire: [null],\n      numeroContract: [null],\n      //************************************************************************/\n    });\n    this.form.valueChanges.subscribe((res) => {\n      let qualif = this.form.value.qualification;\n      let trait = this.form.value.resultatTraitement;\n      if (qualif === 'Prêt débloqué') {\n        this.isPretDeb = true;\n      } else {\n        this.isPretDeb = false;\n      }\n      if (trait === 'Intéressé') {\n        this.isIntressed = true;\n      } else {\n        this.isIntressed = false;\n      }\n    });\n  }\n  agenceChange() {\n    let agence = this.form.controls['codeagence'].value\n    let adressePart = this.agences.filter(el => el.codeagence == agence)\n    this.adresse = adressePart[0].adresse\n  }\n  ngAfterViewInit() {\n  }\n\n  sendToEvolan() {\n    let personne = this.form.value;\n    if (personne.datenaissance) {\n      personne.datenaissance = moment(personne.datenaissance).format('DD/MM/YYYY')\n    }\n    if (personne.datecreation) {\n      personne.datecreation = moment(personne.datecreation).format('DD/MM/YYYY')\n    }\n    if (personne.dateexpiration) {\n      personne.dateexpiration = moment(personne.dateexpiration).format('DD/MM/YYYY')\n    }\n    if (personne.daterendezvous) {\n      personne.daterendezvous = moment(personne.daterendezvous).format('DD/MM/YYYY')\n    }\n\n    personne.action = 'REC';\n    var arabicCharUnicodeRange = /[\\u0600-\\u06FF]/;\n    if (!personne.nom) {\n      this.HintNom = 'le nom est obligatoire';\n      this.isHintNom = true;\n      return;\n    } else if (\n      arabicCharUnicodeRange.test(\n        String.fromCharCode(personne.nom.charCodeAt(0))\n      )\n    ) {\n      this.HintNomAR = 'le nom doit être en francais';\n      this.isHintNomAR = true;\n      return;\n    }\n    if (!personne.prenom) {\n      this.HintPrenom = 'le prenom est obligatoire';\n      this.isHintPrenom = true;\n      return;\n    } else if (\n      arabicCharUnicodeRange.test(\n        String.fromCharCode(personne.prenom.charCodeAt(0))\n      )\n    ) {\n      this.HintPrenomAR = 'le prenom doit être en francais';\n      this.isHintPrenomAR = true;\n      return;\n    }\n    if (!personne.genre) {\n      this.HintGenre = 'le genre est obligatoire';\n      this.isHintGenre = true;\n      return;\n    }\n    if (!personne.cin) {\n      this.HintCIN = 'le cin est obligatoire';\n      this.isHintCIN = true;\n      return;\n    }\n\n    if (personne.situationfamiliale !== \"C\" && personne.situationfamiliale !== \"M\") {\n      this.HintSituationFamiliale =\n        'la situation familiale est obligatoire';\n      this.isHintSituationFamiliale = true;\n      return;\n    }\n    if (!personne.codeagence) {\n      this.HintCodeAgence = \"l'Agence est obligatoire\";\n      this.isHintCodeAgence = true;\n      return;\n    }\n    if (!personne.adresse) {\n      this.HintAdresse = \"l'adresse est obligatoire\";\n      this.isHintAdresse = true;\n      return;\n    } else if (\n      arabicCharUnicodeRange.test(\n        String.fromCharCode(personne.adresse.charCodeAt(0))\n      )\n    ) {\n      this.HintAdresseAR = \"l'adresse doit être en francais\";\n      this.isHintAdresseAR = true;\n      return;\n    }\n    if (!personne.ville) {\n      this.HintVille = 'la ville est obligatoire';\n      this.isHintVille = true;\n      return;\n    } else if (\n      arabicCharUnicodeRange.test(\n        String.fromCharCode(personne.ville.charCodeAt(0))\n      )\n    ) {\n      this.HintVilleAR = 'la ville doit être en francais';\n      this.isHintVilleAR = true;\n      return;\n    }\n    this.isSettingEnded = false;\n    // this.callServer.nouvelle_demande(personne).subscribe(\n    //   (res: any) => {\n    //     let snackBarRef = this.snackBar.open(\n    //       'Demande enregistrer avec ID :' + res.msg,\n    //       'OK',\n    //       {\n    //         duration: 15000,\n    //         horizontalPosition: 'center',\n    //         verticalPosition: 'bottom',\n    //         panelClass: 'successClassSnack',\n    //       }\n    //     );\n    //     snackBarRef.onAction().subscribe(() => {\n    //       snackBarRef.dismiss();\n    //     });\n    //   },\n    //   (err) => {\n    //     if (err.status === 500) {\n    //       let snackBarRef = this.snackBar.open(\n    //         'une erreur est survenue, veuillez réessayer plustard',\n    //         'OK',\n    //         {\n    //           duration: 15000,\n    //           horizontalPosition: 'center',\n    //           verticalPosition: 'top',\n    //         }\n    //       );\n    //       snackBarRef.onAction().subscribe(() => {\n    //         snackBarRef.dismiss();\n    //       });\n    //     } else {\n    //       this.isSettingEnded = true;\n    //       console.log(err)\n    //       err.error.forEach((an) => {\n    //         let snackBarRef = this.snackBar.open(\n    //           an.champ + an.anomalie,\n    //           'OK',\n    //           {\n    //             duration: 15000,\n    //             horizontalPosition: 'center',\n    //             verticalPosition: 'top',\n    //           }\n    //         );\n    //         snackBarRef.onAction().subscribe(() => {\n    //           snackBarRef.dismiss();\n    //         });\n    //       });\n    //     }\n    //   }\n    // );\n  }\n}\n","<div mat-dialog-content>\n    <form class=\"form\" [formGroup]=\"form\" >\n        <div style=\"margin: 15px auto;\">\n            <mat-form-field appearance=\"fill\">\n                <mat-label>origine</mat-label>\n                <input matInput type=\"text\" formControlName=\"origine\" />\n            </mat-form-field>\n        </div>\n        <div style=\"margin: 15px auto;\">\n            <mat-form-field appearance=\"fill\">\n                <mat-label>TypeClient</mat-label>\n                <mat-select formControlName=\"typeclient\"\n                    (selectionChange)=\"typeclient = form.value.typeclient\">\n                    <mat-option value=\"M\"> Personne Morale</mat-option>\n                    <mat-option value=\"P\"> Personne Physique </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n\n        <div style=\"margin: 15px auto;\">\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Nom {{typeclient==\"M\"?'(Gérant)':''}}</mat-label>\n                <input type=\"text\" maxlength=\"32\" minlength=\"3\" formControlName=\"nom\" matInput />\n                <mat-hint style=\"color: crimson\" *ngIf=\"isHintNom\">{{\n                    HintNom\n                    }}</mat-hint>\n                <mat-hint style=\"color: crimson\" *ngIf=\"isHintNomAR\">{{\n                    HintNomAR\n                    }}</mat-hint>\n            </mat-form-field>\n        </div>\n\n        <div style=\"margin: 15px auto;\">\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Prénom {{typeclient==\"M\"?'(Gérant)':''}}</mat-label>\n                <input type=\"text\" maxlength=\"32\" minlength=\"3\" formControlName=\"prenom\" matInput />\n                <mat-hint style=\"color: crimson\" *ngIf=\"isHintPrenom\">{{\n                    HintPrenom\n                    }}</mat-hint>\n                <mat-hint style=\"color: crimson\" *ngIf=\"isHintPrenomAR\">{{\n                    HintPrenomAR\n                    }}</mat-hint>\n            </mat-form-field>\n        </div>\n\n        <div style=\"margin: 15px auto;\">\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Genre {{typeclient==\"M\"?'(Gérant)':''}}</mat-label>\n                <mat-select formControlName=\"genre\">\n                    <mat-option value=\"M.\"> Monsieur </mat-option>\n                    <mat-option value=\"MME\"> Madame </mat-option>\n                </mat-select>\n                <mat-hint style=\"color: crimson\" *ngIf=\"isHintGenre\">{{\n                    HintGenre\n                    }}</mat-hint>\n            </mat-form-field>\n        </div>\n\n        <div style=\"margin: 15px auto;\">\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Date Naissance {{typeclient==\"M\"?'(Gérant)':''}}</mat-label>\n                <input formControlName=\"datenaissance\" matInput [matDatepicker]=\"datenaisscepicker\" />\n                <mat-datepicker-toggle matSuffix [for]=\"datenaisscepicker\"></mat-datepicker-toggle>\n                <mat-datepicker #datenaisscepicker></mat-datepicker>\n                <mat-hint style=\"color: crimson\" *ngIf=\"false\">Hint</mat-hint>\n            </mat-form-field>\n        </div>\n        <div style=\"margin: 15px auto;\">\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Situation Familiale {{typeclient==\"M\"?'(Gérant)':''}}</mat-label>\n                <mat-select formControlName=\"situationfamiliale\">\n                    <mat-option value=\"M\"> Marié(e) </mat-option>\n                    <mat-option value=\"C\"> Célibataire </mat-option>\n                    <mat-option value=\"D\"> Divorsé(e) </mat-option>\n                    <mat-option value=\"V\"> veuf(ve) </mat-option>\n                </mat-select>\n                <mat-hint style=\"color: crimson\" *ngIf=\"isHintSituationFamiliale\">{{\n                    HintSituationFamiliale\n                    }}</mat-hint>\n            </mat-form-field>\n        </div>\n        <div style=\"margin: 15px auto;\">\n            <mat-form-field appearance=\"fill\">\n                <mat-label>CIN {{typeclient==\"M\"?'(Gérant)':''}}</mat-label>\n                <input type=\"text\" maxlength=\"15\" minlength=\"3\" formControlName=\"cin\" matInput />\n                <mat-hint style=\"color: crimson\" *ngIf=\"isHintCIN\">{{\n                    HintCIN\n                    }}</mat-hint>\n            </mat-form-field>\n        </div>\n\n        <div style=\"margin: 15px auto;\">\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Date Expiration CIN {{typeclient==\"M\"?'(Gérant)':''}}</mat-label>\n                <input formControlName=\"dateexpiration\" matInput [matDatepicker]=\"dateexpirationpicker\" />\n                <mat-datepicker-toggle matSuffix [for]=\"dateexpirationpicker\"></mat-datepicker-toggle>\n                <mat-datepicker #dateexpirationpicker></mat-datepicker>\n                <mat-hint style=\"color: crimson\" *ngIf=\"false\">Hint</mat-hint>\n            </mat-form-field>\n        </div>\n\n        <div style=\"margin: 15px auto;\">\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Adresse {{typeclient==\"M\"?'(Gérant)':''}}</mat-label>\n                <input type=\"text\" maxlength=\"32\" minlength=\"3\" formControlName=\"adresse\" matInput />\n                <mat-hint style=\"color: crimson\" *ngIf=\"isHintAdresse\">{{\n                    HintAdresse\n                    }}</mat-hint>\n                <mat-hint style=\"color: crimson\" *ngIf=\"isHintAdresseAR\">{{\n                    HintAdresseAR\n                    }}</mat-hint>\n            </mat-form-field>\n        </div>\n        <div style=\"margin: 15px auto;\">\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Adresse ligne 1 {{typeclient==\"M\"?'(Gérant)':''}}</mat-label>\n                <input type=\"text\" maxlength=\"32\" minlength=\"3\" formControlName=\"rue\" matInput />\n            </mat-form-field>\n        </div>\n        <div style=\"margin: 15px auto;\">\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Adresse ligne 2 {{typeclient==\"M\"?'(Gérant)':''}}</mat-label>\n                <input type=\"text\" maxlength=\"32\" minlength=\"3\" formControlName=\"quartier\" matInput />\n            </mat-form-field>\n        </div>\n\n        <div style=\"margin: 15px auto;\">\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Ville {{typeclient==\"M\"?'(Gérant)':''}}</mat-label>\n                <mat-select formControlName=\"ville\" (selectionChange)=\"getcodeagenes()\">\n                    <mat-option *ngFor=\"let v of villes\" [value]=\"v.ville\">\n                        {{ v.ville }}\n                    </mat-option>\n                </mat-select>\n                <mat-hint type=\"text\" style=\"color: crimson\" *ngIf=\"isHintVille\">{{ HintVille }}</mat-hint>\n                <mat-hint type=\"text\" style=\"color: crimson\" *ngIf=\"isHintVilleAR\">{{ HintVilleAR }}</mat-hint>\n            </mat-form-field>\n        </div>\n\n        <div style=\"margin: 15px auto;\">\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Code Postal {{typeclient==\"M\"?'(Gérant)':''}}</mat-label>\n                <input type=\"text\" maxlength=\"5\" minlength=\"5\" formControlName=\"codepostal\" matInput />\n                <mat-hint style=\"color: crimson\" *ngIf=\"false\">Hint</mat-hint>\n            </mat-form-field>\n        </div>\n\n        <div style=\"margin: 15px auto;\">\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Agence </mat-label>\n                <input type=\"text\" formControlName=\"codeagence\" matInput />\n                <!-- <mat-select formControlName=\"codeagence\" (selectionChange)=\"agenceChange()\">\n                    <mat-option *ngFor=\"let agence of agences\" [value]=\"agence.codeagence\">\n                        {{ agence.agence }} ({{agence.codeagence}})\n                    </mat-option>\n                </mat-select> -->\n                <mat-hint style=\"color: crimson\" *ngIf=\"isHintCodeAgence\">{{\n                    HintCodeAgence\n                    }}</mat-hint>\n                <!-- <mat-hint style=\"color: rgb(8, 2, 3); margin-top: 12px;min-width: 180px;font-size: small;\"> <span\n                        style=\"color:#626262\">Adresse: </span>{{\n                    adresse\n                    }}</mat-hint> -->\n            </mat-form-field>\n        </div>\n\n        <div style=\"margin: 15px auto;\">\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Tel Domicile</mat-label>\n                <input type=\"text\" maxlength=\"10\" minlength=\"10\" formControlName=\"teldomicile\" matInput />\n                <mat-hint style=\"color: crimson\" *ngIf=\"false\">Hint</mat-hint>\n            </mat-form-field>\n        </div>\n        <div style=\"margin: 15px auto;\">\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Tel GSM</mat-label>\n                <input type=\"text\" maxlength=\"10\" minlength=\"10\" formControlName=\"telgsm\" matInput />\n                <mat-hint style=\"color: crimson\" *ngIf=\"false\">Hint</mat-hint>\n            </mat-form-field>\n        </div>\n\n        <div style=\"margin: 15px auto;\">\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Tel Professionnel</mat-label>\n                <input type=\"text\" maxlength=\"10\" minlength=\"10\" formControlName=\"telprofessionnel\" matInput />\n                <mat-hint style=\"color: crimson\" *ngIf=\"false\">Hint</mat-hint>\n            </mat-form-field>\n        </div>\n\n        <div style=\"margin: 15px auto;\">\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Montant Demandé</mat-label>\n                <input max=\"50000\" min=\"0\" formControlName=\"montantdemande\" matInput />\n                <mat-hint style=\"color: crimson\" *ngIf=\"false\">Hint</mat-hint>\n            </mat-form-field>\n        </div>\n\n        <div style=\"margin: 15px auto;\">\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Nombre d'échéances</mat-label>\n                <input type=\"number\" max=\"24\" min=\"1\" formControlName=\"nombreecheance\" matInput />\n                <mat-hint style=\"color: crimson\" *ngIf=\"false\">Hint</mat-hint>\n            </mat-form-field>\n        </div>\n        <div style=\"margin: 15px auto;\">\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Produit</mat-label>\n                <input formControlName=\"produit\" matInput />\n                <mat-hint style=\"color: crimson\" *ngIf=\"false\">Hint</mat-hint>\n            </mat-form-field>\n        </div>\n        <div style=\"margin: 15px auto;\">\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Secteur</mat-label>\n                <input formControlName=\"secteur\" matInput />\n                <mat-hint style=\"color: crimson\" *ngIf=\"false\">Hint</mat-hint>\n            </mat-form-field>\n        </div>\n        <div style=\"margin: 15px auto;\">\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Projet</mat-label>\n                <input formControlName=\"projet\" matInput />\n                <mat-hint style=\"color: crimson\" *ngIf=\"false\">Hint</mat-hint>\n            </mat-form-field>\n        </div>\n        <div style=\"margin: 15px auto;\">\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Email</mat-label>\n                <input formControlName=\"email\" matInput />\n                <mat-hint style=\"color: crimson\" *ngIf=\"false\">Hint</mat-hint>\n            </mat-form-field>\n        </div>\n\n        <div style=\"margin: 15px auto;\">\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Numéro RIB</mat-label>\n                <input type=\"text\" minlength=\"24\" maxlength=\"24\" formControlName=\"numrib\" matInput />\n                <mat-hint style=\"color: crimson\" *ngIf=\"false\">Hint</mat-hint>\n            </mat-form-field>\n        </div>\n\n        <!-- <div style=\"margin: 15px auto;\">\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Résultat de Traitement</mat-label>\n                <mat-select [disabled]=\"isCIntressed\" formControlName=\"resultatTraitement\">\n                    <mat-option *ngFor=\"let status of statusTraitement\" [value]=\"status.statut\">\n                        {{ status.statut }}\n                    </mat-option>\n                </mat-select>\n                <mat-hint style=\"color: crimson\" *ngIf=\"isHintStatutTraitement\">{{\n                    HintStatutTraitement\n                    }}</mat-hint>\n            </mat-form-field>\n        </div> -->\n        <!-- <div *ngIf=\"isIntressed || isCIntressed\" style=\"margin: 15px auto;\">\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Qualification</mat-label>\n                <mat-select formControlName=\"qualification\">\n                    <mat-option *ngFor=\"let status of qualification\" [value]=\"status.statut\">\n                        {{ status.statut }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div> -->\n<!-- \n        <div *ngIf=\"isPretDeb\" style=\"margin: 15px auto;\">\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Montant Débloqué</mat-label>\n                <input type=\"number\" max=\"50000\" min=\"0\" formControlName=\"montantdebloque\" matInput />\n                <mat-hint style=\"color: crimson\" *ngIf=\"false\">Hint</mat-hint>\n            </mat-form-field>\n        </div> -->\n\n        <!-- <div style=\"margin: 15px auto;\">\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Date Rendez-Vous</mat-label>\n                <input formControlName=\"daterendezvous\" matInput [matDatepicker]=\"daterendezvouspicker\" />\n                <mat-datepicker-toggle matSuffix [for]=\"daterendezvouspicker\"></mat-datepicker-toggle>\n                <mat-datepicker #daterendezvouspicker></mat-datepicker>\n                <mat-hint style=\"color: crimson\" *ngIf=\"false\">Hint</mat-hint>\n            </mat-form-field>\n        </div> -->\n\n        <div style=\"margin: 15px auto;\" *ngIf=\"typeclient=='M'\">\n            <mat-form-field appearance=\"fill\">\n                <mat-label>ICE</mat-label>\n                <input formControlName=\"ice\" matInput />\n                <mat-hint style=\"color: crimson;\" *ngIf=\"false\">Hint</mat-hint>\n            </mat-form-field>\n        </div>\n        <div style=\"margin: 15px auto;\" *ngIf=\"typeclient=='M'\">\n            <mat-form-field appearance=\"fill\">\n                <mat-label>RC</mat-label>\n                <input formControlName=\"rcommerce\" matInput />\n                <mat-hint style=\"color: crimson;\" *ngIf=\"false\">Hint</mat-hint>\n            </mat-form-field>\n        </div>\n        <div style=\"margin: 15px auto;\" *ngIf=\"typeclient=='M'\">\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Raison Social</mat-label>\n                <input formControlName=\"raisonsociale\" matInput />\n                <mat-hint style=\"color: crimson;\" *ngIf=\"false\">Hint</mat-hint>\n            </mat-form-field>\n        </div>\n        <div style=\"margin: 15px auto;\" *ngIf=\"typeclient=='M'\">\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Raison Social Suite</mat-label>\n                <input formControlName=\"raisonsocialesuite\" matInput />\n                <mat-hint style=\"color: crimson;\" *ngIf=\"false\">Hint</mat-hint>\n            </mat-form-field>\n        </div>\n        <div style=\"margin: 15px auto;\" *ngIf=\"typeclient=='M'\">\n            <mat-form-field appearance=\"fill\">\n                <mat-label>N° Fiscal</mat-label>\n                <input formControlName=\"nifiscale\" matInput />\n                <mat-hint style=\"color: crimson;\" *ngIf=\"false\">Hint</mat-hint>\n            </mat-form-field>\n        </div>\n        <div style=\"margin: 15px auto;\" *ngIf=\"typeclient=='M'\">\n            <mat-form-field appearance=\"fill\">\n                <mat-label>N° Pattente</mat-label>\n                <input formControlName=\"numpattente\" matInput />\n                <mat-hint style=\"color: crimson;\" *ngIf=\"false\">Hint</mat-hint>\n            </mat-form-field>\n        </div>\n\n        <div style=\"margin: 15px auto;\" *ngIf=\"typeclient=='M'\">\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Date Création (Entreprise)</mat-label>\n                <input formControlName=\"datecreation\" matInput [matDatepicker]=\"datecreationpicker\" />\n                <mat-datepicker-toggle matSuffix [for]=\"datecreationpicker\"></mat-datepicker-toggle>\n                <mat-datepicker #datecreationpicker></mat-datepicker>\n                <mat-hint style=\"color: crimson\" *ngIf=\"false\">Hint</mat-hint>\n            </mat-form-field>\n        </div>\n        <!-- \n        <div *ngIf=\"isPretDeb\" style=\"margin: 15px auto;\">\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Chiffre d'affaire</mat-label>\n          <input type=\"number\" max=\"50000\" min=\"0\" formControlName=\"montantdebloque\" matInput />\n          <mat-hint style=\"color: crimson\" *ngIf=\"false\">Hint</mat-hint>\n        </mat-form-field>\n      </div> \n      -->\n        <div *ngIf=\"typeclient=='M'\" style=\"margin: 15px auto;\">\n            <mat-form-field appearance=\"fill\">\n                <mat-label>RIB Entreprise</mat-label>\n                <input type=\"text\" minlength=\"24\" maxlength=\"24\" formControlName=\"ribentreprise\" matInput />\n                <mat-hint style=\"color: crimson\" *ngIf=\"false\">Hint</mat-hint>\n            </mat-form-field>\n        </div>\n        <div *ngIf=\"typeclient=='M'\" style=\"margin: 15px auto;\">\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Partfemme</mat-label>\n                <input type=\"text\" formControlName=\"partfemme\" matInput />\n                <mat-hint style=\"color: crimson\" *ngIf=\"false\">Hint</mat-hint>\n            </mat-form-field>\n        </div>\n        <div style=\"margin: 15px auto;\">\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Activité</mat-label>\n                <mat-select formControlName=\"codeActivite\" (selectionChange)=\"getSecteur()\">\n                    <mat-option *ngFor=\"let v of activities\" [value]=\"v.code\">\n                        {{ v.activite }} ({{ v.code }})\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div style=\"margin: 15px auto;\" *ngIf=\"typeclient=='M'\">\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Adresse (Entreprise)</mat-label>\n                <input type=\"text\" maxlength=\"32\" minlength=\"3\" formControlName=\"adresseentreprise\" matInput />\n                <mat-hint style=\"color: crimson\" *ngIf=\"isHintAdresse\">{{\n                    HintAdresse\n                    }}</mat-hint>\n                <mat-hint style=\"color: crimson\" *ngIf=\"isHintAdresseAR\">{{\n                    HintAdresseAR\n                    }}</mat-hint>\n            </mat-form-field>\n        </div>\n        <div style=\"margin: 15px auto;\" *ngIf=\"typeclient=='M'\">\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Adresse ligne 1 (Entreprise)</mat-label>\n                <input type=\"text\" maxlength=\"32\" minlength=\"3\" formControlName=\"rueentreprise\" matInput />\n            </mat-form-field>\n        </div>\n        <div style=\"margin: 15px auto;\" *ngIf=\"typeclient=='M'\">\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Adresse ligne 2 (Entreprise)</mat-label>\n                <input type=\"text\" maxlength=\"32\" minlength=\"3\" formControlName=\"quartierentreprise\" matInput />\n            </mat-form-field>\n        </div>\n\n        <div style=\"margin: 15px auto;\" *ngIf=\"typeclient=='M'\">\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Ville (Entreprise)</mat-label>\n                <mat-select formControlName=\"villeentreprise\" (selectionChange)=\"getcodeagenes()\">\n                    <mat-option *ngFor=\"let v of villes\" [value]=\"v.ville\">\n                        {{ v.ville }}\n                    </mat-option>\n                </mat-select>\n                <mat-hint type=\"text\" style=\"color: crimson\" *ngIf=\"isHintVille\">{{ HintVille }}</mat-hint>\n                <mat-hint type=\"text\" style=\"color: crimson\" *ngIf=\"isHintVilleAR\">{{ HintVilleAR }}</mat-hint>\n            </mat-form-field>\n        </div>\n\n        <div style=\"margin: 15px auto;\" *ngIf=\"typeclient=='M'\">\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Code Postal (Entreprise)</mat-label>\n                <input type=\"text\" maxlength=\"5\" minlength=\"5\" formControlName=\"codepostaleentreprise\" matInput />\n                <mat-hint style=\"color: crimson\" *ngIf=\"false\">Hint</mat-hint>\n            </mat-form-field>\n        </div>\n\n        <div style=\"margin: 15px auto;\" *ngIf=\"typeclient=='M'\">\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Niveau Formalisme</mat-label>\n                <mat-select formControlName=\"niveauformalisme\">\n                    <mat-option *ngFor=\"let niveau of niveaux\" [value]=\"niveau.code\">\n                        {{niveau.titre}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div style=\"margin: 15px auto;\" *ngIf=\"typeclient=='M'\">\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Forme Juridique</mat-label>\n                <mat-select formControlName=\"formejuridique\">\n                    <mat-option *ngFor=\"let formejuridique of formejuridiques\" [value]=\"formejuridique.code\">\n                        {{formejuridique.titre}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <!--  *********************Champs pour RIFSO ************* -->\n        <!-- ************************************************************************ -->\n        <!-- <div style=\"margin: 15px auto;\" *ngIf=\"typeclient=='M'\">\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Code Activité</mat-label>\n                <input type=\"text\" maxlength=\"2\" minlength=\"2\" formControlName=\"codeActivite\" matInput />\n                <mat-hint style=\"color: crimson\" *ngIf=\"false\">Hint</mat-hint>\n            </mat-form-field>\n        </div>\n        <div style=\"margin: 15px auto;\" *ngIf=\"typeclient=='M'\">\n            <mat-form-field appearance=\"fill\">\n                <mat-label>type Local</mat-label>\n                <input type=\"text\" maxlength=\"1\" minlength=\"1\" formControlName=\"typeLocal\" matInput />\n                <mat-hint style=\"color: crimson\" *ngIf=\"false\">Hint</mat-hint>\n            </mat-form-field>\n        </div>\n        <div style=\"margin: 15px auto;\" *ngIf=\"typeclient=='M'\">\n            <mat-form-field appearance=\"fill\">\n                <mat-label>effectif</mat-label>\n                <input type=\"text\" formControlName=\"effectif\" matInput />\n                <mat-hint style=\"color: crimson\" *ngIf=\"false\">Hint</mat-hint>\n            </mat-form-field>\n        </div>\n        <div style=\"margin: 15px auto;\" *ngIf=\"typeclient=='M'\">\n            <mat-form-field appearance=\"fill\">\n                <mat-label>dateFinPrlvmt</mat-label>\n                <input type=\"text\" formControlName=\"dateFinPrlvmt\" matInput />\n                <mat-hint style=\"color: crimson\" *ngIf=\"false\">Hint</mat-hint>\n            </mat-form-field>\n        </div>\n        <div style=\"margin: 15px auto;\" *ngIf=\"typeclient=='M'\">\n            <mat-form-field appearance=\"fill\">\n                <mat-label>DateRealisation</mat-label>\n                <input type=\"text\" formControlName=\"DateRealisation\" matInput />\n                <mat-hint style=\"color: crimson\" *ngIf=\"false\">Hint</mat-hint>\n            </mat-form-field>\n        </div>\n\n        <div style=\"margin: 15px auto;\" *ngIf=\"typeclient=='M'\">\n            <mat-form-field appearance=\"fill\">\n                <mat-label>numeroContract</mat-label>\n                <input type=\"text\" formControlName=\"numeroContract\" matInput />\n                <mat-hint style=\"color: crimson\" *ngIf=\"false\">Hint</mat-hint>\n            </mat-form-field>\n        </div> -->\n        <!-- ************************************************************************ -->\n\n        <div style=\"margin: 15px auto;\">\n            <mat-checkbox formControlName=\"sendMe\">Notification Agence!</mat-checkbox>\n        </div>\n        <div class=\"buttons\">\n        </div>\n    </form>\n</div>\n<div mat-dialog-actions>\n    <button (click)=\"sendToEvolan()\" mat-raised-button color=\"primary\">\n        <mat-icon style=\"position: relative;margin-left: 10px; bottom: 10px; right: 20px;\" matPrefix><img\n                src=\"../../../assets/valider.png\" alt=\"account icon\"></mat-icon>\n        Valider\n    </button>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport 'hammerjs';  \nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './pages/login/login.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatListModule } from '@angular/material/list';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { HomeComponent } from './pages/home/home.component';\nimport { MainNavComponent } from './components/main-nav/main-nav.component';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule,HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { TokenInterceptorService } from './services/token-interceptor.service';\nimport {MatNativeDateModule} from '@angular/material/core';\nimport { RegisterComponent } from './pages/register/register.component';\nimport { PersonneMoraleGestionnaireComponent } from './components/personne-morale-gestionnaire/personne-morale-gestionnaire.component';\nimport { PersonneDetailsComponent } from './components/personne-details/personne-details.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport {SafeHtmlPipe} from './santi.pipe';\nimport { AgentsPageComponent } from './components/agents-page/agents-page.component';\nimport { MatTableExporterModule } from 'mat-table-exporter';\nimport { AgenceReorientationComponent } from './components/agence-reorientation/agence-reorientation.component';\nimport { ChangePasswordComponent } from './components/change-password/change-password.component';\nimport { ForgotPasswordComponent } from './components/forgot-password/forgot-password.component';\nimport { NewDemandeComponent } from './components/new-demande/new-demande.component';\nimport { SimulatorComponent } from './pages/simulator/simulator.component';\n\nconst MaterialAngularModules = [\n  MatRadioModule,\n  MatChipsModule,\n  MatExpansionModule,\n  MatStepperModule,\n  MatCardModule,\n  MatGridListModule,\n  MatAutocompleteModule,\n  MatCheckboxModule,\n  MatButtonModule,\n  MatInputModule,\n  MatDatepickerModule,\n  MatFormFieldModule,\n  MatSelectModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatMenuModule,\n  MatSidenavModule,\n  MatToolbarModule,\n  MatListModule,\n  MatTabsModule,\n  MatButtonToggleModule,\n  MatIconModule,\n  MatProgressSpinnerModule,\n  MatProgressBarModule,\n  MatDialogModule,\n  MatTooltipModule,\n  MatSnackBarModule,\n  MatTableModule,\n  MatSortModule,\n  MatPaginatorModule,\n  MatNativeDateModule\n];\n\n@NgModule({\n  declarations: [AppComponent, LoginComponent, HomeComponent, MainNavComponent , RegisterComponent , PersonneMoraleGestionnaireComponent, PersonneDetailsComponent, SafeHtmlPipe, AgentsPageComponent, AgenceReorientationComponent, ChangePasswordComponent, ForgotPasswordComponent, NewDemandeComponent, SimulatorComponent],\n  imports: [MatTableExporterModule, HttpClientModule,BrowserModule,FormsModule,ReactiveFormsModule, AppRoutingModule, BrowserAnimationsModule,  LayoutModule, MatToolbarModule, MatButtonModule, MatSidenavModule, MatIconModule, MatListModule, NgbModule, MaterialAngularModules],\n  providers: [{\n    provide:HTTP_INTERCEPTORS,\n    useClass:TokenInterceptorService,\n    multi:true\n  }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\ndeclare var window: any;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DatabaseService {\n  public url=environment.url;\n  constructor(private http: HttpClient) {\n  }\n\n  getOrganismes() {\n    return this.http.get(`${this.url}/getListOrganisme`)\n  }\n  getAgenceByOrganisme(data) {\n    return this.http.post(`${this.url}/getListAgenceByOrganisme`, data)\n  }\n  getCodePostaleByVille(data) {\n  return this.http.post(`${this.url}/getCodePostaleByVille`, data)\n  }\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { ActivatedRoute } from '@angular/router';\nimport { CallServerService } from 'src/app/services/call-server.service';\nimport { PmDataNewService } from 'src/app/services/pmDataNew.service';\nimport { AgenceReorientationComponent } from '../agence-reorientation/agence-reorientation.component';\n\n@Component({\n  selector: 'app-agents-page',\n  templateUrl: './agents-page.component.html',\n  styleUrls: ['./agents-page.component.scss']\n})\nexport class AgentsPageComponent implements OnInit {\n  codegestionnaire: string;\n  qualification: string;\n  statusTraitement = [\n    { statut: 'Injoignable' },\n    { statut: 'Non éligible' },\n    { statut: 'Réorientée' },\n    { statut: 'Hors zone' },\n    { statut: 'Plus intéressé' },\n    { statut: 'Intéressé plustard' },\n    { statut: 'Client non venu au RDV' },\n    { statut: 'RDV confirmé' },\n    { statut: 'Dossier en cours' },\n    { statut: 'Prêt débloqué' },\n    { statut: 'Prêt soldé' },\n    { statut: 'Contrat annulé' },\n    { statut: 'Contrat consolidé' }\n  ];\n  @ViewChild(MatSort) sort!: MatSort;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  displayedColumns: any[];\n  getDisplayedColumns(): string[] {\n    return this.displayedColumns.filter(cd => !cd.hide).map(cd => cd.def);\n  }\n  dataSource: MatTableDataSource<any>;\n  display: string = 'none';\n  pageSizeOptions = [5, 10, 15];\n  codeagence: any;\n  isHint = false;\n  isAllerClicked = false;\n  agences: any;\n  villes: any;\n  constructor(public dialog: MatDialog, private activatedRoute: ActivatedRoute, private callService: CallServerService, private newOrdersService: PmDataNewService, private activeroute: ActivatedRoute, private snackBar: MatSnackBar,) {\n    this.callService.testConnection().subscribe((res) => {\n    })\n \n    this.activeroute.params.subscribe((res) => {\n      this.codeagence = res.codeagence\n    })\n\n\n  }\n\n  ngOnInit(): void {\n  }\n  openReorientedModal(personne) {\n    if (personne.qualification === \"Réorientée\") {\n      const dialogRef = this.dialog.open(AgenceReorientationComponent, {\n        disableClose: true,\n        data: {\n          villes: this.villes,\n          personne,\n          rdv: false\n        },\n\n      });\n      dialogRef.afterClosed().subscribe((e) => {\n        if (e) {\n          personne.ville = e.ville;\n          personne.agence = e.agence.agence;\n          personne.codeagence = e.agence.codeagence;\n          let rdv = new Date(e.daterendezvous).toLocaleDateString('en-GB')\n\n          personne.daterendezvous = rdv;\n        }\n      })\n    }\n    if (personne.qualification === \"RDV confirmé\") {\n      const dialogRef = this.dialog.open(AgenceReorientationComponent, {\n        disableClose: true,\n        data: {\n          villes: this.villes,\n          personne,\n          rdv: true\n        },\n\n      });\n      dialogRef.afterClosed().subscribe((e) => {\n        if (e) {\n          let rdv = new Date(e.daterendezvous).toLocaleDateString('en-GB')\n\n          personne.daterendezvous = rdv;\n          // personne.agence = e.agence.agence;\n          // personne.codeagence = e.agence.codeagence;\n        }\n      })\n    }\n  }\n\n  getcodeagenes(ville) {\n    this.callService.getAgences({ ville: ville }).subscribe((res: any) => {\n      this.agences = res.results;\n    })\n  }\n  enterKeyPressed(event) {\n\n    if (event.keyCode === 13) {\n      this.getDemandesPrequalifQualif();\n    }\n  }\n  getDemandesPrequalifQualif() {\n    this.isAllerClicked = true\n    if (!this.codegestionnaire) {\n      this.isHint = true\n      this.isAllerClicked = false\n      return;\n    }\n    else {\n      let data = {\n        codegestionnaire: this.codegestionnaire,\n        codeagence: this.codeagence\n      }\n      this.newOrdersService.getDemandesPrequalifQualif(data).subscribe(\n        (res: any) => {\n          let personnes = res.results;\n          this.villes = res.villes;\n          this.agences = res.agences;\n          personnes.forEach((p) => {\n            if (!p.resultatTraitement) {\n              p.resultatTraitement = 'nouvelle';\n            }\n          });\n          this.displayedColumns = [\n            'nom',\n            'prenom',\n            'cin',\n            'telgsm',\n            // 'ville',\n            // 'agence',\n            'codeagence',\n            // 'agence_reorientation',\n            'entry_date',\n            'secteur',\n            'montantdemande',\n            'nbrappel',\n            'resultatTraitement',\n            'qualification',\n            'statuttraitement',\n            'montantdebloque',\n            'options',\n          ];\n          setTimeout(() => {\n            this.dataSource = new MatTableDataSource(personnes);\n            this.display = 'initial';\n            this.dataSource.sort = this.sort;\n            this.dataSource.paginator = this.paginator;\n          }, 1995);\n        },\n        (err) => {\n          this.dataSource = null\n          this.isAllerClicked = false\n          if (err.status === 500) {\n            let snackBarRef = this.snackBar.open('une erreur est survenue, veuillez réessayer plustard', 'OK', { duration: 15000, horizontalPosition: 'center', verticalPosition: 'top' });\n            snackBarRef.onAction().subscribe(() => {\n              snackBarRef.dismiss()\n            })\n          } else if (err.status === 402) {\n            let snackBarRef = this.snackBar.open('veuillez saisir une Matricule valide', 'OK', { duration: 15000, horizontalPosition: 'center', verticalPosition: 'top' });\n            snackBarRef.onAction().subscribe(() => {\n              snackBarRef.dismiss()\n            })\n          }\n        }\n      );\n    }\n  }\n\n  validate(element) {\n    if (!element.qualification || !this.codegestionnaire) {\n      let snackBarRef = this.snackBar.open(\n        'Veuillez remplir les champs obligatoires',\n        'OK',\n        {\n          duration: 15000,\n          horizontalPosition: 'center',\n          verticalPosition: 'top',\n        }\n      );\n      snackBarRef.onAction().subscribe(() => {\n        snackBarRef.dismiss();\n      });\n    } else {\n      element.codegestionnairecible = this.codegestionnaire\n\n      this.newOrdersService.setDemandesPrequalifQualif(element).subscribe((res) => {\n        this.dataSource = null\n        this.isAllerClicked = false\n        this.getDemandesPrequalifQualif()\n        let snackBarRef = this.snackBar.open(\n          'mise à jour avec succès',\n          'OK',\n          {\n            duration: 15000,\n            horizontalPosition: 'center',\n            verticalPosition: 'top',\n            panelClass: 'successClassSnack'\n          }\n        );\n        snackBarRef.onAction().subscribe(() => {\n          snackBarRef.dismiss();\n        });\n\n      }, (err) => {\n\n        let snackBarRef = this.snackBar.open(\n          'une erreur est survenue, veuillez réessayer plustard',\n          'OK',\n          {\n            duration: 15000,\n            horizontalPosition: 'center',\n            verticalPosition: 'top',\n          }\n        );\n        snackBarRef.onAction().subscribe(() => {\n          snackBarRef.dismiss();\n        });\n      })\n    }\n  }\n\n}\n","<div class=\"containerAgent\">\n\n  <div class=\"fields\">\n    <p style=\"text-align: center;font-size: 1.2rem;\">Pour accéder à l’état des demandes, veuillez saisir votre matricule et cliquer sur le button \"Aller\" :</p>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Matricule Gestionnaire</mat-label>\n      <input\n      (keypress)=\"enterKeyPressed($event)\"\n      [(ngModel)]=\"codegestionnaire\"\n        type=\"text\"\n        matInput\n      />\n      <mat-hint style=\"color: crimson\" *ngIf=\"isHint\">{{codegestionnaire && isHint?'veuillez insérer votre code gestionnaire':''}}</mat-hint>\n    </mat-form-field>\n\n\n    <div style=\"position: relative;\n    top: -52px;\n    left: 204px;\">\n      <button style=\"height: 50px;\"  (click)=\"getDemandesPrequalifQualif()\" mat-flat-button>Aller</button>\n    </div>\n  </div>\n  <mat-spinner style=\"margin: 20px auto\" *ngIf=\"!dataSource && isAllerClicked\"></mat-spinner>\n  <div *ngIf=\"dataSource\" style=\"margin: 10px;\">\n    <table\n    mat-table\n    [dataSource]=\"dataSource\"\n    matTableExporter\n    #exporter=\"matTableExporter\"\n    class=\"mat-elevation-z8\"\n    matSort\n  >\n    <ng-container matColumnDef=\"valeurid\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>ID</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.valeurid }}</td>\n    </ng-container>\n    <ng-container matColumnDef=\"nom\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Nom</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.nom }}</td>\n    </ng-container>\n  \n    <ng-container matColumnDef=\"prenom\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Prenom</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.prenom }}</td>\n    </ng-container>\n    <ng-container matColumnDef=\"cin\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>CIN</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.cin }}</td>\n    </ng-container>\n    <ng-container matColumnDef=\"telgsm\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Tel</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.telgsm }}</td>\n    </ng-container>\n    <ng-container matColumnDef=\"email\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Email</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.email }}</td>\n    </ng-container>\n    <ng-container matColumnDef=\"codeagence\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Code<br>PDV</th>\n      <td mat-cell *matCellDef=\"let element\">\n        {{ element.agence }} ({{element.codeagence }})\n      </td>\n    </ng-container>\n    <!-- <ng-container matColumnDef=\"agence_reorientation\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>PDV<br>reorienté</th>\n      <td mat-cell *matCellDef=\"let element\">\n        {{ agence.agence_reorientation }}\n    </ng-container> -->\n    <ng-container matColumnDef=\"entry_date\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Date</th>\n      <td mat-cell *matCellDef=\"let element\">\n        {{ element.entry_date | date: \"dd/MM/yyyy\" }}\n      </td>\n    </ng-container>\n    <ng-container matColumnDef=\"secteur\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Secteur</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.secteur }}</td>\n    </ng-container>\n    <ng-container matColumnDef=\"montantdemande\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Montant</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.montantdemande }}</td>\n    </ng-container>\n    <ng-container matColumnDef=\"nbrappel\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Nbr<br>Appel</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.nbrappel }}</td>\n    </ng-container>\n    <ng-container matColumnDef=\"resultatTraitement\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Pré<br>qualif</th>\n      <td mat-cell *matCellDef=\"let element\">\n        {{\n          element.resultatTraitement === \"nouvelle\"\n            ? \"\"\n            : element.resultatTraitement\n        }}\n      </td>\n    </ng-container>\n    <ng-container matColumnDef=\"qualification\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Qualification</th>\n      <td mat-cell *matCellDef=\"let element\">\n          <mat-form-field class=\"minWidth\" appearance=\"standard\">\n              <mat-select [(ngModel)]=\"element.qualification\"   (selectionChange)=\"openReorientedModal(element)\">\n                <mat-option\n                  *ngFor=\"let status of statusTraitement\"\n                  [value]=\"status.statut\"\n                >\n                  {{ status.statut }}\n                </mat-option>\n              </mat-select>\n              <mat-hint style=\"color: crimson\" *ngIf=\"isHintStatutTraitement\">{{\n                HintStatutTraitement\n              }}</mat-hint>\n            </mat-form-field>\n      </td>\n    </ng-container>\n    <ng-container matColumnDef=\"ville\" >\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Ville</th>\n      <td mat-cell *matCellDef=\"let element\">\n        <mat-form-field class=\"minWidth\" appearance=\"standard\">\n          <mat-select [disabled]=\"element.qualification !== 'Réorientée'\"   [(ngModel)]=\"element.ville\" (selectionChange)=\"getcodeagenes(element.ville)\">\n            <mat-option *ngFor=\"let v of villes\" [value]=\"v.ville\">\n              {{ v.ville }}\n            </mat-option>\n          </mat-select>\n          <mat-hint\n            type=\"text\"\n            style=\"color: crimson\"\n            *ngIf=\"isHintVille\"\n            >{{ HintVille }}</mat-hint\n          >\n          <mat-hint\n          type=\"text\"\n          style=\"color: crimson\"\n          *ngIf=\"isHintVilleAR\"\n          >{{ HintVilleAR }}</mat-hint\n        >\n        </mat-form-field>\n      </td>\n    </ng-container>\n    <ng-container matColumnDef=\"agence\" >\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Agence</th>\n      <td mat-cell *matCellDef=\"let element\">\n        <mat-form-field class=\"minWidth\" appearance=\"standard\">\n          <mat-select  [disabled]=\"element.qualification !== 'Réorientée'\" [(ngModel)]=\"element.codeagence\">\n            <mat-option\n              *ngFor=\"let agence of agences\"\n              [value]=\"agence.codeagence\"\n            >\n              {{ agence.agence }}\n            </mat-option>\n          </mat-select>\n          <mat-hint style=\"color: crimson\" *ngIf=\"isHintStatutTraitement\">{{\n            HintStatutTraitement\n          }}</mat-hint>\n        </mat-form-field>\n      </td>\n    </ng-container>\n    <ng-container matColumnDef=\"statuttraitement\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Statut<br>Dem</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.statuttraitement }}</td>\n    </ng-container>\n    <ng-container matColumnDef=\"montantdebloque\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Montant<br>Deb</th>\n      <td mat-cell *matCellDef=\"let element\"></td>\n    </ng-container>\n  \n    <!-- <ng-container matColumnDef=\"projet\">\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header>Projet</th>\n                                <td mat-cell *matCellDef=\"let element\">{{ element.projet }}</td>\n                            </ng-container> -->\n  \n    <!-- <ng-container matColumnDef=\"id_od\">\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header>Id OD</th>\n                                <td mat-cell *matCellDef=\"let element\">{{ element.id_od }}</td>\n                            </ng-container> -->\n    <ng-container matColumnDef=\"options\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header></th>\n      <td mat-cell *matCellDef=\"let element\">\n        <!-- <button (click)=\"openDialog(element.valeurid)\" class=\"btn\" mat-raised-button color=\"warn\">\n                                        Set Agence \n                                    </button>\n                                    <button (click)=\"openDialogSecond(element.valeurid)\" class=\"btn\" mat-raised-button color=\"warn\">\n                                        Set Agent\n                                    </button>\n                                    <button (click)=\"getStatut(element.numtiers, element.codegestionnaire)\" class=\"btn\" mat-raised-button color=\"warn\">\n                                        Get Statut\n                                    </button>\n                                    <button (click)=\"sendToEvolan(element)\" class=\"btn\" mat-raised-button color=\"warn\">\n                                        Send To Evolan\n                                    </button> -->\n        <button\n        (click)=\"validate(element)\"\n          class=\"btn\"\n          mat-raised-button\n          color=\"warn\"\n        >\n          valider\n        </button>\n      </td>\n    </ng-container>\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n  </table>\n  </div>\n  <mat-paginator\n    class=\"{{ display }}\"\n    [pageSizeOptions]=\"pageSizeOptions\"\n    showFirstLastButtons\n  ></mat-paginator>\n  \n</div>","<mat-sidenav-container class=\"sidenav-container\">\n    <mat-sidenav #drawer class=\"sidenav\" fixedInViewport [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\n        [mode]=\"(isHandset$ | async) ? 'over' : 'side'\">\n        <mat-toolbar>\n            <button type=\"button\" aria-label=\"Toggle sidenav\" mat-icon-button (click)=\"drawer.toggle()\"\n                *ngIf=\"isHandset$ | async\">\n                <mat-icon aria-label=\"Side nav toggle icon\">close</mat-icon>\n            </button>\n            <span style=\"color: darkblue\">Menu</span>\n\n        </mat-toolbar>\n        <mat-nav-list>\n            <a *ngIf=\"isBO\" (click)=\"drawer.toggle()\" mat-list-item [routerLink]=\"['/register']\">\n                <mat-icon>person</mat-icon> Register</a>\n        </mat-nav-list>\n        <!-- <mat-nav-list>\n            <a *ngIf=\"isCLIENT\" (click)=\"drawer.toggle()\" mat-list-item [routerLink]=\"['pp']\">\n                <mat-icon>person</mat-icon> Personne Physique</a>\n            <a *ngIf=\"isCLIENT\" (click)=\"drawer.toggle()\" mat-list-item [routerLink]=\"['pm']\">\n                <mat-icon>domain</mat-icon> Personne Morale</a>\n            <a *ngIf=\"isBO\" (click)=\"drawer.toggle()\" mat-list-item [routerLink]=\"['ppg']\">\n                <mat-icon>person</mat-icon> Personne Physique</a>\n            <a *ngIf=\"isBO\" (click)=\"drawer.toggle()\" mat-list-item [routerLink]=\"['pmg']\">\n                <mat-icon>person</mat-icon> Personne Morale</a>\n        </mat-nav-list> -->\n    </mat-sidenav>\n    <mat-sidenav-content class=\"sidenav-content\">\n        <mat-toolbar color=\"warn\">\n            <button type=\"button\" aria-label=\"Toggle sidenav\" mat-icon-button (click)=\"drawer.toggle()\"\n                *ngIf=\"isHandset$ | async\">\n                <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\n            </button>\n            <button *ngIf=\"isHome\" class=\"goback\" (click)=\"back()\">\n                <mat-icon style=\"position: relative;\n                bottom: 10px;\n                right: 20px;\" matPrefix><img src=\"../../../assets/back.png\" alt=\"account icon\"></mat-icon>\n            </button>\n            <span class=\"slag\">Plateforme de pré-qualification</span>\n            <span class=\"user\"> ( {{user}} est connecté! )</span>\n            <span class=\"spacer\"></span>\n            <!-- <a *ngIf=\"isCLIENT\" [routerLink]=\"['pp']\" [ngClass]=\"{ hidden: isHandset$ | async }\" class=\"mat-button mat-button-base\" aria-disabled=\"false\"><span class=\"mat-button-wrapper\">Personne Physique</span\n        ><span class=\"mat-button-focus-overlay\"></span\n      ></a>\n            <a *ngIf=\"isCLIENT\" [routerLink]=\"['pm']\" [ngClass]=\"{ hidden: isHandset$ | async }\" class=\"mat-button mat-button-base\" aria-disabled=\"false\"><span class=\"mat-button-wrapper\">Personne Morale</span\n        ><span class=\"mat-button-focus-overlay\"></span\n      ></a>\n            <a *ngIf=\"isBO\" [routerLink]=\"['ppg']\" [ngClass]=\"{ hidden: isHandset$ | async }\" class=\"mat-button mat-button-base\" aria-disabled=\"false\"><span class=\"mat-button-wrapper\">Personne Physique</span\n        ><span class=\"mat-button-focus-overlay\"></span\n      ></a> -->\n            <a  (click)=\"simulate()\" [ngClass]=\"{ hidden: isHandset$ | async }\" class=\"mat-button mat-button-base\" aria-disabled=\"false\"><span class=\"mat-button-wrapper\">Simulation</span><span class=\"mat-button-focus-overlay\"></span></a>\n            <a (click)=\"setLoan()\" [ngClass]=\"{ hidden: isHandset$ | async }\" class=\"mat-button mat-button-base\" aria-disabled=\"false\"><span class=\"mat-button-wrapper\">Ajouter une demande</span><span class=\"mat-button-focus-overlay\"></span></a>\n            <a *ngIf=\"isBO\" [routerLink]=\"['/register']\" [ngClass]=\"{ hidden: isHandset$ | async }\" class=\"mat-button mat-button-base\" aria-disabled=\"false\"><span class=\"mat-button-wrapper\">Ajouter un utilisateur</span><span class=\"mat-button-focus-overlay\"></span></a>\n            <button (click)=\"logout()\" mat-icon-button>\n                <mat-icon style=\"position: relative;\n                bottom: 10px;\n                right: 20px;\" matPrefix><img src=\"../../../assets/exit.png\" alt=\"account icon\"></mat-icon>\n            </button>\n        </mat-toolbar>\n        <ng-content></ng-content>\n    </mat-sidenav-content>\n</mat-sidenav-container>","import { Component } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable, Subject } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { EventServiceService } from 'src/app/services/event-service.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { SimulatorComponent } from 'src/app/pages/simulator/simulator.component';\n\n@Component({\n  selector: 'app-main-nav',\n  templateUrl: './main-nav.component.html',\n  styleUrls: ['./main-nav.component.scss'],\n})\nexport class MainNavComponent {\n  isHandset$ = false;\n  role: string;\n  isBO: boolean;\n  isAGENT: boolean;\n  isCLIENT: boolean;\n  isHome: boolean = true;\n  user: string;\n  constructor(\n    private breakpointObserver: BreakpointObserver,\n    private route: Router,\n    private location: Location,\n    private activeRoute: ActivatedRoute,\n    private sharedService:EventServiceService,\n    public dialog: MatDialog,\n  ) {\n    this.isHome = this.route.url !== '/home';\n    this.role = localStorage.getItem('role');\n    this.user = localStorage.getItem('user');\n    this.isBO = this.role === 'BO';\n    this.isAGENT = this.role === 'AGENT';\n    this.isCLIENT = this.role === 'CLIENT';\n    \n  }\n  setLoan() {\n    this.sharedService.sendClickEvent();\n  } \n  simulate(){\n    const dialogRef = this.dialog.open(SimulatorComponent, {\n      width: \"60vw\",\n      height:\"fit-content\",\n      disableClose: true,\n    });\n  }\n\n  back(): void {\n    if (this.route.url.startsWith('/home/details')) {\n      this.activeRoute.queryParams.subscribe((res) => {\n\n        this.route.routeReuseStrategy.shouldReuseRoute = () => false;\n        this.route\n          .navigate(['home/pmg'], {\n            queryParams: { source: res.source, pageIndex: res.pageIndex },\n          })\n          .then(() => (this.route.onSameUrlNavigation = 'reload'));\n      });\n    }\n    if (this.route.url.startsWith('/home/pmg')) {\n      this.route.routeReuseStrategy.shouldReuseRoute = () => false;\n      this.route\n        .navigate(['home'])\n        .then(() => (this.route.onSameUrlNavigation = 'reload'));\n    }\n  }\n  async logout() {\n    await localStorage.clear();\n    setTimeout(() => {\n      this.route.navigate(['login']);\n    }, 1000);\n  }\n\n\n\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CallServerService {\n  public url=environment.url;\n  // public url_opendata=environment.url_opendata;\n  constructor(private http:HttpClient) { }\n  setAgence(data){\n    return this.http.post(`${this.url}/setAgence`,data)\n  }\n  getHistory(data){\n    return this.http.post(`${this.url}/getHistory`,data)\n  }\n  changePassword(data){\n    return this.http.post(`${this.url}/changePassword`,data)\n  }\n  forgotPassword(data){\n    return this.http.post(`${this.url}/forgotPassword`,data)\n  }\n  setAgenceEtAgent(data){\n    return this.http.post(`${this.url}/setAgenceEtAgent`,data)\n  }\n  \n  // getStatus(data){\n  //   return this.http.post(`http://192.168.150.40:3737/users/getStatut`,data)\n  // }\n  register(data){\n    return this.http.post(`${this.url}/register`,data)\n  }\n  \n  getStatsQualif(){\n    return this.http.get(`${this.url}/statsQualif`)\n  }\n  getStatsPreQualif(){\n    return this.http.get(`${this.url}/statsPreQualif`)\n  }\n\n\n  getDataStatsQualif(data){\n\n    if (data.origine === 'AW') return this.http.post(`${this.url}/dataStatsQualif`, data, {responseType:\"blob\"})\n    return this.http.post(`${this.url}/dataStatsQualif`, data)\n    \n  }\n  getDataStatsPreQualif(data){\n    \n    if (data.origine === 'AW') return this.http.post(`${this.url}/dataStatsPreQualif`, data, {responseType:\"blob\"})\n    return this.http.post(`${this.url}/dataStatsPreQualif`, data)\n  }\n  getDataStatsEvolan(data){\n    if (data.origine === 'AW') return this.http.post(`${this.url}/dataStatsEvolan`, data, {responseType:\"blob\"})\n    return this.http.post(`${this.url}/dataStatsEvolan`, data)\n  }\n  getDataStatsNouvelle(data){\n    return this.http.post(`${this.url}/dataStatsNouvelle`, data)\n  }\n\n\n  // nouvelle_demande(data){\n  //   if (data.typeclient === \"M\") {\n  //     return this.http.post(`${this.url_opendata}/ajouterPersonneMorale`,data)\n\n  //   } else {\n  //     return this.http.post(`${this.url_opendata}/ajouterPersonnePhysique`,data)\n  //   }\n\n  // }\n  sendToEvolan(data){\n    if (data.typeclient === \"M\") {\n      return this.http.post(`${this.url}/ajouterPersonneMoraleRS`,data)\n\n    } else {\n      return this.http.post(`${this.url}/ajouterPersonnePhysiqueRS`,data)\n    }\n  }\n\n\n  updatePersonne(data){\n    return this.http.post(`${this.url}/updatePersonne`,data)\n  }\n  setResutlatTraitement(data){\n    return this.http.post(`${this.url}/setResultatTraitement`, data)\n  }\n  getAgences(data){\n    return this.http.post(`${this.url}/getAgencesRS`, data)\n  }\n  getAgencesExecpt(data){\n    return this.http.post(`${this.url}/getAgencesExcept`, data)\n  }\n  getActivities(){\n    return this.http.get(`${this.url}/getActivities`)\n  }\n  checkExistants(data){\n    return this.http.post(`${this.url}/checkExistants`, data)\n  }\n  updateResultatTraitement(data){\n    return this.http.post(`${this.url}/updateResultatTraitement`, data)\n  }\n  getAnomalies(valeurid){\n    return this.http.post(`${this.url}/getAnomalies`, {valeurid})\n  }\n\n\n  lock(data){\n    return this.http.post(`${this.url}/verouiller`,data)\n  }\n  unlock(data){\n    return this.http.post(`${this.url}/deverouiller`,data)\n  }\n  // verify(data){\n  //   return this.http.post(`${this.url}/verify`,data)\n  // }\n  uploadFile(data){\n    let headers = new HttpHeaders()\n    headers.set(`Accept`,`application/json`);\n    headers.delete(`Content-Type`);\n    return this.http.post(\"/uploaddata\",data, {headers})\n  }\n  getVille(){\n    return this.http.get(`${this.url}/getListVilles`)\n  }\n  notifydrds(){\n    return this.http.get(`${this.url}/notifydrds`)\n  }\n  rappelerdsdr(){\n    return this.http.get(`${this.url}/rappelerdsdr`)\n  }\n  testConnection(){\n    return this.http.get(`${this.url}/testConnection`)\n  }\n\n  notifyDPRM(){\n    \n    return this.http.get(`${this.url}/notifyDPRM`)\n  }\n  MAJdemandeSorts(){\n    // return this.http.get(`${this.url}/MAJdemandeSorts`)\n    return this.http.get(`${this.url}/MAJdemandeSorts2`)\n  }\n  getCodeAgence(data){\n    return this.http.post(`${this.url}/getCodeAgence`, data)\n  }\n  getCodePostalParVille(data){\n    return this.http.post(`${this.url}/getCodePostalParVille`, data)\n  }\n  // getLogs(data){\n  //   return this.http.post(`${this.url}/getLogs`,data)\n  // }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { CallServerService } from 'src/app/services/call-server.service';\nimport { DatabaseService } from 'src/app/services/database.service';\ndeclare var window:any;\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss'],\n})\nexport class RegisterComponent implements OnInit {\n  hide = true;\n  data: FormGroup;\n  organismes: any[]=[];\n  agences: any[]=[];\n  constructor(\n    private fb: FormBuilder,\n    private databaseService: DatabaseService,\n    private callServer:CallServerService,\n    private snackBar : MatSnackBar\n  ) {\n\n  }\n\n  ngOnInit(): void {\n    this.data = this.fb.group(\n      {\n        codeorganisme: ['', Validators.required],\n        codeagence: ['', Validators.required],\n        name: ['',Validators.required],\n        email: ['', Validators.required],\n        gsm: ['', Validators.required],\n        password: ['', Validators.required],\n        repassword: ['', Validators.required],\n      },\n      { validators: this.checkPasswords }\n    );\n  }\n  ngAfterViewInit(){\n    this.databaseService.getOrganismes().subscribe((res:any)=>{\n      this.organismes = res\n    }, err=>{console.log(err)})\n  }\n  checkPasswords(group: FormGroup) {\n    // here we have the 'passwords' group\n    const password = group.get('password').value;\n    const repassword = group.get('repassword').value;\n    return password === repassword ? null : { notSame: true };\n  }\n\n  onSubmit() {\n    this.callServer.register(this.data.value).subscribe((res)=>{\n      let snackBarRef = this.snackBar.open('Utilisateur enregistré en attente de validation!', 'OK', {duration:15000, horizontalPosition:'center', verticalPosition:'top', panelClass:\"successClassSnack\"});\n      snackBarRef.onAction().subscribe(()=>{\n        snackBarRef.dismiss()\n      })\n      this.data.reset()\n    }, err =>{\n      if (err.status ===500){\n        let snackBarRef = this.snackBar.open(\"Une Erreur s'est produite, veuillez réessayer plus tard!\", 'OK', {duration:15000, horizontalPosition:'center', verticalPosition:'top', panelClass:\"failureClassSnack\"});\n        snackBarRef.onAction().subscribe(()=>{\n          snackBarRef.dismiss()\n        })\n      } else{\n        let snackBarRef = this.snackBar.open(err.error.msg, 'OK', {duration:15000, horizontalPosition:'center', verticalPosition:'top', panelClass:\"failureClassSnack\"});\n        snackBarRef.onAction().subscribe(()=>{\n          snackBarRef.dismiss()\n        })\n      }\n    })\n  }\n\n  changed() {\n    this.agences = []\n    let organisme = this.data.get('codeorganisme').value\n    this.databaseService.getAgenceByOrganisme({organisme}).subscribe((res:any)=>{\n      this.agences = res\n    }, (err)=>{console.log(err)})\n  }\n}\n","<div class=\"on_top_of_body\">\n  <div class=\"form_container\">\n    <div class=\"title\">\n      <h1>Ajouter un nouvel utilisateur</h1>\n    </div>\n    <form [formGroup]=\"data\" (ngSubmit)=\"onSubmit()\">\n      <div class=\"fields-container fields-container-of-three margin\">\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Organisme</mat-label>\n          <mat-select formControlName=\"codeorganisme\" (selectionChange)=\"changed()\">\n            <mat-option *ngFor=\"let organisme of organismes\" [value]=\"organisme.codeorganisme\">\n              {{ organisme.organisme }}\n            </mat-option>\n          </mat-select>\n          <mat-hint *ngIf=\"data.controls.codeorganisme.hasError('required')\">organisme est obligatoire</mat-hint>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Agence</mat-label>\n          <mat-select formControlName=\"codeagence\">\n            <mat-option *ngFor=\"let agence of agences\" [value]=\"agence.codeagence\">\n              {{ agence.agence}}\n            </mat-option>\n          </mat-select>\n          <mat-hint *ngIf=\"data.controls.codeagence.hasError('required')\">agence est obligatoire</mat-hint>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Nom</mat-label>\n          <input formControlName=\"name\" matInput placeholder=\"Nom\" />\n          <mat-hint *ngIf=\"data.controls.name.hasError('required')\">Nom est obligatoire</mat-hint>\n        </mat-form-field>\n      </div>\n      <div class=\"margin\">\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Email</mat-label>\n          <input formControlName=\"email\" matInput placeholder=\"Email\" />\n          <mat-hint *ngIf=\"data.controls.email.hasError('required')\">email est obligatoire</mat-hint>\n        </mat-form-field>\n      </div>\n      <div class=\"margin\">\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Tel GSM</mat-label>\n          <input formControlName=\"gsm\" matInput placeholder=\"gsm\" />\n          <mat-hint *ngIf=\"data.controls.gsm.hasError('required')\">tel gsm est obligatoire</mat-hint>\n        </mat-form-field>\n      </div>\n      <div class=\"margin\">\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Password</mat-label>\n          <input\n            formControlName=\"password\"\n            matInput\n            [type]=\"hide ? 'password' : 'text'\"\n            placeholder=\"Mot de passe\"\n          />\n          <button\n            mat-icon-button\n            matSuffix\n            (click)=\"hide = !hide\"\n            [attr.aria-label]=\"'Hide password'\"\n            [attr.aria-pressed]=\"hide\"\n          >\n          <mat-icon style=\"position: relative;\n          bottom: 7px;\" matPrefix><img *ngIf=\"!hide\" src=\"../../../assets/visible.png\" alt=\"account icon\"></mat-icon>\n                      <mat-icon style=\"position: relative;\n                      bottom: 7px;\" matPrefix><img *ngIf=\"hide\" src=\"../../../assets/invisible.png\" alt=\"account icon\"></mat-icon>\n          </button>\n          <mat-hint *ngIf=\"data.controls.password.hasError('required')\">mot de passe est obligatoire</mat-hint>\n        </mat-form-field>\n      </div>\n      <div class=\"margin\">\n        <mat-form-field class=\"passwordConfirmation\" appearance=\"fill\">\n          <mat-label>Confirmation</mat-label>\n          <input\n            formControlName=\"repassword\"\n            matInput\n            [type]=\"hide ? 'password' : 'text'\"\n            placeholder=\"confirmer le mot de passe\"\n          />\n          <mat-hint *ngIf=\"data.hasError('notSame')\">\n            Passwords do not match\n          </mat-hint>\n          <button\n            mat-icon-button\n            matSuffix\n            (click)=\"hide = !hide\"\n            [attr.aria-label]=\"'Hide password'\"\n            [attr.aria-pressed]=\"hide\"\n          >\n          <mat-icon style=\"position: relative;\n          bottom: 7px;\" matPrefix><img *ngIf=\"!hide\" src=\"../../../assets/visible.png\" alt=\"account icon\"></mat-icon>\n                      <mat-icon style=\"position: relative;\n                      bottom: 7px;\" matPrefix><img *ngIf=\"hide\" src=\"../../../assets/invisible.png\" alt=\"account icon\"></mat-icon>\n          </button>\n        </mat-form-field>\n      </div>\n\n      <p class=\"login\">\n        <button [disabled]=\"data.invalid\" mat-raised-button type=\"submit\">\n          <h1>Ajouter</h1>\n        </button>\n      </p>\n\n      <p class=\"connecter\"><a href=\"/login\">Se connecter</a></p>\n    </form>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree,\n  Router,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\n\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NotAuthGuard implements CanActivate {\n  constructor(private authService: AuthService, private route: Router) {}\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree>\n    | boolean\n    | UrlTree {\n    let token = this.authService.getToken();\n    const helper = new JwtHelperService();\n    const isExpired = helper.isTokenExpired(token);\n\n    if (token && !isExpired) {\n      this.route.navigate(['home'])\n      return false;\n    } else {\n      return true;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  public url=environment.url;\n  constructor(private http:HttpClient) { }\n\n  login(credentials){\n    return this.http.post(`${this.url}/login`,credentials)\n  }\n  getToken(){\n    return localStorage.getItem('token')\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { CallServerService } from 'src/app/services/call-server.service';\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.scss']\n})\nexport class ForgotPasswordComponent implements OnInit {\n  email:string;\n  emailHint: boolean;\n\n\n  constructor(private router:Router,private matDialogRef:MatDialogRef<ForgotPasswordComponent>, private callServer:CallServerService, private snackBar:MatSnackBar) { }\n\n  ngOnInit(): void {\n  }\n\n  annuler(){\n    this.matDialogRef.close()\n  }\n  validate(){\n    if (!this.email){\n      this.emailHint=true;\n      setTimeout(()=>{\n        this.emailHint=false\n      }, 3000)\n      return;\n    }\n    let data={\n      email:this.email\n    }\n    this.callServer.forgotPassword(data).subscribe((res)=>{\n      let snackBarRef = this.snackBar.open('un nouveau mot de passe a été envoyé à votre adresse email.', 'OK', {duration:15000, horizontalPosition:'center', verticalPosition:'top', panelClass:\"successClassSnack\"});\n      snackBarRef.onAction().subscribe(()=>{\n        snackBarRef.dismiss()\n      })\n      this.matDialogRef.close()\n    }, (err)=>{\n      if (err.status == 404){\n        let snackBarRef = this.snackBar.open(err.error.msg, 'OK', {duration:15000, horizontalPosition:'center', verticalPosition:'top', panelClass:\"failureClassSnack\"});\n        snackBarRef.onAction().subscribe(()=>{\n          snackBarRef.dismiss()\n        })\n      }else { \n        let snackBarRef = this.snackBar.open('Un problème est survenu, réessayez plus tard.', 'OK', {duration:15000, horizontalPosition:'center', verticalPosition:'top', panelClass:\"failureClassSnack\"});\n        snackBarRef.onAction().subscribe(()=>{\n          snackBarRef.dismiss()\n        })\n      }\n    })\n  }\n\n}\n","<div mat-dialog-content>\n    <div>\n        <h1>Changement mot de passe :</h1>\n    </div>\n    <form style=\"width:350px\">\n        <div style=\"margin: 20px auto;display: flex; flex-direction: column;gap: 10px;\">\n            <mat-form-field appearance=\"standard\">\n                <mat-label>Votre Email / Identifiant</mat-label>\n                <input matInput [(ngModel)]=\"email\" [ngModelOptions]=\"{standalone: true}\">\n                <mat-hint style=\"color: crimson\" *ngIf=\"emailHint\">email | Identifiant est obligatoire</mat-hint>\n            </mat-form-field>\n        </div>\n    </form>\n</div>\n<div mat-dialog-actions>\n    <button mat-flat-button color=\"warn\" (click)=\"annuler()\">Annuler</button>\n    <button mat-flat-button color=\"primary\" (click)=\"validate()\">Valider</button>\n</div>","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router'\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PmDataService implements Resolve<Object>{\r\n  constructor(private http:HttpClient) { }\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): any[] | Observable<Object> | Promise<any[]> {\r\n    return null\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './pages/login/login.component';\nimport { HomeComponent } from './pages/home/home.component';\nimport { RegisterComponent } from './pages/register/register.component';\nimport { PersonneMoraleGestionnaireComponent } from './components/personne-morale-gestionnaire/personne-morale-gestionnaire.component';\nimport { PersonneDetailsComponent } from './components/personne-details/personne-details.component';\nimport { PmDataService } from './services/pmData.service';\nimport { AuthGuard } from './services/auth.guard';\nimport { NotAuthGuard } from './services/not-auth.guard';\nimport { AgentsPageComponent } from './components/agents-page/agents-page.component';\nimport { NewDemandeComponent } from './components/new-demande/new-demande.component';\nimport { TokenGuard } from './services/token.guard';\nimport { SimulatorComponent } from './pages/simulator/simulator.component';\n\n\nconst role = localStorage.getItem('role');\nconst routes: Routes = [\n  {\n    path: 'login',\n    component: LoginComponent,\n    canActivate: [NotAuthGuard]\n  },\n  {\n    path: 'ajouter',\n    component: NewDemandeComponent\n  },\n  {\n    path: 'home',\n    component: HomeComponent,\n    runGuardsAndResolvers: 'always',\n    children: [\n      {\n        path: 'pmg',\n        component: PersonneMoraleGestionnaireComponent,\n        resolve: { codes: PmDataService },\n        runGuardsAndResolvers: 'always',\n        canActivate: [TokenGuard]\n\n      },\n      {\n        path: 'details',\n        component: PersonneDetailsComponent,\n        runGuardsAndResolvers: 'always',\n        canActivate: [TokenGuard]\n\n      },\n      {\n        path: '',\n        pathMatch: 'full',\n        redirectTo: 'pmg',\n      },\n    ],\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'register',\n    component: RegisterComponent,\n    canActivate: [TokenGuard]\n  },\n  {\n    path: 'simulation',\n    component: SimulatorComponent,\n    canActivate: [TokenGuard]\n  },\n  {\n    path: 'agence/:codeagence',\n    component: AgentsPageComponent\n  },\n  {\n    path: '',\n    pathMatch: 'full',\n    redirectTo: 'login',\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule { }\n","import {Pipe, PipeTransform} from '@angular/core';\r\nimport {DomSanitizer} from '@angular/platform-browser';\r\n \r\n@Pipe({\r\n  name: 'safeHtml'\r\n})\r\nexport class SafeHtmlPipe implements PipeTransform {\r\n \r\n  constructor(private sanitizer: DomSanitizer) {\r\n  }\r\n \r\n  transform(value: any, args?: any): any {\r\n    return this.sanitizer.bypassSecurityTrustHtml(value);\r\n  }\r\n \r\n}","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport 'hammerjs';\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}