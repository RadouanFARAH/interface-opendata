{"version":3,"sources":["webpack:///src/app/services/auth.guard.ts","webpack:///src/app/pages/home/home.component.ts","webpack:///src/app/pages/home/home.component.html","webpack:///src/app/services/agenceData.service.ts","webpack:///src/app/components/personne-morale-gestionnaire/personne-morale-gestionnaire.component.ts","webpack:///src/app/components/personne-morale-gestionnaire/personne-morale-gestionnaire.component.html","webpack:///src/environments/environment.ts","webpack:///src/app/components/dialog/dialog.component.ts","webpack:///src/app/components/dialog/dialog.component.html","webpack:///src/app/pages/login/login.component.ts","webpack:///src/app/pages/login/login.component.html","webpack:///src/app/components/personne-physique/personne-physique.component.ts","webpack:///src/app/components/personne-physique/personne-physique.component.html","webpack:///src/app/services/pmDataNew.service.ts","webpack:///src/app/services/token-interceptor.service.ts","webpack:///node_modules/moment/locale sync ^\\.\\/.*$","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/components/dialog-second/dialog-second.component.ts","webpack:///src/app/components/dialog-second/dialog-second.component.html","webpack:///src/app/components/personne-details/personne-details.component.ts","webpack:///src/app/components/personne-details/personne-details.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/services/database.service.ts","webpack:///src/app/components/main-nav/main-nav.component.html","webpack:///src/app/components/main-nav/main-nav.component.ts","webpack:///src/app/services/call-server.service.ts","webpack:///src/app/components/personne-physique-gestionnaire/personne-physique-gestionnaire.component.ts","webpack:///src/app/components/personne-physique-gestionnaire/personne-physique-gestionnaire.component.html","webpack:///src/app/pages/register/register.component.ts","webpack:///src/app/pages/register/register.component.html","webpack:///src/app/components/personne-morale/personne-morale.component.ts","webpack:///src/app/components/personne-morale/personne-morale.component.html","webpack:///src/app/services/not-auth.guard.ts","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/pmData.service.ts","webpack:///src/app/components/resultat-traitement/resultat-traitement.component.ts","webpack:///src/app/components/resultat-traitement/resultat-traitement.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/santi.pipe.ts","webpack:///src/app/services/ppdata.service.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["AuthGuard","authService","route","state","token","getToken","navigate","providedIn","HomeComponent","isMenuOpen","selector","templateUrl","styleUrls","AgenceDataService","http","get","PersonneMoraleGestionnaireComponent","callServer","dialog","PmDataService","activatedRoute","newOrdersService","db","source","value","viewValue","status","selectedValue","displayedColumns","focused","isAlert","statusTraitement","statutC","statut","isSourceSelected","pageSizeOptions","dataSource","sourceSelectedValue","getNouvellesDemandes","getDemandesPrequalifies","getDemandesEvolan","subscribe","res","console","log","ville","personnes","results","sort","paginator","err","currentUrl","url","routeReuseStrategy","shouldReuseRoute","onSameUrlNavigation","forEach","p","resultatTraitement","entry_date","Date","getCodePostaleByVille","then","row","length","codepostal","codePostale","setTimeout","msg","valeurid","dialogRef","open","width","data","agences","afterClosed","result","codeagencecible","setAgence","reloadComponent","dataFromDialog","selectedAgence","selectedAgent","codegestionnairecible","setAgenceEtAgent","alert","selectedStatut","setResutlatTraitement","filter","trim","toLowerCase","statutSelectedValue","e","tab","isActive","event","keyCode","searchByCode","selectedValueSearch","personne","queryParams","numtiers","codegestionnaire","numTier","codeGest","getStatus","EMP","Demande","sendToEvolan","body","makeItFocused","sourceChanged","environment","production","DialogComponent","close","onNoClick","LoginComponent","fb","snackBar","hide","group","identifiant","required","password","remember","connect","login","localStorage","setItem","role","snackBarRef","duration","horizontalPosition","verticalPosition","onAction","dismiss","connectt","ELEMENT_DATA","numDossier","nom","prenom","valeurID","nomErreur","PersonnePhysiqueComponent","hideRequiredControl","floatLabelControl","genres","formalismes","situations","statutMessage","showSpinner","person","genre","cin","dateExpiration","adresse","rue","quartier","teleDomicile","teleGSM","teleProfessionel","dateNaissance","situationFamiliale","rib","nullValidator","niveauFormalisme","montantDemande","nombreEcheances","item","uploadedFile","type","slice","lastIndexOf","file","target","files","reader","FileReader","readAsText","onloadend","resultedCSV","arrayoflines","toString","AllLines","split","headers","shift","DataLines","arr","i","push","message","color","onChange","registerPerson","uploadFile","keyDownFunction","PmDataNewService","post","TokenInterceptorService","injector","request","next","clonedRequest","clone","setHeaders","Authorization","handle","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","Error","code","keys","webpackContextKeys","Object","resolve","module","exports","AppComponent","DialogSecondComponent","dataToSend","PersonneDetailsComponent","router","dateadapter","activeRoute","sanitizer","isHintNom","isHintNomAR","isHintPrenom","isHintPrenomAR","isHintCIN","isHintSituationFamiliale","isHintAdresse","isHintAdresseAR","isHintVille","isHintVilleAR","isHintStatutTraitement","isHintGenre","isHintCodeAgence","isSettingEnded","setLocale","respp","villes","agence","dataville","getAgences","resp","getCodeAgence","villecodeagence","codeagence","datenaissance","datecreation","dateexpiration","bypassSecurityTrustUrl","telgsm","codePostal","form","format","email","secteur","projet","daterendezvous","typeclient","raisonsociale","raisonsocialesuite","ice","rcommerce","nifiscale","numpattente","ribentreprise","formejuridique","telbureau","adresseentreprise","rueentreprise","quartierentreprise","codepostaleentreprise","villeentreprise","teldomicile","telprofessionnel","situationfamiliale","numrib","niveauformalisme","montantdemande","nombreecheance","action","canal","codeorganisme","origine","produit","statutTraitement","id_od","arabicCharUnicodeRange","HintNom","test","String","fromCharCode","charCodeAt","HintNomAR","HintPrenom","HintPrenomAR","HintGenre","HintCIN","HintSituationFamiliale","HintCodeAgence","HintAdresse","HintAdresseAR","HintVille","HintVilleAR","panelClass","error","an","champ","anomalie","HintStatutTraitement","MaterialAngularModules","AppModule","provide","useClass","multi","declarations","imports","providers","bootstrap","DatabaseService","window","openDatabase","undefined","Database","CodePostales","JSON","stringify","InsertCodePostalVille","organismes","InsertOrganisme","InsertAgence","transaction","SQLtransaction","CreationQuery","executeSql","resultSet","InsertionQuery","organisme","Promise","reject","parse","getItem","GettingQuery","filtredAgences","toUpperCase","replace","filtredCodePostales","MainNavComponent","breakpointObserver","location","isHandset$","isHome","isBO","isAGENT","isCLIENT","startsWith","clear","logout","CallServerService","PersonnePhysiqueGestionnaireComponent","PpDataService","snapshot","pps","element","erreur","personnePhysiqueError","RegisterComponent","databaseService","confirmedPassword","validators","checkPasswords","getOrganismes","rows","notSame","hasError","getAgenceByOrganisme","onSubmit","changed","PersonneMoraleComponent","NotAuthGuard","AuthService","credentials","ResultatTraitementComponent","routes","path","pathMatch","redirectTo","component","canActivate","runGuardsAndResolvers","children","ppsn","codes","AppRoutingModule","forRoot","SafeHtmlPipe","args","bypassSecurityTrustHtml","name","bootstrapModule","webpackEmptyAsyncContext"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree,\n  Router,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private authService: AuthService, private route: Router) {}\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree>\n    | boolean\n    | UrlTree {\n    let token = this.authService.getToken();\n    if (token) {\n      return true;\n    } else {\n      this.route.navigate(['login']);\n      return false;\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n  public isMenuOpen: boolean = false;\n  constructor(private route:Router) { }\n\n  ngOnInit(): void {\n  }\n\n\n  logout(){\n    this.route.navigate(['login'])\n  }\n}\n","<app-main-nav>\r\n    <router-outlet></router-outlet>\r\n</app-main-nav>","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router'\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AgenceDataService implements Resolve<Object>{\n  constructor(private http:HttpClient) { }\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): any[] | Observable<Object> | Promise<any[]> {\n    return this.http.get('https://192.168.140.30:3132/api/getListVilles')\n  }\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { PmDataService } from 'src/app/services/pmData.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DialogComponent } from '../dialog/dialog.component';\nimport { DialogSecondComponent } from '../dialog-second/dialog-second.component';\nimport { CallServerService } from 'src/app/services/call-server.service';\nimport { ResultatTraitementComponent } from '../resultat-traitement/resultat-traitement.component';\nimport { PmDataNewService } from 'src/app/services/pmDataNew.service';\nimport { DatabaseService } from 'src/app/services/database.service';\n\n@Component({\n  selector: 'app-personne-morale-gestionnaire',\n  templateUrl: './personne-morale-gestionnaire.component.html',\n  styleUrls: ['./personne-morale-gestionnaire.component.scss'],\n})\nexport class PersonneMoraleGestionnaireComponent implements OnInit {\n  source = [\n    { value: 'prequalifier', viewValue: 'Demandes pré-qualifiées' },\n    { value: 'nouvelle', viewValue: 'Nouvelles demandes' },\n    { value: 'evolan', viewValue: 'Demandes traités par le réseaux' },\n  ];\n  // statustraitement = [\n  //   { value: '', viewValue: 'Tous' },\n  //   { viewValue: 'Hors zone agence', value: 'horszone' },\n  //   { viewValue: 'Erronée', value: 'erronee' },\n  //   { viewValue: 'Intéressé', value: 'interesse' },\n  //   { viewValue: 'Non intéressé', value: 'noninteresse' },\n  //   { viewValue: 'Non éligible', value: 'noneligible' },\n  //   { viewValue: 'Injoignable', value: 'injoignable' },\n  // ];\n  status = [\n    { value: '', viewValue: 'Tous' },\n    { value: 'Demande débloquée', viewValue: 'Débloquée' },\n    { value: 'Demande rejetée', viewValue: 'Rejetée' },\n    { value: 'Demande annulée', viewValue: 'Annulée' },\n  ];\n  selectedValue: string = '';\n  selectedValueSearch!: string;\n  displayedColumns: string[] = [\n    'nom',\n    'prenom',\n    'cin',\n    'telgsm',\n    'resultatTraitement',\n    'options',\n  ];\n  dataSource: any;\n  @ViewChild(MatSort) sort!: MatSort;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  focused: boolean = false;\n  agences: any;\n  agent: any;\n  sourceSelectedValue: any;\n  statutSelectedValue: any;\n  dataFromDialog: any;\n  alert: any;\n  isAlert: boolean = false;\n  statusTraitement = [\n    { statutC: '', statut: 'Tous' },\n    { statutC: 'Hors zone agence', statut: 'Hors zone agence' },\n    { statutC: 'Erronée', statut: 'Erronée' },\n    { statutC: 'Intéressé', statut: 'Intéressé' },\n    { statutC: 'Non intéressé', statut: 'Non intéressé' },\n    { statutC: 'Non éligible', statut: 'Non éligible' },\n    { statutC: 'Injoignable', statut: 'Injoignable' },\n    { statutC: 'Intéressé plustard', statut: 'Intéressé plustard' },\n  ];\n  selectedStatut: any;\n  demandesP: any;\n  isSourceSelected = false;\n  constructor(\n    public callServer: CallServerService,\n    public dialog: MatDialog,\n    private PmDataService: PmDataService,\n    private activatedRoute: ActivatedRoute,\n    private route: Router,\n    private newOrdersService: PmDataNewService,\n    private db:DatabaseService\n  ) {\n    // this.activatedRoute.data.subscribe((res) => {\n    //   console.log(res);\n    //   let data = res.codes.results\n    //   console.log('this is the data :', data)\n    // });\n  }\n  sourceChanged() {\n    this.isSourceSelected = true;\n    this.dataSource = null;\n    if (this.sourceSelectedValue === 'nouvelle') {\n      this.getNouvellesDemandes();\n    } else if (this.sourceSelectedValue === 'prequalifier') {\n      this.getDemandesPrequalifies();\n    } else if (this.sourceSelectedValue === 'evolan') {\n      this.getDemandesEvolan();\n    }\n  }\n\n  getDemandesEvolan() {\n    this.newOrdersService.getDemandesEvolan().subscribe(\n      (res: any) => {\n        console.log(res.ville);\n        let personnes = res.results;\n        this.displayedColumns = [\n          'nom',\n          'prenom',\n          'cin',\n          'telgsm',\n          'resultatTraitement',\n          'nbrappel',\n          'entry_date',\n          'agence',\n          'codeagence',\n          'montantdemande',\n          'ville',\n          'statuttraitement',\n          'options',\n        ];\n        this.dataSource = new MatTableDataSource(personnes);\n        this.dataSource.sort = this.sort;\n        this.dataSource.paginator = this.paginator;\n      },\n      (err) => (this.dataSource = null)\n    );\n  }\n  ngOnInit(): void {}\n  reloadComponent() {\n    let currentUrl = this.route.url;\n    this.route.routeReuseStrategy.shouldReuseRoute = () => false;\n    this.route.onSameUrlNavigation = 'reload';\n    this.route.navigate([currentUrl]);\n  }\n  pageSizeOptions = [5, 10, 15];\n  getNouvellesDemandes() {\n    this.newOrdersService.getNouvellesDemandes().subscribe(\n      (res: any) => {\n        let personnes = res.results;\n        console.log(personnes)\n        personnes.forEach((p) => {\n          if (!p.resultatTraitement) {\n            p.resultatTraitement = 'nouvelle';\n          }\n          p.entry_date = new Date(p.entry_date)\n        });\n        personnes.forEach((p) => {\n          this.db.getCodePostaleByVille(p.ville).then((row:any)=>{\n            if (row.length > 0)  p.codepostal = row[0].codePostale\n          })\n        });\n        this.displayedColumns = [\n          'nom',\n          'prenom',\n          'cin',\n          'telgsm',\n          'montantdemande',\n          'email',\n          'secteur',\n          // 'projet',\n          'agence',\n          'codeagence',\n          'entry_date',\n          'options',\n        ];\n        setTimeout(() => {\n          this.dataSource = new MatTableDataSource(personnes);\n          this.dataSource.sort = this.sort;\n          this.dataSource.paginator = this.paginator;\n        }, 1995);\n      },\n      (err) => (this.dataSource = null)\n    );\n  }\n  getDemandesPrequalifies() {\n    this.newOrdersService.getDemandesPrequalifies().subscribe(\n      (res: any) => {\n        console.log(res);\n        let personnes = res.msg;\n        personnes.forEach((p) => {\n          if (!p.resultatTraitement) {\n            p.resultatTraitement = 'nouvelle';\n          }\n        });\n        this.displayedColumns = [\n          'nom',\n          'prenom',\n          'cin',\n          'telgsm',\n          'resultatTraitement',\n          'nbrappel',\n          'entry_date',\n          'agence',\n          'codeagence',\n          'montantdemande',\n          'ville',\n          'valeurid',\n          'options',\n        ];\n        this.dataSource = new MatTableDataSource(personnes);\n        this.dataSource.sort = this.sort;\n        this.dataSource.paginator = this.paginator;\n      },\n      (err) => (this.dataSource = null)\n    );\n  }\n\n  openDialog(valeurid): void {\n    const dialogRef = this.dialog.open(DialogComponent, {\n      width: '350px',\n      data: { agences: this.agences },\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      console.log('The dialog was closed');\n      if (result) {\n        let data = {\n          codeagencecible: result,\n          valeurid,\n        };\n        this.callServer.setAgence(data).subscribe(\n          (res) => {\n            console.log(res);\n          },\n          (err) => {\n            if (err.status === 441) {\n              this.reloadComponent();\n            }\n          }\n        );\n      }\n    });\n  }\n  openDialogSecond(valeurid): void {\n    const dialogRef = this.dialog.open(DialogSecondComponent, {\n      width: '350px',\n      data: { agences: this.agences },\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      console.log('The dialog was closed');\n      this.dataFromDialog = result;\n      console.log(result);\n      if (result.selectedAgence && result.selectedAgent) {\n        let data = {\n          codeagencecible: result.selectedAgence,\n          valeurid,\n          codegestionnairecible: result.selectedAgent,\n        };\n        this.callServer.setAgenceEtAgent(data).subscribe(\n          (res) => {\n            console.log(res);\n          },\n          (err) => {\n            if (err.status === 443) {\n              this.reloadComponent();\n            } else alert('error');\n          }\n        );\n      }\n    });\n  }\n  openDialogResultatTraitement(valeurid): void {\n    const dialogRef = this.dialog.open(ResultatTraitementComponent, {\n      width: '350px',\n      data: this.statusTraitement,\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      console.log('The dialog was closed');\n      this.selectedStatut = result;\n      let data = {\n        resultatTraitement: result,\n        valeurid,\n      };\n      this.callServer.setResutlatTraitement(data).subscribe(\n        (res) => {\n          this.reloadComponent();\n          console.log(res);\n        },\n        (err) => {\n          console.log(err);\n        }\n      );\n    });\n  }\n\n  ngAfterViewInit() {\n    // this.dataSource.sort = this.sort;\n    // this.dataSource.paginator = this.paginator;\n  }\n\n  onChange() {\n    console.log(this.selectedValue);\n    this.dataSource.filter = this.selectedValue.trim().toLowerCase();\n  }\n  onChangeSource() {\n    console.log(this.selectedValue);\n    this.dataSource.filter = this.sourceSelectedValue.trim().toLowerCase();\n  }\n\n  onChangeStatut() {\n    console.log(this.selectedValue);\n    this.dataSource.filter = this.statutSelectedValue.trim().toLowerCase();\n  }\n\n  makeItFocused(e: any) {\n    this.focused = e.tab.isActive;\n  }\n  keyDownFunction(event: any) {\n    if (event.keyCode == 13) {\n      this.searchByCode();\n    }\n  }\n\n  searchByCode() {\n    console.log(this.selectedValueSearch);\n  }\n  send(personne) {\n    console.log(personne);\n    this.route.navigate(['home/details'], { queryParams: personne });\n  }\n\n  getStatut(numtiers, codegestionnaire) {\n    let data = {\n      numTier: numtiers,\n      codeGest: codegestionnaire,\n    };\n    this.callServer.getStatus(data).subscribe(\n      (res: any) => {\n        console.log(res);\n        this.isAlert = true;\n        this.alert = res.EMP.Demande[0].statut;\n      },\n      (err) => {\n        console.log(err);\n      }\n    );\n  }\n  sendToEvolan(personne) {\n    this.callServer.sendToEvolan(personne).subscribe(\n      (res: any) => {\n        let body = {\n          data: res,\n          valeurid: personne.valeurid,\n        };\n        console.log('body to send', body);\n        // this.callServer.updatePersonne(body).subscribe(\n        //   (res) => {\n        //     console.log(res);\n        //     this.reloadComponent();\n        //   },\n        //   (err) => {\n        //     console.log('error from 3131', err);\n        //   }\n        // );\n      },\n      (err) => {\n        console.log('error from 3737', err);\n      }\n    );\n  }\n}\n","<mat-tab-group class=\"one\" (selectedTabChange)=\"makeItFocused($event)\" color=\"warn\">\n    <!-- Personne Physique  -->\n\n    <mat-tab label=\"nouvelles demandes\">\n\n        <!-- Filter by statut-->\n        <mat-form-field class=\"filter\" appearance=\"fill\">\n            <mat-label>selectionner la source</mat-label>\n            <mat-select [(ngModel)]=\"sourceSelectedValue\" (selectionChange)=\"sourceChanged()\">\n                <mat-option *ngFor=\"let statut of source\" [value]=\"statut.value\">\n                    {{ statut.viewValue }}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n        <mat-form-field *ngIf=\"sourceSelectedValue === 'prequalifier' \" class=\"filter\" appearance=\"fill\">\n            <mat-label>Filtrer par statut traitement</mat-label>\n            <mat-select [(ngModel)]=\"statutSelectedValue\" (selectionChange)=\"onChangeStatut()\">\n                <mat-option *ngFor=\"let statut of statusTraitement\" [value]=\"statut.statutC\">\n                    {{ statut.statut }}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n        <mat-form-field *ngIf=\"sourceSelectedValue === 'evolan' \"  class=\"filter\" appearance=\"fill\">\n            <mat-label>Filtrer par statut</mat-label>\n            <mat-select [(ngModel)]=\"selectedValue\" (selectionChange)=\"onChange()\">\n                <mat-option *ngFor=\"let statut of status\" [value]=\"statut.value\">\n                    {{ statut.viewValue }}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n        <ngb-alert *ngIf=\"isAlert\" type=\"danger\">{{ alert }}</ngb-alert>\n        <!--  Table-->\n        <mat-spinner style=\"margin: 0 auto;\"  *ngIf=\"!dataSource && isSourceSelected\"></mat-spinner>\n\n        <div *ngIf=\"dataSource\">\n            <div style=\"margin: 40px auto;\n            display: table;\">\n                <button style=\"margin-left: 10px;\"  mat-raised-button (click)=\"exporter.exportTable('xlsx',{fileName:'demandes_data'})\">Excel</button>\n                <button style=\"margin-left: 10px;\"  mat-raised-button (click)=\"exporter.exportTable('csv',{fileName:'demandes_data'})\">CSV</button>\n                <button style=\"margin-left: 10px;\"  mat-raised-button (click)=\"exporter.exportTable('json',{fileName:'demandes_data'})\">JSON</button>\n                <button style=\"margin-left: 10px;\"  mat-raised-button (click)=\"exporter.exportTable('txt',{fileName:'demandes_data'})\">TEXT</button>\n            </div>\n            <table mat-table  [dataSource]=\"dataSource\" matTableExporter #exporter=\"matTableExporter\" class=\"mat-elevation-z8\" matSort>\n\n                <ng-container matColumnDef=\"nom\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>Nom</th>\n                    <td mat-cell *matCellDef=\"let element\">{{ element.nom }}</td>\n                </ng-container>\n    \n                <ng-container matColumnDef=\"prenom\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>Prenom</th>\n                    <td mat-cell *matCellDef=\"let element\">{{ element.prenom }}</td>\n                </ng-container>\n                <ng-container matColumnDef=\"cin\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>CIN</th>\n                    <td mat-cell *matCellDef=\"let element\">{{ element.cin }}</td>\n                </ng-container>\n                <ng-container matColumnDef=\"telgsm\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>Tel</th>\n                    <td mat-cell *matCellDef=\"let element\">{{ element.telgsm }}</td>\n                </ng-container>\n                <ng-container matColumnDef=\"resultatTraitement\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>Resultat Traitement</th>\n                    <td mat-cell *matCellDef=\"let element\">{{ element.resultatTraitement === 'nouvelle' ? '':element.resultatTraitement}}</td>\n                </ng-container>\n                <ng-container matColumnDef=\"statuttraitement\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>Statut de demande</th>\n                    <td mat-cell *matCellDef=\"let element\">{{ element.statuttraitement }}</td>\n                </ng-container>\n                <ng-container matColumnDef=\"montantdemande\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>Montant demandé</th>\n                    <td mat-cell *matCellDef=\"let element\">{{ element.montantdemande }}</td>\n                </ng-container>\n                <ng-container matColumnDef=\"secteur\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>Secteur</th>\n                    <td mat-cell *matCellDef=\"let element\">{{ element.secteur }}</td>\n                </ng-container>\n                <!-- <ng-container matColumnDef=\"projet\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>Projet</th>\n                    <td mat-cell *matCellDef=\"let element\">{{ element.projet }}</td>\n                </ng-container> -->\n                <ng-container matColumnDef=\"email\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>Email</th>\n                    <td mat-cell *matCellDef=\"let element\">{{ element.email }}</td>\n                </ng-container>\n                <ng-container matColumnDef=\"ville\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>Ville</th>\n                    <td mat-cell *matCellDef=\"let element\">{{ element.ville }}</td>\n                </ng-container>\n                <ng-container matColumnDef=\"agence\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>Agence</th>\n                    <td mat-cell *matCellDef=\"let element\">{{ element.agence }}</td>\n                </ng-container>\n                <ng-container matColumnDef=\"codeagence\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>Code Agence</th>\n                    <td mat-cell *matCellDef=\"let element\">{{ element.codeagence }}</td>\n                </ng-container>\n                <ng-container matColumnDef=\"entry_date\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>Date Entrée</th>\n                    <td mat-cell *matCellDef=\"let element\">{{ element.entry_date | date:'dd/mm/yyyy'}}</td>\n                </ng-container>\n                <ng-container matColumnDef=\"nbrappel\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>Nombre Appel</th>\n                    <td mat-cell *matCellDef=\"let element\">{{ element.nbrappel }}</td>\n                </ng-container>\n                <ng-container matColumnDef=\"valeurid\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>Valeur ID</th>\n                    <td mat-cell *matCellDef=\"let element\">{{ element.valeurid }}</td>\n                </ng-container>\n                <!-- <ng-container matColumnDef=\"id_od\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>Id OD</th>\n                    <td mat-cell *matCellDef=\"let element\">{{ element.id_od }}</td>\n                </ng-container> -->\n                <ng-container matColumnDef=\"options\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>options</th>\n                    <td mat-cell *matCellDef=\"let element\">\n                        <!-- <button (click)=\"openDialog(element.valeurid)\" class=\"btn\" mat-raised-button color=\"warn\">\n                            Set Agence \n                        </button>\n                        <button (click)=\"openDialogSecond(element.valeurid)\" class=\"btn\" mat-raised-button color=\"warn\">\n                            Set Agent\n                        </button>\n                        <button (click)=\"getStatut(element.numtiers, element.codegestionnaire)\" class=\"btn\" mat-raised-button color=\"warn\">\n                            Get Statut\n                        </button>\n                        <button (click)=\"sendToEvolan(element)\" class=\"btn\" mat-raised-button color=\"warn\">\n                            Send To Evolan\n                        </button> -->\n                        <button (click)=\"send(element)\" class=\"btn\" mat-raised-button color=\"warn\">\n                            Details\n                        </button>\n                    </td>\n                </ng-container>\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n            </table>\n        </div>\n        <mat-paginator [pageSizeOptions]=\"pageSizeOptions\" showFirstLastButtons></mat-paginator>\n        \n    </mat-tab>\n</mat-tab-group>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, Inject, OnInit } from '@angular/core';\nimport {MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\n\n\n@Component({\n  selector: 'app-dialog',\n  templateUrl: './dialog.component.html',\n  styleUrls: ['./dialog.component.scss']\n})\nexport class DialogComponent implements OnInit {\n  data:any;\n  selectedAgence:string\n  constructor(\n    public dialogRef: MatDialogRef<DialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public agences) {\n      this.data = agences.agences\n    }\n\n  ngOnInit(): void {\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n","<h1 mat-dialog-title>Choisir l'agence</h1>\n<div mat-dialog-content>\n    <mat-form-field appearance=\"fill\">\n        <mat-label>Agence</mat-label>\n        <mat-select [(ngModel)]=\"selectedAgence\">\n            <mat-option *ngFor=\"let agence of data\" [value]='agence.codeagence'>\n                {{agence.agence}}\n            </mat-option>\n        </mat-select>\n    </mat-form-field>\n</div>\n<div mat-dialog-actions>\n    <button mat-button (click)=\"onNoClick()\">Annuler</button>\n    <button mat-button [mat-dialog-close]=\"selectedAgence\" cdkFocusInitial>Ok</button>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { MatSnackBar } from '@angular/material/snack-bar'\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  hide = true;\n  data:FormGroup\n  constructor(private route:Router, private authService:AuthService, private fb:FormBuilder, private snackBar:MatSnackBar) { }\n\n  ngOnInit(): void {\n    this.data = this.fb.group({\n      identifiant:['', Validators.required],\n      password:['', Validators.required],\n      remember:['']\n    })\n  }\n\n  connectt(event){\n    console.log(event.keyCode );\n    \n    if (event.keyCode === 13 ){\n      console.log('enter');\n      this.connect()\n    }\n  }\n  connect(){\n    console.log('connected')\n    this.authService.login(this.data.value).subscribe((res:any)=>{\n      localStorage.setItem('token',res.token)\n      localStorage.setItem('role',res.role)\n      this.route.navigate(['home'])\n    },(err)=>{\n        if (err.status && err.status === 401) {\n          let snackBarRef = this.snackBar.open('identifiant ou password incorrect ou encours de validation!', 'OK', {duration:15000, horizontalPosition:'center', verticalPosition:'top'});\n          snackBarRef.onAction().subscribe(()=>{\n            snackBarRef.dismiss()\n          })\n        }\n        else {\n          let snackBarRef = this.snackBar.open('Erreur serveur ressayer plus tard!', 'OK', {duration:15000, horizontalPosition:'center', verticalPosition:'top'});\n          snackBarRef.onAction().subscribe(()=>{\n            snackBarRef.dismiss()\n          })\n        }\n    })\n    \n  }\n}\n","<div class=\"on_top_of_body\">\n  <div class=\"form_container\">\n    <div class=\"logo\">\n      <img width=\"150px\" height=\"150px\" src=\"../../../assets/logo.png\" />\n    </div>\n\n    <div class=\"open_data\">\n      <h1>OPEN DATA</h1>\n    </div>\n    <form [formGroup]=\"data\">\n      <div>\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Identifiant</mat-label>\n          <input formControlName=\"identifiant\" matInput placeholder=\"Identifiant\" />\n          <mat-icon matPrefix>account_box</mat-icon>\n          <mat-hint *ngIf=\"false\">Hint</mat-hint>\n        </mat-form-field>\n      </div>\n      <div>\n        <mat-form-field appearance=\"fill\">\n          <mat-label> Mot de passe</mat-label>\n          <input\n          formControlName=\"password\"\n            matInput\n            [type]=\"hide ? 'password' : 'text'\"\n            placeholder=\"Mot de passe\"\n          />\n          <mat-icon matPrefix>lock</mat-icon>\n          <mat-hint *ngIf=\"false\">Hint</mat-hint>\n          <button\n            mat-icon-button\n            matSuffix\n            (click)=\"hide = !hide\"\n            [attr.aria-label]=\"'Hide password'\"\n            [attr.aria-pressed]=\"hide\"\n          >\n            <mat-icon>{{ hide ? \"visibility_off\" : \"visibility\" }}</mat-icon>\n          </button>\n        </mat-form-field>\n      </div>\n  \n      <p class=\"remember_me\">\n        <mat-checkbox formControlName=\"remember\" color=\"warn\">Se rappeler de moi</mat-checkbox>\n        <a href=\"#\">Mot de passe oublié?</a>\n      </p>\n    </form>\n\n\n    <p class=\"login\">\n      <button [disabled]=\"!data.valid\" mat-raised-button (keydown)=\"connectt($event)\" (click)=\"connect()\">\n        <h1>se connecter</h1>\n      </button>\n    </p>\n  <!--\n  <p class=\"login\">\n    <button mat-raised-button (click)=\"setToken()\"><h1>Get Token</h1></button>\n  </p>\n  -->\n\n    <p style=\"text-align: center\"><a href=\"/register\">Créer un compte</a></p>\n  </div>\n</div>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\n\nexport interface Dossier {\n  numTier: string;\n  numDossier: number;\n  nom: string;\n  prenom: string;\n  valeurID: number;\n  nomErreur: number;\n}\n\nconst ELEMENT_DATA: Dossier[] = [\n  {\n    numTier: '0001',\n    numDossier: 1,\n    nom: 'farah',\n    prenom: 'radouan',\n    valeurID: 110,\n    nomErreur: 0,\n  },\n  {\n    numTier: '0002',\n    numDossier: 2,\n    nom: 'baddou',\n    prenom: 'ayoub',\n    valeurID: 21,\n    nomErreur: 5,\n  },\n  {\n    numTier: '0003',\n    numDossier: 3,\n    nom: 'bouziane',\n    prenom: 'ismail',\n    valeurID: 134,\n    nomErreur: 1,\n  },\n];\n@Component({\n  selector: 'app-personne-physique',\n  templateUrl: './personne-physique.component.html',\n  styleUrls: ['./personne-physique.component.scss'],\n})\nexport class PersonnePhysiqueComponent implements OnInit {\n  person!: FormGroup;\n  hideRequiredControl = new FormControl(false);\n  floatLabelControl = new FormControl('auto');\n  status = [\n    { value: '', viewValue: 'Tous' },\n    { value: 'encours', viewValue: 'En Cours' },\n    { value: 'valide', viewValue: 'Validé' },\n    { value: 'rejete', viewValue: 'Rejeté' },\n    { value: 'decaisse', viewValue: 'Decaissé' },\n  ];\n  genres = [\n    { value: 'M.', viewValue: 'Monsieur' },\n    { value: 'MME', viewValue: 'Madame' },\n  ];\n  formalismes = [\n    {\n      value: '1001',\n      viewValue: 'INSCRIT AU REGISTRE DE COMMERCE',\n    },\n    {\n      value: '1003',\n      viewValue: 'ASSUJETTI A LA TAXE PROFESSIONNELLE',\n    },\n    {\n      value: '1004',\n      viewValue: 'INSCRIT DANS DES REGISTRES PROFESSIONNELS',\n    },\n    {\n      value: '1005',\n      viewValue: 'AGRÉMENT PROFESIONNEL',\n    },\n    {\n      value: '1006',\n      viewValue: 'AUCUN JUSTIF FORMALISE',\n    },\n    {\n      value: '1002',\n      viewValue: 'AUTO ENTREPRENEUR',\n    },\n  ];\n  situations = [\n    {\n      value: 'C',\n      viewValue: 'Célibataire',\n    },\n    {\n      value: 'M',\n      viewValue: 'Marié(e)',\n    },\n    {\n      value: 'D',\n      viewValue: 'Divorcé(e)',\n    },\n    {\n      value: 'V',\n      viewValue: 'Veuf(ve)',\n    },\n  ];\n  selectedValue: string = '';\n  selectedValueSearch!: string;\n  displayedColumns: string[] = [\n    'numTier',\n    'numDossier',\n    'nom',\n    'prenom',\n    'valeurID',\n    'nomErreur',\n  ];\n  dataSource = new MatTableDataSource(ELEMENT_DATA);\n  @ViewChild(MatSort) sort!: MatSort;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  focused: boolean = false;\n  statutMessage: string = 'votre statut';\n  uploadedFile: any;\n  showSpinner: boolean = false;\n  color: boolean;\n  message: string;\n  constructor(fb: FormBuilder) {\n    this.person = fb.group({\n      genre: ['', Validators.required],\n      nom: ['', Validators.required],\n      prenom: ['', Validators.required],\n      cin: ['', Validators.required],\n      dateExpiration: ['', Validators.required],\n      adresse: ['', Validators.required],\n      rue: ['', Validators.required],\n      quartier: ['', Validators.required],\n      ville: ['', Validators.required],\n      codePostale: ['', Validators.required],\n      teleDomicile: ['', Validators.required],\n      teleGSM: ['', Validators.required],\n      teleProfessionel: ['', Validators.required],\n      dateNaissance: ['', Validators.required],\n      situationFamiliale: ['', Validators.required],\n      rib: ['', [Validators.nullValidator, Validators.required]],\n      niveauFormalisme: ['', Validators.required],\n      montantDemande: ['', Validators.required],\n      nombreEcheances: ['', Validators.required],\n    });\n  }\n\n  ngOnInit(): void {}\n\n  ngAfterViewInit() {\n    this.dataSource.sort = this.sort;\n    this.dataSource.paginator = this.paginator;\n  }\n\n  onChange() {\n    console.log(this.selectedValue);\n    this.dataSource.filter = this.selectedValue.trim().toLowerCase();\n  }\n\n  makeItFocused(e: any) {\n    this.focused = e.tab.isActive;\n  }\n  registerPerson() {\n    console.log(this.person.value);\n  }\n  keyDownFunction(event: any) {\n    if (event.keyCode == 13) {\n      this.searchByCode();\n    }\n  }\n\n  searchByCode() {\n    console.log(this.selectedValueSearch);\n  }\n\n  // showUploadedFile(){\n  //   let item:string = this.uploadedFile\n  //   var type = item.slice(item.lastIndexOf('.')+1);\n  //   if (type !== 'csv') {\n  //     alert('not a csv file')\n  //   }\n  // }\n\n  uploadFile(e: any) {\n    try {\n      this.showSpinner = true;\n      let item: string = this.uploadedFile;\n      var type = item.slice(item.lastIndexOf('.') + 1);\n      if (type === 'csv') {\n        //do stuff\n        let file = e.target.files[0];\n  \n        let reader = new FileReader();\n        reader.readAsText(file);\n        reader.onloadend = () => {\n          let resultedCSV: string | ArrayBuffer = reader.result;\n          let arrayoflines = resultedCSV.toString();\n          let AllLines = arrayoflines.split('\\n');\n          let headers = AllLines.shift().split(',');\n          if (headers.length === 2) {\n            //do stuff\n            let DataLines = AllLines;\n            let arr = [];\n            for (let i = 0; i < DataLines.length; i++) {\n              if (DataLines[i].split(',').length === 2) {\n                //do stuff\n                arr.push({\n                  status: DataLines[i].split(',')[0],\n                  valeurID: DataLines[i].split(',')[1],\n                });\n              } else {\n                //do not do stuff\n                this.showSpinner = false;\n                this.message = \"Votre fichier n'est pas valide\";\n                this.color = true;\n                this.uploadedFile = ''\n              }\n            }\n            this.showSpinner = false;\n            this.message = 'Votre fichier est valide';\n            this.color = false;\n            this.uploadedFile = ''\n            // do something with the array\n          } else {\n            //do not do stuff\n            this.showSpinner = false;\n            this.message = \"Votre fichier n'est pas valide\";\n            this.color = true;\n            this.uploadedFile = ''\n          }\n        };\n      } else {\n        //do not do stuff\n        this.showSpinner = false;\n        this.message = \"Votre fichier n'est pas valide\";\n        this.color = true;\n        this.uploadedFile = ''\n      }\n    } catch (e) {\n      this.showSpinner = false;\n      this.message = \"Votre fichier n'est pas valide\";\n      this.color = true;\n      this.uploadedFile = ''\n    }\n  }\n\n\n  \n}\n","<mat-tab-group class=\"four\" (selectedTabChange)=\"makeItFocused($event)\" color=\"warn\">\n    <!-- Personne Physique  -->\n\n    <mat-tab label=\"Personne Physique\">\n        <!-- Filter by statut-->\n        <mat-form-field class=\"filter\" appearance=\"fill\">\n            <mat-label>Filtrer par statut</mat-label>\n            <mat-select [(ngModel)]=\"selectedValue\" (selectionChange)=\"onChange()\">\n                <mat-option *ngFor=\"let statut of status\" [value]=\"statut.value\">\n                    {{ statut.viewValue }}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n\n        <!--  Table-->\n        <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\" matSort>\n            <ng-container matColumnDef=\"numTier\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>N° TIERS.</th>\n                <td mat-cell *matCellDef=\"let element\">{{ element.numTier }}</td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"numDossier\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>N° Dossier.</th>\n                <td mat-cell *matCellDef=\"let element\">{{ element.numDossier }}</td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"nom\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Nom.</th>\n                <td mat-cell *matCellDef=\"let element\">{{ element.nom }}</td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"prenom\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Prénom.</th>\n                <td mat-cell *matCellDef=\"let element\">{{ element.prenom }}</td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"valeurID\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Valeur ID.</th>\n                <td mat-cell *matCellDef=\"let element\">{{ element.valeurID }}</td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"nomErreur\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Erreur</th>\n                <td mat-cell *matCellDef=\"let element\">{{ element.nomErreur }}</td>\n            </ng-container>\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n        </table>\n        <mat-paginator [pageSizeOptions]=\"[1, 2, 3]\" showFirstLastButtons></mat-paginator>\n    </mat-tab>\n\n    <!-- Ajouter PP TAB  -->\n    <mat-tab label=\"Ajouter PP\">\n        <div class=\"form-container\">\n            <form [formGroup]=\"person\" (ngSubmit)=\"registerPerson()\">\n                <div class=\"fields-container fields-container-of-three\">\n                    <mat-form-field appearance=\"fill\" [floatLabel]=\"floatLabelControl.value\">\n                        <mat-label>Genre</mat-label>\n                        <mat-select formControlName=\"genre\">\n                            <mat-option *ngFor=\"let genre of genres\" [value]=\"genre.value\">\n                                {{ genre.viewValue }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n\n                    <mat-form-field appearance=\"fill\" [floatLabel]=\"floatLabelControl.value\">\n                        <mat-label>Nom</mat-label>\n                        <input formControlName=\"nom\" matInput />\n                    </mat-form-field>\n\n                    <mat-form-field appearance=\"fill\" [floatLabel]=\"floatLabelControl.value\">\n                        <mat-label>Prénom</mat-label>\n                        <input formControlName=\"prenom\" matInput />\n                    </mat-form-field>\n                </div>\n\n                <div class=\"fields-container fields-container-of-two\">\n                    <mat-form-field appearance=\"fill\" [floatLabel]=\"floatLabelControl.value\">\n                        <mat-label>CIN</mat-label>\n                        <input formControlName=\"cin\" matInput />\n                    </mat-form-field>\n\n                    <mat-form-field appearance=\"fill\" [floatLabel]=\"floatLabelControl.value\">\n                        <mat-label>Date Expiration</mat-label>\n                        <input formControlName=\"dateExpiration\" matInput [matDatepicker]=\"picker\" />\n                        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                        <mat-datepicker #picker></mat-datepicker>\n                    </mat-form-field>\n                </div>\n\n                <div class=\"fields-container fields-container-of-two\">\n                    <mat-form-field appearance=\"fill\" [floatLabel]=\"floatLabelControl.value\">\n                        <mat-label>Adresse</mat-label>\n                        <input formControlName=\"adresse\" matInput />\n                    </mat-form-field>\n\n                    <mat-form-field appearance=\"fill\" [floatLabel]=\"floatLabelControl.value\">\n                        <mat-label>Rue</mat-label>\n                        <input formControlName=\"rue\" matInput />\n                    </mat-form-field>\n                </div>\n\n                <div class=\"fields-container fields-container-of-three\">\n                    <mat-form-field appearance=\"fill\" [floatLabel]=\"floatLabelControl.value\">\n                        <mat-label>Quartier</mat-label>\n                        <input formControlName=\"quartier\" matInput />\n                    </mat-form-field>\n\n                    <mat-form-field appearance=\"fill\" [floatLabel]=\"floatLabelControl.value\">\n                        <mat-label>Ville</mat-label>\n                        <input formControlName=\"ville\" matInput />\n                    </mat-form-field>\n\n                    <mat-form-field appearance=\"fill\" [floatLabel]=\"floatLabelControl.value\">\n                        <mat-label>Code Postale</mat-label>\n                        <input formControlName=\"codePostale\" matInput />\n                    </mat-form-field>\n                </div>\n\n                <div class=\"fields-container fields-container-of-three\">\n                    <mat-form-field appearance=\"fill\" [floatLabel]=\"floatLabelControl.value\">\n                        <mat-label>Téléphone Domicile</mat-label>\n                        <input formControlName=\"teleDomicile\" matInput />\n                    </mat-form-field>\n\n                    <mat-form-field appearance=\"fill\" [floatLabel]=\"floatLabelControl.value\">\n                        <mat-label>Téléphone GSM</mat-label>\n                        <input formControlName=\"teleGSM\" matInput />\n                    </mat-form-field>\n\n                    <mat-form-field appearance=\"fill\" [floatLabel]=\"floatLabelControl.value\">\n                        <mat-label>Téléphone Professionel</mat-label>\n                        <input formControlName=\"teleProfessionel\" matInput />\n                    </mat-form-field>\n                </div>\n\n                <div class=\"fields-container fields-container-of-two\">\n                    <mat-form-field appearance=\"fill\" [floatLabel]=\"floatLabelControl.value\">\n                        <mat-label>Date Naissance</mat-label>\n                        <input formControlName=\"dateNaissance\" matInput [matDatepicker]=\"pickerr\" />\n                        <mat-datepicker-toggle matSuffix [for]=\"pickerr\"></mat-datepicker-toggle>\n                        <mat-datepicker #pickerr></mat-datepicker>\n                    </mat-form-field>\n\n                    <mat-form-field appearance=\"fill\" [floatLabel]=\"floatLabelControl.value\">\n                        <mat-label>Situation Familiale</mat-label>\n                        <mat-select formControlName=\"situationFamiliale\">\n                            <mat-option *ngFor=\"let situation of situations\" [value]=\"situation.value\">\n                                {{ situation.viewValue | titlecase }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n\n                <div class=\"fields-container fields-container-of-two\">\n                    <mat-form-field appearance=\"fill\" [floatLabel]=\"floatLabelControl.value\">\n                        <mat-label>N° RIB</mat-label>\n                        <input formControlName=\"rib\" matInput />\n                    </mat-form-field>\n\n                    <mat-form-field appearance=\"fill\" [floatLabel]=\"floatLabelControl.value\">\n                        <mat-label>Niveau Formalisme</mat-label>\n                        <mat-select formControlName=\"niveauFormalisme\">\n                            <mat-option *ngFor=\"let formalisme of formalismes\" [value]=\"formalisme.value\">\n                                {{ formalisme.viewValue | titlecase }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n\n                <div class=\"fields-container fields-container-of-two\">\n                    <mat-form-field appearance=\"fill\" [floatLabel]=\"floatLabelControl.value\">\n                        <mat-label>Montant Demandé</mat-label>\n                        <input formControlName=\"montantDemande\" matInput />\n                    </mat-form-field>\n\n                    <mat-form-field appearance=\"fill\" [floatLabel]=\"floatLabelControl.value\">\n                        <mat-label>Nombre d'echéances</mat-label>\n                        <input formControlName=\"nombreEcheances\" matInput />\n                    </mat-form-field>\n                </div>\n                <div class=\"button-container\">\n                    <button class=\"register-button\" type=\"submit\">Register</button>\n                </div>\n            </form>\n        </div>\n    </mat-tab>\n    <mat-tab label=\"Upload Statut\">\n        <div class=\"filter\">\n            <h1 class=\"upload-title\">Déposez votre fichier</h1>\n            <input type=\"file\" [(ngModel)]=\"uploadedFile\" name=\"file\" id=\"file\" class=\"inputfile\" accept=\".csv\" (change)=\"uploadFile($event)\" />\n            <label *ngIf=\"!showSpinner\" for=\"file\">Sélectionnez votre fichier</label>\n            <mat-spinner *ngIf=\"showSpinner\"></mat-spinner>\n            <div *ngIf=\"message\" class=\"status-success\">\n                <div [ngClass]=\"{ 'statut-message': true, 'success':color }\">\n                    <p>{{ message }}</p>\n                </div>\n            </div>\n        </div>\n        <div class=\"code\">\n            <h1 class=\"upload-title\">Modèle de fichier :</h1>\n            <h3 class=\"upload-title\">Fichier CSV (séparé par des virgules)</h3>\n            <pre>\n            <code><span style=\"color: rgb(53, 146, 221);\">{{\"statut\"}}</span>{{\",\"}}<span style=\"color: rgb(53, 140, 211);\">{{\"valeurID\"}}</span>{{\"\\n\"}}<span style=\"color: rgb(20, 220, 70);\">{{\"status 1\"}}</span>{{\",\"}}<span style=\"color: rgb(20, 220, 70);\">{{\"valeurID 1\"}}</span>{{\"\\n\"}}<span style=\"color: rgb(20, 220, 70);\">{{\"status 2\"}}</span>{{\",\"}}<span style=\"color: rgb(20, 220, 70);\">{{\"valeurID 2\"}}</span>{{\"\\n\"}}<span style=\"color: rgb(20, 220, 70);\">{{\"status 3\"}}</span>{{\",\"}}<span style=\"color: rgb(20, 220, 70);\">{{\"valeurID 3\"}}</span></code>\n          </pre>\n\n        </div>\n        <!--<button (click)=\"showUploadedFile()\">show it</button>-->\n    </mat-tab>\n    <mat-tab label=\"Etat dossier\">\n        <mat-form-field (keydown)=\"keyDownFunction($event)\" class=\"filter\" appearance=\"fill\">\n            <mat-label>Code du dossier</mat-label>\n            <input [(ngModel)]=\"selectedValueSearch\" matInput placeholder=\"tapez le code du dossier\" />\n            <mat-icon matPrefix>search</mat-icon>\n            <mat-hint *ngIf=\"false\">Hint</mat-hint>\n        </mat-form-field>\n        <div class=\"button-container\">\n            <button (click)=\"searchByCode()\" class=\"register-button\">\n        <span class=\"search\">Chercher</span>\n      </button>\n        </div>\n        <div class=\"status\">\n            <div [ngClass]=\"{ 'statut-message': true }\">\n                <p>{{ statutMessage }}</p>\n            </div>\n        </div>\n    </mat-tab>\n</mat-tab-group>","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router'\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class PmDataNewService\r\n//  implements Resolve<Object>\r\n {\r\n  constructor(private http:HttpClient) { }\r\n  // resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): any[] | Observable<Object> | Promise<any[]> {\r\n  //   return this.http.post('https://192.168.140.30:3132/api/nouvellesdemandes',{})\r\n  // }\r\n   getNouvellesDemandes(){\r\n    return this.http.post('https://192.168.140.30:3132/api/nouvellesdemandes', {})\r\n  }\r\n  getDemandesEvolan(){\r\n    return this.http.post('https://192.168.140.30:3132/api/demandesRS', {})\r\n  }\r\n  getDemandesPrequalifies(){\r\n    return this.http.post('https://192.168.140.30:3132/api/demandesPrequalifies', {})\r\n  }\r\n}\r\n","import { Injectable, Injector } from '@angular/core';\r\nimport { HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http'\r\nimport {AuthService} from './auth.service'\r\n\r\n\r\n@Injectable()\r\nexport class TokenInterceptorService implements HttpInterceptor  {\r\n \r\n  constructor(private injector:Injector) { \r\n  }\r\n  intercept(request: HttpRequest<any>, next: HttpHandler) {\r\n    let authService = this.injector.get(AuthService)\r\n    var clonedRequest = request.clone({\r\n        setHeaders: {\r\n          Authorization: `Bearer ${authService.getToken()}`\r\n        }\r\n      });\r\n    return next.handle(clonedRequest)\r\n  }\r\n}\r\n","var map = {\n\t\"./af\": \"K/tc\",\n\t\"./af.js\": \"K/tc\",\n\t\"./ar\": \"jnO4\",\n\t\"./ar-dz\": \"o1bE\",\n\t\"./ar-dz.js\": \"o1bE\",\n\t\"./ar-kw\": \"Qj4J\",\n\t\"./ar-kw.js\": \"Qj4J\",\n\t\"./ar-ly\": \"HP3h\",\n\t\"./ar-ly.js\": \"HP3h\",\n\t\"./ar-ma\": \"CoRJ\",\n\t\"./ar-ma.js\": \"CoRJ\",\n\t\"./ar-sa\": \"gjCT\",\n\t\"./ar-sa.js\": \"gjCT\",\n\t\"./ar-tn\": \"bYM6\",\n\t\"./ar-tn.js\": \"bYM6\",\n\t\"./ar.js\": \"jnO4\",\n\t\"./az\": \"SFxW\",\n\t\"./az.js\": \"SFxW\",\n\t\"./be\": \"H8ED\",\n\t\"./be.js\": \"H8ED\",\n\t\"./bg\": \"hKrs\",\n\t\"./bg.js\": \"hKrs\",\n\t\"./bm\": \"p/rL\",\n\t\"./bm.js\": \"p/rL\",\n\t\"./bn\": \"kEOa\",\n\t\"./bn-bd\": \"loYQ\",\n\t\"./bn-bd.js\": \"loYQ\",\n\t\"./bn.js\": \"kEOa\",\n\t\"./bo\": \"0mo+\",\n\t\"./bo.js\": \"0mo+\",\n\t\"./br\": \"aIdf\",\n\t\"./br.js\": \"aIdf\",\n\t\"./bs\": \"JVSJ\",\n\t\"./bs.js\": \"JVSJ\",\n\t\"./ca\": \"1xZ4\",\n\t\"./ca.js\": \"1xZ4\",\n\t\"./cs\": \"PA2r\",\n\t\"./cs.js\": \"PA2r\",\n\t\"./cv\": \"A+xa\",\n\t\"./cv.js\": \"A+xa\",\n\t\"./cy\": \"l5ep\",\n\t\"./cy.js\": \"l5ep\",\n\t\"./da\": \"DxQv\",\n\t\"./da.js\": \"DxQv\",\n\t\"./de\": \"tGlX\",\n\t\"./de-at\": \"s+uk\",\n\t\"./de-at.js\": \"s+uk\",\n\t\"./de-ch\": \"u3GI\",\n\t\"./de-ch.js\": \"u3GI\",\n\t\"./de.js\": \"tGlX\",\n\t\"./dv\": \"WYrj\",\n\t\"./dv.js\": \"WYrj\",\n\t\"./el\": \"jUeY\",\n\t\"./el.js\": \"jUeY\",\n\t\"./en-au\": \"Dmvi\",\n\t\"./en-au.js\": \"Dmvi\",\n\t\"./en-ca\": \"OIYi\",\n\t\"./en-ca.js\": \"OIYi\",\n\t\"./en-gb\": \"Oaa7\",\n\t\"./en-gb.js\": \"Oaa7\",\n\t\"./en-ie\": \"4dOw\",\n\t\"./en-ie.js\": \"4dOw\",\n\t\"./en-il\": \"czMo\",\n\t\"./en-il.js\": \"czMo\",\n\t\"./en-in\": \"7C5Q\",\n\t\"./en-in.js\": \"7C5Q\",\n\t\"./en-nz\": \"b1Dy\",\n\t\"./en-nz.js\": \"b1Dy\",\n\t\"./en-sg\": \"t+mt\",\n\t\"./en-sg.js\": \"t+mt\",\n\t\"./eo\": \"Zduo\",\n\t\"./eo.js\": \"Zduo\",\n\t\"./es\": \"iYuL\",\n\t\"./es-do\": \"CjzT\",\n\t\"./es-do.js\": \"CjzT\",\n\t\"./es-mx\": \"tbfe\",\n\t\"./es-mx.js\": \"tbfe\",\n\t\"./es-us\": \"Vclq\",\n\t\"./es-us.js\": \"Vclq\",\n\t\"./es.js\": \"iYuL\",\n\t\"./et\": \"7BjC\",\n\t\"./et.js\": \"7BjC\",\n\t\"./eu\": \"D/JM\",\n\t\"./eu.js\": \"D/JM\",\n\t\"./fa\": \"jfSC\",\n\t\"./fa.js\": \"jfSC\",\n\t\"./fi\": \"gekB\",\n\t\"./fi.js\": \"gekB\",\n\t\"./fil\": \"1ppg\",\n\t\"./fil.js\": \"1ppg\",\n\t\"./fo\": \"ByF4\",\n\t\"./fo.js\": \"ByF4\",\n\t\"./fr\": \"nyYc\",\n\t\"./fr-ca\": \"2fjn\",\n\t\"./fr-ca.js\": \"2fjn\",\n\t\"./fr-ch\": \"Dkky\",\n\t\"./fr-ch.js\": \"Dkky\",\n\t\"./fr.js\": \"nyYc\",\n\t\"./fy\": \"cRix\",\n\t\"./fy.js\": \"cRix\",\n\t\"./ga\": \"USCx\",\n\t\"./ga.js\": \"USCx\",\n\t\"./gd\": \"9rRi\",\n\t\"./gd.js\": \"9rRi\",\n\t\"./gl\": \"iEDd\",\n\t\"./gl.js\": \"iEDd\",\n\t\"./gom-deva\": \"qvJo\",\n\t\"./gom-deva.js\": \"qvJo\",\n\t\"./gom-latn\": \"DKr+\",\n\t\"./gom-latn.js\": \"DKr+\",\n\t\"./gu\": \"4MV3\",\n\t\"./gu.js\": \"4MV3\",\n\t\"./he\": \"x6pH\",\n\t\"./he.js\": \"x6pH\",\n\t\"./hi\": \"3E1r\",\n\t\"./hi.js\": \"3E1r\",\n\t\"./hr\": \"S6ln\",\n\t\"./hr.js\": \"S6ln\",\n\t\"./hu\": \"WxRl\",\n\t\"./hu.js\": \"WxRl\",\n\t\"./hy-am\": \"1rYy\",\n\t\"./hy-am.js\": \"1rYy\",\n\t\"./id\": \"UDhR\",\n\t\"./id.js\": \"UDhR\",\n\t\"./is\": \"BVg3\",\n\t\"./is.js\": \"BVg3\",\n\t\"./it\": \"bpih\",\n\t\"./it-ch\": \"bxKX\",\n\t\"./it-ch.js\": \"bxKX\",\n\t\"./it.js\": \"bpih\",\n\t\"./ja\": \"B55N\",\n\t\"./ja.js\": \"B55N\",\n\t\"./jv\": \"tUCv\",\n\t\"./jv.js\": \"tUCv\",\n\t\"./ka\": \"IBtZ\",\n\t\"./ka.js\": \"IBtZ\",\n\t\"./kk\": \"bXm7\",\n\t\"./kk.js\": \"bXm7\",\n\t\"./km\": \"6B0Y\",\n\t\"./km.js\": \"6B0Y\",\n\t\"./kn\": \"PpIw\",\n\t\"./kn.js\": \"PpIw\",\n\t\"./ko\": \"Ivi+\",\n\t\"./ko.js\": \"Ivi+\",\n\t\"./ku\": \"JCF/\",\n\t\"./ku.js\": \"JCF/\",\n\t\"./ky\": \"lgnt\",\n\t\"./ky.js\": \"lgnt\",\n\t\"./lb\": \"RAwQ\",\n\t\"./lb.js\": \"RAwQ\",\n\t\"./lo\": \"sp3z\",\n\t\"./lo.js\": \"sp3z\",\n\t\"./lt\": \"JvlW\",\n\t\"./lt.js\": \"JvlW\",\n\t\"./lv\": \"uXwI\",\n\t\"./lv.js\": \"uXwI\",\n\t\"./me\": \"KTz0\",\n\t\"./me.js\": \"KTz0\",\n\t\"./mi\": \"aIsn\",\n\t\"./mi.js\": \"aIsn\",\n\t\"./mk\": \"aQkU\",\n\t\"./mk.js\": \"aQkU\",\n\t\"./ml\": \"AvvY\",\n\t\"./ml.js\": \"AvvY\",\n\t\"./mn\": \"lYtQ\",\n\t\"./mn.js\": \"lYtQ\",\n\t\"./mr\": \"Ob0Z\",\n\t\"./mr.js\": \"Ob0Z\",\n\t\"./ms\": \"6+QB\",\n\t\"./ms-my\": \"ZAMP\",\n\t\"./ms-my.js\": \"ZAMP\",\n\t\"./ms.js\": \"6+QB\",\n\t\"./mt\": \"G0Uy\",\n\t\"./mt.js\": \"G0Uy\",\n\t\"./my\": \"honF\",\n\t\"./my.js\": \"honF\",\n\t\"./nb\": \"bOMt\",\n\t\"./nb.js\": \"bOMt\",\n\t\"./ne\": \"OjkT\",\n\t\"./ne.js\": \"OjkT\",\n\t\"./nl\": \"+s0g\",\n\t\"./nl-be\": \"2ykv\",\n\t\"./nl-be.js\": \"2ykv\",\n\t\"./nl.js\": \"+s0g\",\n\t\"./nn\": \"uEye\",\n\t\"./nn.js\": \"uEye\",\n\t\"./oc-lnc\": \"Fnuy\",\n\t\"./oc-lnc.js\": \"Fnuy\",\n\t\"./pa-in\": \"8/+R\",\n\t\"./pa-in.js\": \"8/+R\",\n\t\"./pl\": \"jVdC\",\n\t\"./pl.js\": \"jVdC\",\n\t\"./pt\": \"8mBD\",\n\t\"./pt-br\": \"0tRk\",\n\t\"./pt-br.js\": \"0tRk\",\n\t\"./pt.js\": \"8mBD\",\n\t\"./ro\": \"lyxo\",\n\t\"./ro.js\": \"lyxo\",\n\t\"./ru\": \"lXzo\",\n\t\"./ru.js\": \"lXzo\",\n\t\"./sd\": \"Z4QM\",\n\t\"./sd.js\": \"Z4QM\",\n\t\"./se\": \"//9w\",\n\t\"./se.js\": \"//9w\",\n\t\"./si\": \"7aV9\",\n\t\"./si.js\": \"7aV9\",\n\t\"./sk\": \"e+ae\",\n\t\"./sk.js\": \"e+ae\",\n\t\"./sl\": \"gVVK\",\n\t\"./sl.js\": \"gVVK\",\n\t\"./sq\": \"yPMs\",\n\t\"./sq.js\": \"yPMs\",\n\t\"./sr\": \"zx6S\",\n\t\"./sr-cyrl\": \"E+lV\",\n\t\"./sr-cyrl.js\": \"E+lV\",\n\t\"./sr.js\": \"zx6S\",\n\t\"./ss\": \"Ur1D\",\n\t\"./ss.js\": \"Ur1D\",\n\t\"./sv\": \"X709\",\n\t\"./sv.js\": \"X709\",\n\t\"./sw\": \"dNwA\",\n\t\"./sw.js\": \"dNwA\",\n\t\"./ta\": \"PeUW\",\n\t\"./ta.js\": \"PeUW\",\n\t\"./te\": \"XLvN\",\n\t\"./te.js\": \"XLvN\",\n\t\"./tet\": \"V2x9\",\n\t\"./tet.js\": \"V2x9\",\n\t\"./tg\": \"Oxv6\",\n\t\"./tg.js\": \"Oxv6\",\n\t\"./th\": \"EOgW\",\n\t\"./th.js\": \"EOgW\",\n\t\"./tk\": \"Wv91\",\n\t\"./tk.js\": \"Wv91\",\n\t\"./tl-ph\": \"Dzi0\",\n\t\"./tl-ph.js\": \"Dzi0\",\n\t\"./tlh\": \"z3Vd\",\n\t\"./tlh.js\": \"z3Vd\",\n\t\"./tr\": \"DoHr\",\n\t\"./tr.js\": \"DoHr\",\n\t\"./tzl\": \"z1FC\",\n\t\"./tzl.js\": \"z1FC\",\n\t\"./tzm\": \"wQk9\",\n\t\"./tzm-latn\": \"tT3J\",\n\t\"./tzm-latn.js\": \"tT3J\",\n\t\"./tzm.js\": \"wQk9\",\n\t\"./ug-cn\": \"YRex\",\n\t\"./ug-cn.js\": \"YRex\",\n\t\"./uk\": \"raLr\",\n\t\"./uk.js\": \"raLr\",\n\t\"./ur\": \"UpQW\",\n\t\"./ur.js\": \"UpQW\",\n\t\"./uz\": \"Loxo\",\n\t\"./uz-latn\": \"AQ68\",\n\t\"./uz-latn.js\": \"AQ68\",\n\t\"./uz.js\": \"Loxo\",\n\t\"./vi\": \"KSF8\",\n\t\"./vi.js\": \"KSF8\",\n\t\"./x-pseudo\": \"/X5v\",\n\t\"./x-pseudo.js\": \"/X5v\",\n\t\"./yo\": \"fzPg\",\n\t\"./yo.js\": \"fzPg\",\n\t\"./zh-cn\": \"XDpg\",\n\t\"./zh-cn.js\": \"XDpg\",\n\t\"./zh-hk\": \"SatO\",\n\t\"./zh-hk.js\": \"SatO\",\n\t\"./zh-mo\": \"OmwH\",\n\t\"./zh-mo.js\": \"OmwH\",\n\t\"./zh-tw\": \"kOpN\",\n\t\"./zh-tw.js\": \"kOpN\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"RnhZ\";","import { Component } from '@angular/core';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {}\n","<router-outlet></router-outlet>","import { Component,Inject ,OnInit } from '@angular/core';\nimport {MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-dialog-second',\n  templateUrl: './dialog-second.component.html',\n  styleUrls: ['./dialog-second.component.scss']\n})\nexport class DialogSecondComponent implements OnInit {\n  data:any\n  dataToSend={\n    selectedAgence:'',\n    selectedAgent:''\n  }\n  constructor(\n    public dialogRef: MatDialogRef<DialogSecondComponent>,\n    @Inject(MAT_DIALOG_DATA) public agences) {\n      this.data = agences.agences\n     }\n\n  ngOnInit(): void {\n  }\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n","<h1 mat-dialog-title>Agence vers Agent</h1>\n<div mat-dialog-content>\n    <mat-form-field appearance=\"fill\">\n        <mat-label>Agence</mat-label>\n        <mat-select [(ngModel)]=\"dataToSend.selectedAgence\">\n            <mat-option *ngFor=\"let agence of data\" [value]='agence.agence'>\n                {{agence.agence}}\n            </mat-option>\n        </mat-select>\n    </mat-form-field>\n    <mat-form-field appearance=\"fill\">\n        <mat-label>Agent</mat-label>\n        <mat-select [(ngModel)]=\"dataToSend.selectedAgent\">\n            <mat-option value='R91'>Agent1</mat-option>\n            <mat-option value='R91'>Agent2</mat-option>\n            <mat-option value='R91'>Agent3</mat-option>\n        </mat-select>\n    </mat-form-field>\n</div>\n<div mat-dialog-actions>\n    <button mat-button (click)=\"onNoClick()\">Annuler</button>\n    <button mat-button [mat-dialog-close]=\"dataToSend\" cdkFocusInitial>Ok</button>\n</div>","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DateAdapter } from '@angular/material/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CallServerService } from 'src/app/services/call-server.service';\nimport { DialogSecondComponent } from '../dialog-second/dialog-second.component';\nimport { DialogComponent } from '../dialog/dialog.component';\nimport { ResultatTraitementComponent } from '../resultat-traitement/resultat-traitement.component';\nimport * as moment from 'moment/moment';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n@Component({\n  selector: 'app-personne-details',\n  templateUrl: './personne-details.component.html',\n  styleUrls: ['./personne-details.component.scss'],\n})\nexport class PersonneDetailsComponent implements OnInit {\n  personne: any;\n  // personneREC = {\n  // typeclient: \"M\",\n  // raisonsociale: \"WhoAmI\",\n  // raisonsocialesuite: \"\",\n  // ice: \"3003003033\",\n  // rcommerce: \"3003003033\",\n  // nifiscale: \"3003003033\",\n  // numpattente: \"3003003033\",\n  // datecreation: \"04/04/2006\",\n  // ribentreprise: \"350810000000000057561622\",\n  // formejuridique: \"B\",\n  // telbureau: \"0667647353\",\n  // adresseentreprise: \"rue avenue ville pays\",\n  // rueentreprise: \"rue\",\n  // quartierentreprise: \"quartier\",\n  // codepostaleentreprise: \"10000\",\n  // villeentreprise: \"ville\",\n  // genre: \"M.\",\n  // nom: \"Radouan\",\n  // prenom: \"FARAH\",\n  // cin: \"TH2021\",\n  // dateexpiration: \"01/01/2025\",\n  // adresse: \"rue avenue ville pays\",\n  // rue: \"rue\",\n  // quartier: \"quartier\",\n  // codepostal: \"10000\",\n  // ville: \"ville\",\n  // teldomicile: \"0638373737\",\n  // telgsm: \"0638373734\",\n  // telprofessionnel: \"0638373737\",\n  // datenaissance: \"01/01/1995\",\n  // situationfamiliale: \"M\",\n  // numrib: \"350810000000000057561622\",\n  // niveauformalisme: 1001,\n  // montantdemande: \"10000\",\n  // nombreecheance: \"12\",\n  // codeagence: \"0002\",\n  // codegestionnaire: \"AWB\",\n  // action: \"REC\"\n  // }\n  agences: any;\n  isAlert: boolean = false;\n  alert: any;\n  // logs: any;\n\n  statusTraitement = [\n    { statut: 'Hors zone agence' },\n    { statut: 'Erronée' },\n    { statut: 'Intéressé' },\n    { statut: 'Non intéressé' },\n    { statut: 'Non éligible' },\n    { statut: 'Injoignable' },\n    { statut: 'Intéressé plustard' },\n  ];\n  url: any;\n  url2: 'sip:0618265025';\n  form: FormGroup;\n  HintNom: string;\n  isHintNom: boolean = false;\n  HintNomAR: string;\n  isHintNomAR: boolean = false;\n  HintPrenom: string;\n  isHintPrenom: boolean = false;\n  HintPrenomAR: string;\n  isHintPrenomAR: boolean = false;\n  HintCIN: string;\n  isHintCIN: boolean = false;\n  HintSituationFamiliale: string;\n  isHintSituationFamiliale: boolean = false;\n  HintAdresse: string;\n  isHintAdresse: boolean = false;\n  HintAdresseAR: string;\n  isHintAdresseAR: boolean = false;\n  HintVille: string;\n  isHintVille: boolean = false;\n  HintVilleAR: string;\n  isHintVilleAR: boolean = false;\n  HintStatutTraitement: string;\n  isHintStatutTraitement: boolean = false;\n  HintGenre: string;\n  isHintGenre: boolean = false;\n  isHintCodeAgence: boolean = false;\n  HintCodeAgence: string;\n  villes: any;\n  villecodeagence: any;\n  isSettingEnded: boolean = false;\n  // codeagence: any;\n  constructor(\n    private router: Router,\n    private snackBar: MatSnackBar,\n    public callServer: CallServerService,\n    public dialog: MatDialog,\n    private dateadapter: DateAdapter<Date>,\n    private activeRoute: ActivatedRoute,\n    private http: HttpClient,\n    private sanitizer: DomSanitizer,\n    private fb: FormBuilder // private server:CallServerService\n  ) {\n    setTimeout(() => {\n      this.isSettingEnded = true;\n    }, 2000);\n    this.dateadapter.setLocale('en-GB'); // dd/MM/YYYY\n    this.activeRoute.data.subscribe((respp) => {\n      this.villes = respp.villes.results;\n      console.log(respp);\n    });\n    this.activeRoute.queryParams.subscribe((res) => {\n      this.personne = res;\n      console.log('le personne',res)\n      let data = {\n        agence: res.agence,\n      };\n      let dataville = {\n        ville: res.ville,\n      };\n      this.callServer.getAgences(dataville).subscribe(\n        (resp: any) => {\n          this.agences = resp.results;\n          console.log(this.agences);\n          this.callServer.getCodeAgence(data).subscribe(\n            (resp: any) => {\n              console.log(resp.results);\n              this.villecodeagence =\n                resp.results.length > 0 ? resp.results[0].codeagence : '';\n              let datenaissance;\n              let datecreation;\n              let dateexpiration;\n              if (this.personne.datenaissance) {\n                datenaissance = new Date(this.personne.datenaissance);\n              }\n              if (this.personne.datecreation) {\n                datecreation = new Date(this.personne.datecreation);\n              }\n              if (this.personne.dateexpiration) {\n                dateexpiration = new Date(this.personne.dateexpiration);\n              }\n\n              //  this.personne.datecreation = this.personne.datecreation && new Date(this.personne.datecreation)\n              //  this.personne.dateexpiration = this.personne.dateexpiration && new Date(this.personne.dateexpiration)\n              this.url = this.sanitizer.bypassSecurityTrustUrl(\n                `sip:${this.personne.telgsm}`\n              );\n              console.log(this.personne.agence);\n              console.log(this.personne.ville);\n              console.log(this.personne.codePostal);\n\n              this.form = this.fb.group({\n                agence: [this.personne.agence],\n                entry_date: [moment(this.personne.entry_date).format('L')],\n                email: [this.personne.email],\n                secteur: [this.personne.secteur],\n                projet: [this.personne.projet],\n                daterendezvous: [null],\n                typeclient: ['P'],\n                raisonsociale: [this.personne.raisonsociale],\n                raisonsocialesuite: [''],\n                ice: [this.personne.ice],\n                rcommerce: [this.personne.rcommerce],\n                nifiscale: [this.personne.nifiscale],\n                numpattente: [this.personne.numpattente],\n                datecreation: [ datecreation],\n                ribentreprise: [this.personne.ribentreprise],\n                formejuridique: [this.personne.formejuridique],\n                telbureau: [this.personne.telbureau],\n                adresseentreprise: [this.personne.adresseentreprise],\n                rueentreprise: [this.personne.rueentreprise],\n                quartierentreprise: [this.personne.quartierentreprise],\n                codepostaleentreprise: [this.personne.codepostaleentreprise],\n                villeentreprise: [this.personne.villeentreprise],\n                genre: ['M.'],\n                nom: [this.personne.nom],\n                prenom: [this.personne.prenom],\n                cin: [this.personne.cin],\n                dateexpiration: [ dateexpiration],\n                adresse: [this.personne.adresse],\n                rue: [this.personne.rue],\n                quartier: [this.personne.quartier],\n                codepostal: [this.personne.codepostal],\n                ville: [res.ville],\n                teldomicile: [this.personne.teldomicile],\n                telgsm: [this.personne.telgsm],\n                telprofessionnel: [this.personne.telprofessionnel],\n                datenaissance: [ datenaissance],\n                situationfamiliale: [this.personne.situationfamiliale],\n                numrib: [this.personne.numrib],\n                niveauformalisme: ['1006'],\n                montantdemande: [this.personne.montantdemande],\n                nombreecheance: [this.personne.nombreecheance],\n                codeagence: [this.villecodeagence],\n                codegestionnaire: ['RSS'],\n                action: ['TEST'],\n                canal: ['107'],\n                codeagencecible: [''],\n                codeorganisme: ['RS'],\n                origine: ['RS'],\n                produit: [''],\n                statutTraitement: [this.personne.resultatTraitement],\n                id_od: [this.personne.id],\n                valeurid: [this.personne.valeurid],\n              });\n            },\n            (err) => console.log(err)\n          );\n        },\n        (err) => console.log(err)\n      );\n    });\n  }\n  getcodeagenes() {\n    let data = {\n      ville: this.form.value.ville,\n    };\n    this.callServer.getAgences(data).subscribe(\n      (resp: any) => {\n        this.agences = resp.results;\n      },\n      (err) => console.log(err)\n    );\n  }\n  ngOnInit(): void {\n    // console.log(this.personne);\n  }\n  show() {\n    console.log(this.form.value);\n  }\n  openDialog(valeurid): void {\n    const dialogRef = this.dialog.open(DialogComponent, {\n      width: '350px',\n      data: { agences: this.agences },\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      console.log('The dialog was closed');\n      let data = {\n        codeagencecible: result,\n        valeurid,\n      };\n      this.callServer.setAgence(data).subscribe(\n        (res) => {\n          console.log(res);\n        },\n        (err) => {\n          if (err.status === 441) {\n            alert('successfuly set');\n          } else alert('error');\n        }\n      );\n    });\n  }\n\n  openDialogSecond(valeurid): void {\n    const dialogRef = this.dialog.open(DialogSecondComponent, {\n      width: '350px',\n      data: { agences: this.agences },\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      console.log('The dialog was closed');\n      let data = {\n        codeagencecible: result.selectedAgence,\n        valeurid,\n        codegestionnairecible: result.selectedAgent,\n      };\n      this.callServer.setAgenceEtAgent(data).subscribe(\n        (res) => {\n          console.log(res);\n        },\n        (err) => {\n          if (err.status === 443) {\n            alert('successfully set');\n          } else alert('error');\n        }\n      );\n    });\n  }\n  getStatut(numtiers, codegestionnaire) {\n    let data = {\n      numTier: numtiers,\n      codeGest: codegestionnaire,\n    };\n    this.callServer.getStatus(data).subscribe(\n      (res: any) => {\n        this.isAlert = true;\n        this.alert = res.EMP.Demande[0].statut;\n      },\n      (err) => {\n        console.log(err);\n      }\n    );\n  }\n  sendToEvolan() {\n    let personne = this.form.value;\n    console.log(personne);\n    if (personne.datenaissance){\n      personne.datenaissance =  moment(personne.datenaissance).format('L')\n    }\n    if (personne.datecreation){\n      personne.datecreation =  moment(personne.datecreation).format('L')\n    }\n    if (personne.dateexpiration){\n      personne.dateexpiration =  moment(personne.dateexpiration).format('L')\n    }\n    if (personne.daterendezvous){\n      personne.daterendezvous =  moment(personne.daterendezvous).format('L')\n    }\n    if (personne.statutTraitement) {\n      if (personne.statutTraitement === 'Intéressé') {\n        personne.action = 'REC';\n        var arabicCharUnicodeRange = /[\\u0600-\\u06FF]/;\n        console.log('recording...');\n        if (!personne.nom) {\n          console.log('le nom est obligatoire');\n          this.HintNom = 'le nom est obligatoire';\n          this.isHintNom = true;\n          return;\n        } else if (\n          arabicCharUnicodeRange.test(\n            String.fromCharCode(personne.nom.charCodeAt(0))\n          )\n        ) {\n          this.HintNomAR = 'le nom doit être en francais';\n          this.isHintNomAR = true;\n          return;\n        }\n        if (!personne.prenom) {\n          this.HintPrenom = 'le prenom est obligatoire';\n          this.isHintPrenom = true;\n          return;\n        } else if (\n          arabicCharUnicodeRange.test(\n            String.fromCharCode(personne.prenom.charCodeAt(0))\n          )\n        ) {\n          this.HintPrenomAR = 'le prenom doit être en francais';\n          this.isHintPrenomAR = true;\n          return;\n        }\n        if (!personne.genre) {\n          this.HintGenre = 'le genre est obligatoire';\n          this.isHintGenre = true;\n          return;\n        }\n        if (!personne.cin) {\n          this.HintCIN = 'le cin est obligatoire';\n          this.isHintCIN = true;\n          return;\n        }\n        if (!personne.situationfamiliale) {\n          this.HintSituationFamiliale =\n            'la situation familiale est obligatoire';\n          this.isHintSituationFamiliale = true;\n          return;\n        }\n        if (!personne.codeagence) {\n          this.HintCodeAgence = 'le Code Agence est obligatoire';\n          this.isHintCodeAgence = true;\n          return;\n        }\n        if (!personne.adresse) {\n          this.HintAdresse = \"l'adresse est obligatoire\";\n          this.isHintAdresse = true;\n          return;\n        } else if (\n          arabicCharUnicodeRange.test(\n            String.fromCharCode(personne.adresse.charCodeAt(0))\n          )\n        ) {\n          this.HintAdresseAR = \"l'adresse doit être en francais\";\n          this.isHintAdresseAR = true;\n          return;\n        }\n        if (!personne.ville) {\n          this.HintVille = 'la ville est obligatoire';\n          this.isHintVille = true;\n          return;\n        } else if (\n          arabicCharUnicodeRange.test(\n            String.fromCharCode(personne.ville.charCodeAt(0))\n          )\n        ) {\n          this.HintVilleAR = 'la ville doit être en francais';\n          this.isHintVilleAR = true;\n          return;\n        }\n        this.isSettingEnded = false;\n        this.callServer.sendToEvolan(personne).subscribe(\n          (res: any) => {\n            this.router.navigate(['home']).then(() => {\n              let snackBarRef = this.snackBar.open(\n                'Demande enregistrer avec ID :' + res.msg,\n                'OK',\n                {\n                  duration: 15000,\n                  horizontalPosition: 'center',\n                  verticalPosition: 'bottom',\n                  panelClass: 'successClassSnack',\n                }\n              );\n              snackBarRef.onAction().subscribe(() => {\n                snackBarRef.dismiss();\n              });\n            });\n          },\n          (err) => {\n            if (err.status === 500) {\n              let snackBarRef = this.snackBar.open('une erreur est survenue, veuillez réessayer plustard', 'OK', {duration:15000, horizontalPosition:'center', verticalPosition:'top'});\n              snackBarRef.onAction().subscribe(()=>{\n                snackBarRef.dismiss()\n              })\n            }else {\n            this.isSettingEnded = true;\n\n            err.error.forEach((an) => {\n              let snackBarRef = this.snackBar.open(\n                an.champ + an.anomalie,\n                'OK',\n                {\n                  duration: 15000,\n                  horizontalPosition: 'center',\n                  verticalPosition: 'top',\n                }\n              );\n              snackBarRef.onAction().subscribe(() => {\n                snackBarRef.dismiss();\n              });\n            });\n          }\n          }\n        );\n      } else {\n        if (personne.statutTraitement === 'nouvelle') {\n          console.log('please insert a status');\n          this.HintStatutTraitement = 'le statut de traitement est obligatoire';\n          this.isHintStatutTraitement = true;\n        } else {\n          personne.action = 'TEST';\n          this.isSettingEnded = false;\n\n          this.callServer.sendToEvolan(personne).subscribe(\n            (res: any) => {\n              this.router.navigate(['home']).then(() => {\n                let snackBarRef = this.snackBar.open(\n                  'Demande enregistrer avec ID :' + res.msg,\n                  'OK',\n                  {\n                    duration: 15000,\n                    horizontalPosition: 'center',\n                    verticalPosition: 'bottom',\n                    panelClass: 'successClassSnack',\n                  }\n                );\n                snackBarRef.onAction().subscribe(() => {\n                  snackBarRef.dismiss();\n                });\n              });\n            },\n            (err) => {\n              this.isSettingEnded = true;\n\n              err.error.forEach((an) => {\n                let snackBarRef = this.snackBar.open(\n                  an.champ + an.anomalie,\n                  'OK',\n                  {\n                    duration: 15000,\n                    horizontalPosition: 'center',\n                    verticalPosition: 'top',\n                  }\n                );\n                snackBarRef.onAction().subscribe(() => {\n                  snackBarRef.dismiss();\n                });\n              });\n            }\n          );\n        }\n      }\n    } else {\n      console.log('please insert a status');\n      this.HintStatutTraitement = 'le statut de traitement est obligatoire';\n      this.isHintStatutTraitement = true;\n    }\n  }\n\n  openDialogResultatTraitement(valeurid): void {\n    const dialogRef = this.dialog.open(ResultatTraitementComponent, {\n      width: '350px',\n      data: this.statusTraitement,\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      console.log('The dialog was closed');\n      let data = {\n        resultatTraitement: result,\n        valeurid,\n      };\n      this.callServer.setResutlatTraitement(data).subscribe(\n        (res) => {\n          this.alert('successfully sent');\n        },\n        (err) => {\n          this.alert('error');\n        }\n      );\n    });\n  }\n}\n","<div class=\"nbrappel\" *ngIf=\"personne.resultatTraitement != 'nouvelle'\">\n  <p>\n    Nombre appels:\n    {{\n      personne.nbrappel\n    }}\n  </p>\n</div>\n<div class=\"resultatTraitement\">\n  <p>\n    {{\n      personne.resultatTraitement === \"nouvelle\"\n        ? \"Nouvelle demande\"\n        : personne.resultatTraitement\n    }}\n  </p>\n</div>\n<div class=\"resultatEvolan\">\n  <p>\n    {{\n      personne.personnePhysiqueError\n    }}\n  </p>\n</div>\n<mat-spinner style=\"margin: 0 auto;\"  *ngIf=\"!isSettingEnded\"></mat-spinner>\n\n<form class=\"form\" [formGroup]=\"form\" *ngIf=\"isSettingEnded\">\n  <div>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Nom</mat-label>\n      <input\n        type=\"text\"\n        maxlength=\"32\"\n        minlength=\"3\"\n        formControlName=\"nom\"\n        matInput\n      />\n      <mat-hint style=\"color: crimson\" *ngIf=\"isHintNom\">{{\n        HintNom\n      }}</mat-hint>\n      <mat-hint style=\"color: crimson\" *ngIf=\"isHintNomAR\">{{\n        HintNomAR\n      }}</mat-hint>\n    </mat-form-field>\n  </div>\n\n  <div>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Prénom</mat-label>\n      <input\n        type=\"text\"\n        maxlength=\"32\"\n        minlength=\"3\"\n        formControlName=\"prenom\"\n        matInput\n      />\n      <mat-hint style=\"color: crimson\" *ngIf=\"isHintPrenom\">{{\n        HintPrenom\n      }}</mat-hint>\n      <mat-hint style=\"color: crimson\" *ngIf=\"isHintPrenomAR\">{{\n        HintPrenomAR\n      }}</mat-hint>\n    </mat-form-field>\n  </div>\n\n  <div>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Genre</mat-label>\n      <mat-select formControlName=\"genre\">\n        <mat-option value=\"M.\"> Monsieur </mat-option>\n        <mat-option value=\"MME\"> Madame </mat-option>\n      </mat-select>\n      <mat-hint style=\"color: crimson\" *ngIf=\"isHintGenre\">{{\n        HintGenre\n      }}</mat-hint>\n    </mat-form-field>\n  </div>\n\n  <div>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Date Naissance</mat-label>\n      <input\n        formControlName=\"datenaissance\"\n        matInput\n        [matDatepicker]=\"datenaisscepicker\"\n      />\n      <mat-datepicker-toggle\n        matSuffix\n        [for]=\"datenaisscepicker\"\n      ></mat-datepicker-toggle>\n      <mat-datepicker #datenaisscepicker></mat-datepicker>\n      <mat-hint style=\"color: crimson\" *ngIf=\"false\">Hint</mat-hint>\n    </mat-form-field>\n  </div>\n  <div>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Situation Familiale</mat-label>\n      <mat-select formControlName=\"situationfamiliale\">\n        <mat-option value=\"M\"> Marié </mat-option>\n        <mat-option value=\"C\"> Célibataire </mat-option>\n      </mat-select>\n      <mat-hint style=\"color: crimson\" *ngIf=\"isHintSituationFamiliale\">{{\n        HintSituationFamiliale\n      }}</mat-hint>\n    </mat-form-field>\n  </div>\n  <div>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>CIN</mat-label>\n      <input\n        type=\"text\"\n        maxlength=\"15\"\n        minlength=\"3\"\n        formControlName=\"cin\"\n        matInput\n      />\n      <mat-hint style=\"color: crimson\" *ngIf=\"isHintCIN\">{{\n        HintCIN\n      }}</mat-hint>\n    </mat-form-field>\n  </div>\n\n  <div>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Date Expiration</mat-label>\n      <input\n        formControlName=\"dateexpiration\"\n        matInput\n        [matDatepicker]=\"dateexpirationpicker\"\n      />\n      <mat-datepicker-toggle\n        matSuffix\n        [for]=\"dateexpirationpicker\"\n      ></mat-datepicker-toggle>\n      <mat-datepicker #dateexpirationpicker></mat-datepicker>\n      <mat-hint style=\"color: crimson\" *ngIf=\"false\">Hint</mat-hint>\n    </mat-form-field>\n  </div>\n\n  <div>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Adresse</mat-label>\n      <input\n        type=\"text\"\n        maxlength=\"32\"\n        minlength=\"3\"\n        formControlName=\"adresse\"\n        matInput\n      />\n      <mat-hint style=\"color: crimson\" *ngIf=\"isHintAdresse\">{{\n        HintAdresse\n      }}</mat-hint>\n      <mat-hint style=\"color: crimson\" *ngIf=\"isHintAdresseAR\">{{\n        HintAdresseAR\n      }}</mat-hint>\n    </mat-form-field>\n  </div>\n  <div>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Adresse ligne 1</mat-label>\n      <input\n        type=\"text\"\n        maxlength=\"32\"\n        minlength=\"3\"\n        formControlName=\"rue\"\n        matInput\n      />\n      <!-- <mat-hint style=\"color: crimson\" *ngIf=\"isHintAdresse\">{{\n        HintAdresse\n      }}</mat-hint> -->\n    </mat-form-field>\n  </div>\n  <div>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Adresse ligne 2</mat-label>\n      <input\n        type=\"text\"\n        maxlength=\"32\"\n        minlength=\"3\"\n        formControlName=\"quartier\"\n        matInput\n      />\n      <!-- <mat-hint style=\"color: crimson\" *ngIf=\"isHintAdresse\">{{\n        HintAdresse\n      }}</mat-hint> -->\n    </mat-form-field>\n  </div>\n\n  <div>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Ville</mat-label>\n      <mat-select  formControlName=\"ville\" (selectionChange)=\"getcodeagenes()\">\n        <mat-option [value]=\"personne.ville\">{{personne.ville}}</mat-option>\n        <mat-option *ngFor=\"let v of villes\" [value]=\"v.ville\">\n          {{ v.ville }}\n        </mat-option>\n      </mat-select>\n      <mat-hint\n        type=\"text\"\n        style=\"color: crimson\"\n        *ngIf=\"isHintVille\"\n        >{{ HintVille }}</mat-hint\n      >\n      <mat-hint\n      type=\"text\"\n      style=\"color: crimson\"\n      *ngIf=\"isHintVilleAR\"\n      >{{ HintVilleAR }}</mat-hint\n    >\n    </mat-form-field>\n  </div>\n\n  <div>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Code Postal</mat-label>\n      <input\n        type=\"text\"\n        maxlength=\"5\"\n        minlength=\"5\"\n        formControlName=\"codepostal\"\n        matInput\n      />\n      <mat-hint style=\"color: crimson\" *ngIf=\"false\">Hint</mat-hint>\n    </mat-form-field>\n  </div>\n\n  <div>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Agence</mat-label>\n      <mat-select formControlName=\"codeagence\">\n        <mat-option [value]=\"form.value.codeagence\">{{form.value.codeagence?personne.agence:'à choisir...'}}</mat-option>\n        <mat-option *ngFor=\"let agence of agences\" [value]=\"agence.codeagence\">\n          {{ agence.agence }}\n        </mat-option>\n      </mat-select>\n      <mat-hint style=\"color: crimson\" *ngIf=\"isHintCodeAgence\">{{\n        HintCodeAgence\n      }}</mat-hint>\n      <mat-hint style=\"color: crimson\" *ngIf=\"isHintCodeAgenceAR\">{{\n        HintCodeAgenceAR\n      }}</mat-hint>\n    </mat-form-field>\n  </div>\n\n  <div>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Tel Domicile</mat-label>\n      <input\n        type=\"text\"\n        maxlength=\"10\"\n        minlength=\"10\"\n        formControlName=\"teldomicile\"\n        matInput\n      />\n      <mat-hint style=\"color: crimson\" *ngIf=\"false\">Hint</mat-hint>\n    </mat-form-field>\n  </div>\n  <div>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Tel GSM</mat-label>\n      <input\n        type=\"text\"\n        maxlength=\"10\"\n        minlength=\"10\"\n        formControlName=\"telgsm\"\n        matInput\n      />\n      <mat-hint style=\"color: crimson\" *ngIf=\"false\">Hint</mat-hint>\n    </mat-form-field>\n  </div>\n  <div>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Tel Professionnel</mat-label>\n      <input\n        type=\"text\"\n        maxlength=\"10\"\n        minlength=\"10\"\n        formControlName=\"telprofessionnel\"\n        matInput\n      />\n      <mat-hint style=\"color: crimson\" *ngIf=\"false\">Hint</mat-hint>\n    </mat-form-field>\n  </div>\n  <!-- <div>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>typeclient</mat-label>\n      <input formControlName=\"typeclient\" matInput />\n      <mat-hint style=\"color: crimson;\" *ngIf=\"false\">Hint</mat-hint>\n    </mat-form-field>\n  </div> -->\n\n  <!-- <p>{{personne.action}}</p>\n<div>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Identifiant</mat-label>\n      <input [(ngModel)]=\"\" matInput />\n      <mat-hint style=\"color: crimson;\" *ngIf=\"false\">Hint</mat-hint>\n    </mat-form-field>\n  </div> -->\n\n  <!-- <p>{{personne.autoinsert}}</p>\n<div>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Identifiant</mat-label>\n      <input [(ngModel)]=\"\" matInput />\n      <mat-hint style=\"color: crimson;\" *ngIf=\"false\">Hint</mat-hint>\n    </mat-form-field>\n  </div> -->\n\n  <!-- <div>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Canal</mat-label>\n      <input formControlName=\"canal\" matInput />\n      <mat-hint style=\"color: crimson;\" *ngIf=\"false\">Hint</mat-hint>\n    </mat-form-field>\n  </div> -->\n\n  <!-- <div>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>codeagencecible</mat-label>\n      <input formControlName=\"codeagencecible\" matInput />\n      <mat-hint style=\"color: crimson;\" *ngIf=\"false\">Hint</mat-hint>\n    </mat-form-field>\n  </div> -->\n\n  <!-- <div>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>codegestionnaire</mat-label>\n      <input formControlName=\"codegestionnaire\" matInput />\n      <mat-hint style=\"color: crimson;\" *ngIf=\"false\">Hint</mat-hint>\n    </mat-form-field>\n  </div> -->\n\n  <!-- <div>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>codeorganisme</mat-label>\n      <input formControlName=\"codeorganisme\" matInput />\n      <mat-hint style=\"color: crimson;\" *ngIf=\"false\">Hint</mat-hint>\n    </mat-form-field>\n  </div> -->\n\n  <!-- <p>{{personne.dateinsert}}</p>\n<div>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>dateinsert</mat-label>\n      <input [(ngModel)]=\"\" matInput />\n      <mat-hint style=\"color: crimson;\" *ngIf=\"false\">Hint</mat-hint>\n    </mat-form-field>\n  </div> -->\n\n  <!-- <p>{{personne.erreur}}</p>\n<div>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Identifiant</mat-label>\n      <input [(ngModel)]=\"\" matInput />\n      <mat-hint style=\"color: crimson;\" *ngIf=\"false\">Hint</mat-hint>\n    </mat-form-field>\n  </div> -->\n\n  <!-- <p>{{personne.id}}</p>\n<div>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Identifiant</mat-label>\n      <input [(ngModel)]=\"\" matInput />\n      <mat-hint style=\"color: crimson;\" *ngIf=\"false\">Hint</mat-hint>\n    </mat-form-field>\n  </div> -->\n  <!-- <p>{{personne.idstatut}}</p>\n<div>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Identifiant</mat-label>\n      <input [(ngModel)]=\"\" matInput />\n      <mat-hint style=\"color: crimson;\" *ngIf=\"false\">Hint</mat-hint>\n    </mat-form-field>\n  </div> -->\n\n  <div>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Montant Demandé</mat-label>\n      <input\n        type=\"number\"\n        max=\"50000\"\n        min=\"0\"\n        formControlName=\"montantdemande\"\n        matInput\n      />\n      <mat-hint style=\"color: crimson\" *ngIf=\"false\">Hint</mat-hint>\n    </mat-form-field>\n  </div>\n\n  <div>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Nombre d'échéances</mat-label>\n      <input\n        type=\"number\"\n        max=\"24\"\n        min=\"1\"\n        formControlName=\"nombreecheance\"\n        matInput\n      />\n      <mat-hint style=\"color: crimson\" *ngIf=\"false\">Hint</mat-hint>\n    </mat-form-field>\n  </div>\n\n   <!-- <div>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Niveau Formalisme</mat-label>\n      <input formControlName=\"niveauformalisme\" matInput />\n      <mat-hint style=\"color: crimson;\" *ngIf=\"false\">Hint</mat-hint>\n    </mat-form-field>\n  </div>  -->\n\n  <div>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Produit</mat-label>\n      <input formControlName=\"produit\" matInput />\n      <mat-hint style=\"color: crimson\" *ngIf=\"false\">Hint</mat-hint>\n    </mat-form-field>\n  </div>\n  <div>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Secteur</mat-label>\n      <input formControlName=\"secteur\" matInput />\n      <mat-hint style=\"color: crimson\" *ngIf=\"false\">Hint</mat-hint>\n    </mat-form-field>\n  </div>\n  <div>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Projet</mat-label>\n      <input formControlName=\"projet\" matInput />\n      <mat-hint style=\"color: crimson\" *ngIf=\"false\">Hint</mat-hint>\n    </mat-form-field>\n  </div>\n  <div>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Email</mat-label>\n      <input formControlName=\"email\" matInput />\n      <mat-hint style=\"color: crimson\" *ngIf=\"false\">Hint</mat-hint>\n    </mat-form-field>\n  </div>\n\n  <div>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Numéro RIB</mat-label>\n      <input\n        type=\"text\"\n        minlength=\"24\"\n        maxlength=\"24\"\n        formControlName=\"numrib\"\n        matInput\n      />\n      <mat-hint style=\"color: crimson\" *ngIf=\"false\">Hint</mat-hint>\n    </mat-form-field>\n  </div>\n  <!-- <p>{{personne.numtiers}}</p>\n<div>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>numtiers</mat-label>\n      <input [(ngModel)]=\"\" matInput />\n      <mat-hint style=\"color: crimson;\" *ngIf=\"false\">Hint</mat-hint>\n    </mat-form-field>\n  </div> -->\n\n  <!-- <div>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Quartier</mat-label>\n      <input formControlName=\"quartier\" matInput />\n      <mat-hint style=\"color: crimson;\" *ngIf=\"false\">Hint</mat-hint>\n    </mat-form-field>\n  </div> -->\n\n  <!-- <div>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>rue</mat-label>\n      <input formControlName=\"rue\" matInput />\n      <mat-hint style=\"color: crimson;\" *ngIf=\"false\">Hint</mat-hint>\n    </mat-form-field>\n  </div> -->\n\n  <!-- <p>{{personne.source}}</p>\n<div>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Identifiant</mat-label>\n      <input [(ngModel)]=\"\" matInput />\n      <mat-hint style=\"color: crimson;\" *ngIf=\"false\">Hint</mat-hint>\n    </mat-form-field>\n  </div> -->\n\n  <div>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Statut de Traitement</mat-label>\n      <mat-select formControlName=\"statutTraitement\">\n        <mat-option\n          *ngFor=\"let status of statusTraitement\"\n          [value]=\"status.statut\"\n        >\n          {{ status.statut }}\n        </mat-option>\n      </mat-select>\n      <mat-hint style=\"color: crimson\" *ngIf=\"isHintStatutTraitement\">{{\n        HintStatutTraitement\n      }}</mat-hint>\n    </mat-form-field>\n  </div>\n\n  <div>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Date Rendez-Vous</mat-label>\n      <input\n        formControlName=\"daterendezvous\"\n        matInput\n        [matDatepicker]=\"daterendezvouspicker\"\n      />\n      <mat-datepicker-toggle\n        matSuffix\n        [for]=\"daterendezvouspicker\"\n      ></mat-datepicker-toggle>\n      <mat-datepicker #daterendezvouspicker></mat-datepicker>\n      <mat-hint style=\"color: crimson\" *ngIf=\"false\">Hint</mat-hint>\n    </mat-form-field>\n  </div>\n  <!-- <p>{{personne.typeenregistrement}}</p>\n<div>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Identifiant</mat-label>\n      <input [(ngModel)]=\"\" matInput />\n      <mat-hint style=\"color: crimson;\" *ngIf=\"false\">Hint</mat-hint>\n    </mat-form-field>\n  </div> -->\n  <!-- <p>{{personne.valeurid}}</p>\n<div>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Identifiant</mat-label>\n      <input [(ngModel)]=\"\" matInput />\n      <mat-hint style=\"color: crimson;\" *ngIf=\"false\">Hint</mat-hint>\n    </mat-form-field>\n  </div> -->\n\n  <!-- <p>{{personne.personneMoraleGarantError}}</p>\n<div>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Identifiant</mat-label>\n      <input [(ngModel)]=\"\" matInput />\n      <mat-hint style=\"color: crimson;\" *ngIf=\"false\">Hint</mat-hint>\n    </mat-form-field>\n  </div> -->\n  <!-- <p>{{personne.personneMoraleError}}</p>\n<div>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Identifiant</mat-label>\n      <input [(ngModel)]=\"\" matInput />\n      <mat-hint style=\"color: crimson;\" *ngIf=\"false\">Hint</mat-hint>\n    </mat-form-field>\n  </div> -->\n  <!-- <p>{{personne.personnePhysiqueError}}</p>\n<div>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Identifiant</mat-label>\n      <input [(ngModel)]=\"\" matInput />\n      <mat-hint style=\"color: crimson;\" *ngIf=\"false\">Hint</mat-hint>\n    </mat-form-field>\n  </div> -->\n  <!--\n<ul *ngFor=\"let log of logs\">\n    <li>{{log.champ + log.annomalie}}</li>\n</ul>\n-->\n<div class=\"buttons\">\n  <!-- <button (click)=\"openDialog(personne.valeurid)\" mat-raised-button >\n        Affecter Agence\n    </button> -->\n  <!-- <button *ngIf=\"personne.resultatTraitement !='nouvelle'\" (click)=\"openDialogSecond(personne.valeurid)\" mat-raised-button >\n      Affecter Agent\n    </button>\n    <button *ngIf=\"personne.resultatTraitement !='nouvelle'\" (click)=\"getStatut(personne.numtiers, personne.codegestionnaire)\"\n        mat-raised-button >\n         Statut Demande\n    </button>\n    <button *ngIf=\"personne.resultatTraitement !='nouvelle'\" (click)=\"sendToEvolan(personne)\" mat-raised-button >\n        Envoyer à  Evolan\n    </button> -->\n    <br>\n  <button\n    [disabled]=\"form.invalid && statusTraitement === 'Intéressé'\"\n    (click)=\"sendToEvolan()\"\n    mat-raised-button\n    color=\"warn\"\n  >\n    Valider\n  </button>\n  <!-- <button (click)=\"openDialogResultatTraitement(personne.valeurid)\" mat-raised-button >\n       Resultat Traitement\n    </button> -->\n\n  <a mat-raised-button [href]=\"url\">Appeler</a>\n</div>\n</form>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './pages/login/login.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {MatTableExporterModule } from 'mat-table-exporter';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatListModule } from '@angular/material/list';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { HomeComponent } from './pages/home/home.component';\nimport { MainNavComponent } from './components/main-nav/main-nav.component';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { PersonnePhysiqueComponent } from './components/personne-physique/personne-physique.component';\nimport { PersonneMoraleComponent } from './components/personne-morale/personne-morale.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule,HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { TokenInterceptorService } from './services/token-interceptor.service';\nimport {MatNativeDateModule} from '@angular/material/core';\nimport { RegisterComponent } from './pages/register/register.component';\nimport { PersonnePhysiqueGestionnaireComponent } from './components/personne-physique-gestionnaire/personne-physique-gestionnaire.component';\nimport { PersonneMoraleGestionnaireComponent } from './components/personne-morale-gestionnaire/personne-morale-gestionnaire.component';\nimport { PersonneDetailsComponent } from './components/personne-details/personne-details.component';\nimport { DialogComponent } from './components/dialog/dialog.component';\nimport { DialogSecondComponent } from './components/dialog-second/dialog-second.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { ResultatTraitementComponent } from './components/resultat-traitement/resultat-traitement.component';\nimport {SafeHtmlPipe} from './santi.pipe'\n\nconst MaterialAngularModules = [\n  MatCheckboxModule,\n  MatButtonModule,\n  MatInputModule,\n  MatAutocompleteModule,\n  MatDatepickerModule,\n  MatFormFieldModule,\n  MatRadioModule,\n  MatSelectModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatMenuModule,\n  MatSidenavModule,\n  MatToolbarModule,\n  MatListModule,\n  MatGridListModule,\n  MatCardModule,\n  MatStepperModule,\n  MatTabsModule,\n  MatExpansionModule,\n  MatButtonToggleModule,\n  MatChipsModule,\n  MatIconModule,\n  MatProgressSpinnerModule,\n  MatProgressBarModule,\n  MatDialogModule,\n  MatTooltipModule,\n  MatSnackBarModule,\n  MatTableModule,\n  MatSortModule,\n  MatPaginatorModule,\n  MatNativeDateModule\n];\n\n@NgModule({\n  declarations: [AppComponent, LoginComponent, HomeComponent, MainNavComponent, PersonnePhysiqueComponent, PersonneMoraleComponent, RegisterComponent, PersonnePhysiqueGestionnaireComponent, PersonneMoraleGestionnaireComponent, PersonneDetailsComponent, DialogComponent, DialogSecondComponent, ResultatTraitementComponent, SafeHtmlPipe],\n  imports: [MatTableExporterModule, HttpClientModule,BrowserModule,FormsModule,ReactiveFormsModule, AppRoutingModule, BrowserAnimationsModule, MaterialAngularModules, LayoutModule, MatToolbarModule, MatButtonModule, MatSidenavModule, MatIconModule, MatListModule, NgbModule],\n  providers: [{\n    provide:HTTP_INTERCEPTORS,\n    useClass:TokenInterceptorService,\n    multi:true\n  }],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\ndeclare var window: any;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DatabaseService {\n  Database: any;\n  organismes: any;\n  agences: any;\n  CodePostales: any;\n  constructor(private http: HttpClient) {\n    if (window.openDatabase !== undefined) {\n      const db = window.openDatabase(\n        'OpenDataDB.db',\n        '1.0',\n        'DEV',\n        100 * 1024 * 1024\n      );\n      this.Database = db;\n    }\n    this.http\n    .get('https://192.168.140.30:3132/api/getCodePostales')\n    .subscribe((res: any) => {\n      this.CodePostales = res.results;\n      if (window.openDatabase === undefined) {\n        localStorage.setItem('CodePostales', JSON.stringify(this.CodePostales));\n      } else {\n        const db = window.openDatabase(\n          'OpenDataDB.db',\n          '1.0',\n          'DEV',\n          100 * 1024 * 1024\n        );\n        this.Database = db;\n        this.InsertCodePostalVille(this.CodePostales);\n      }\n    });\n    this.http\n      .get('https://192.168.140.30:3132/api/getListOrganisme')\n      .subscribe((res: any) => {\n        this.organismes = res;\n        if (window.openDatabase === undefined) {\n          localStorage.setItem('organismes', JSON.stringify(this.organismes));\n        } else {\n          const db = window.openDatabase(\n            'OpenDataDB.db',\n            '1.0',\n            'DEV',\n            100 * 1024 * 1024\n          );\n          this.Database = db;\n          this.InsertOrganisme(this.organismes);\n        }\n      });\n    this.http\n      .get('https://192.168.140.30:3132/api/getListALLAgence')\n      .subscribe((res: any) => {\n        this.agences = res;\n        if (window.openDatabase === undefined) {\n          localStorage.setItem('agences', JSON.stringify(this.agences));\n        } else {\n          const db = window.openDatabase(\n            'OpenDataDB.db',\n            '1.0',\n            'DEV',\n            100 * 1024 * 1024\n          );\n          this.Database = db;\n          this.InsertAgence(this.agences);\n        }\n      });\n  }\n  InsertAgence(agences) {\n    this.Database.transaction((SQLtransaction) => {\n      const CreationQuery =\n        \"CREATE TABLE IF NOT EXISTS 'agences' (codeorganisme text,codeagence text PRIMARY KEY,agence text)\";\n      SQLtransaction.executeSql(\n        CreationQuery,\n        [],\n        (transaction, resultSet) => {\n          agences.forEach((agence) => {\n            const InsertionQuery = `REPLACE into 'agences' (codeorganisme, codeagence, agence)  values('${agence.codeorganisme}','${agence.codeagence}','${agence.agence}' )`;\n            SQLtransaction.executeSql(\n              InsertionQuery,\n              [],\n              (transaction, resultSet) => {},\n              (transaction, error) => {\n                console.log('Error inserting agences', error);\n              }\n            );\n          });\n        },\n        (transaction, error) => {\n          console.log('Error creating agences', error);\n        }\n      );\n    });\n  }\n  InsertOrganisme(organismes) {\n    this.Database.transaction((SQLtransaction) => {\n      const CreationQuery =\n        \"CREATE TABLE IF NOT EXISTS 'organismes' (codeorganisme text PRIMARY KEY,organisme text)\";\n      SQLtransaction.executeSql(\n        CreationQuery,\n        [],\n        (transaction, resultSet) => {\n          organismes.forEach((organisme) => {\n            const InsertionQuery = `REPLACE into 'organismes' (codeorganisme, organisme)  values('${organisme.codeorganisme}','${organisme.organisme}' )`;\n            SQLtransaction.executeSql(\n              InsertionQuery,\n              [],\n              (transaction, resultSet) => {},\n              (transaction, error) => {\n                console.log('Error inserting organismes', error);\n              }\n            );\n          });\n        },\n        (transaction, error) => {\n          console.log('Error inserting organismes', error);\n        }\n      );\n    });\n  }\n\n  getOrganismes() {\n    return new Promise((resolve, reject) => {\n      if (this.Database === undefined) {\n        resolve(JSON.parse(localStorage.getItem('organismes')))\n      }else{\n        this.Database.transaction((SQLtransaction) => {\n          const GettingQuery = 'select codeorganisme, organisme from organismes;';\n          SQLtransaction.executeSql(\n            GettingQuery,\n            [],\n            (transaction, resultSet) => {\n              resolve(resultSet);\n            },\n            (transaction, error) => {\n              console.log('Error getting organismes', error);\n              reject(error);\n            }\n          );\n        });\n      }\n    });\n  }\n  getAgenceByOrganisme(organisme) {\n    return new Promise((resolve, reject) => {\n      if (this.Database === undefined){\n        let agences:any[] = JSON.parse(localStorage.getItem('agences'))\n        let filtredAgences = agences.filter(agence=>agence.codeorganisme===organisme)\n        resolve(filtredAgences)\n      }else{\n        this.Database.transaction((SQLtransaction) => {\n          const GettingQuery = `select codeagence, agence from agences where codeorganisme='${organisme}';`;\n          SQLtransaction.executeSql(\n            GettingQuery,\n            [],\n            (transaction, resultSet) => {\n              resolve(resultSet);\n            },\n            (transaction, error) => {\n              console.log(\n                `Error getting agence by organisme ${organisme}`,\n                error\n              );\n              reject(error);\n            }\n          );\n        }); \n      }\n    });\n  }\n\n  InsertCodePostalVille(data) {\n    this.Database.transaction((SQLtransaction) => {\n      const CreationQuery =\n        `CREATE TABLE IF NOT EXISTS villecodepostale (\n          'id' INT NOT NULL AUTO_INCREMENT,\n          'ville' VARCHAR(45) NULL DEFAULT NULL,\n          'codePostale' VARCHAR(45) NULL DEFAULT NULL,\n          PRIMARY KEY ('id'));`\n      SQLtransaction.executeSql(\n        CreationQuery,\n        [],\n        (transaction, resultSet) => {\n          data.forEach((row) => {\n            const InsertionQuery = `REPLACE into 'villecodepostale' (ville, codePostale)  values('${row.ville}','${row.codePostale}' )`;\n            SQLtransaction.executeSql(\n              InsertionQuery,\n              [],\n              (transaction, resultSet) => {\n                console.log('inserted')\n              },\n              (transaction, error) => {\n                console.log('Error inserting ville with there codepostales', error);\n              }\n            );\n          });\n        },\n        (transaction, error) => {\n          console.log('Error inserting ville with there codepostales', error);\n        }\n      );\n    });\n  }\n  getCodePostaleByVille(ville:string) {\n    return new Promise((resolve, reject) => {\n      if (this.Database === undefined){\n        console.log('from local storage')\n        let CodePostales:any[] = JSON.parse(localStorage.getItem('CodePostales'))\n        console.log('Ville : ', ville.toUpperCase().replace('É','E').replace('È','E'))\n        let filtredCodePostales = CodePostales.filter(row=>row.ville===ville.toUpperCase().replace('É','E').replace('È','E'))\n        resolve(filtredCodePostales)\n      }else{\n        console.log('from local database ')\n        this.Database.transaction((SQLtransaction) => {\n          const GettingQuery = `select codePostal from villecodepostale where ville='${ville}';`;\n          SQLtransaction.executeSql(\n            GettingQuery,\n            [],\n            (transaction, resultSet) => {\n              resolve(resultSet);\n            },\n            (transaction, error) => {\n              console.log(\n                `Error getting codePostal by ville : ${ville}`,\n                error\n              );\n              reject(error);\n            }\n          );\n        });\n      } \n    });\n  }\n}\n","<mat-sidenav-container class=\"sidenav-container\">\n    <mat-sidenav #drawer class=\"sidenav\" fixedInViewport [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\n        [mode]=\"(isHandset$ | async) ? 'over' : 'side'\">\n        <mat-toolbar>\n            <button type=\"button\" aria-label=\"Toggle sidenav\" mat-icon-button (click)=\"drawer.toggle()\"\n                *ngIf=\"isHandset$ | async\">\n                <mat-icon aria-label=\"Side nav toggle icon\">close</mat-icon>\n            </button>\n            <span style=\"color: darkblue\">Menu</span>\n            \n        </mat-toolbar>\n        <mat-nav-list>\n            <!-- <a *ngIf=\"isCLIENT\" (click)=\"drawer.toggle()\" mat-list-item [routerLink]=\"['pp']\">\n                <mat-icon>person</mat-icon> Personne Physique</a>\n            <a *ngIf=\"isCLIENT\" (click)=\"drawer.toggle()\" mat-list-item [routerLink]=\"['pm']\">\n                <mat-icon>domain</mat-icon> Personne Morale</a>\n            <a *ngIf=\"isBO\" (click)=\"drawer.toggle()\" mat-list-item [routerLink]=\"['ppg']\">\n                <mat-icon>person</mat-icon> Personne Physique</a> -->\n            <!-- <a *ngIf=\"isBO\" (click)=\"drawer.toggle()\" mat-list-item [routerLink]=\"['pmg']\">\n                <mat-icon>person</mat-icon> Personne Morale</a> -->\n        </mat-nav-list>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"sidenav-content\">\n        <mat-toolbar color=\"warn\">\n            <button type=\"button\" aria-label=\"Toggle sidenav\" mat-icon-button (click)=\"drawer.toggle()\"\n                *ngIf=\"isHandset$ | async\">\n                <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\n            </button>\n            <button *ngIf=\"isHome\" class=\"goback\" (click)=\"back()\"><mat-icon>arrow_back</mat-icon></button>\n            <span class=\"slag\">Al Amana OpenDATA</span>\n            <span class=\"spacer\"></span>\n            <!-- <a *ngIf=\"isCLIENT\" [routerLink]=\"['pp']\" [ngClass]=\"{ hidden: isHandset$ | async }\" class=\"mat-button mat-button-base\" aria-disabled=\"false\"><span class=\"mat-button-wrapper\">Personne Physique</span\n        ><span class=\"mat-button-focus-overlay\"></span\n      ></a>\n            <a *ngIf=\"isCLIENT\" [routerLink]=\"['pm']\" [ngClass]=\"{ hidden: isHandset$ | async }\" class=\"mat-button mat-button-base\" aria-disabled=\"false\"><span class=\"mat-button-wrapper\">Personne Morale</span\n        ><span class=\"mat-button-focus-overlay\"></span\n      ></a>\n            <a *ngIf=\"isBO\" [routerLink]=\"['ppg']\" [ngClass]=\"{ hidden: isHandset$ | async }\" class=\"mat-button mat-button-base\" aria-disabled=\"false\"><span class=\"mat-button-wrapper\">Personne Physique</span\n        ><span class=\"mat-button-focus-overlay\"></span\n      ></a> -->\n            <!-- <a *ngIf=\"isBO\" [routerLink]=\"['pmg']\" [ngClass]=\"{ hidden: isHandset$ | async }\" class=\"mat-button mat-button-base\" aria-disabled=\"false\"><span class=\"mat-button-wrapper\">Personne Morale</span\n        ><span class=\"mat-button-focus-overlay\"></span\n      ></a> -->\n            <button (click)=\"logout()\" mat-icon-button>\n                <mat-icon>exit_to_app</mat-icon>\n            </button>\n        </mat-toolbar>\n        <ng-content></ng-content>\n    </mat-sidenav-content>\n</mat-sidenav-container>","import { Component } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-main-nav',\n  templateUrl: './main-nav.component.html',\n  styleUrls: ['./main-nav.component.scss'],\n})\nexport class MainNavComponent {\n  // isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n  //   .pipe(\n  //     map(result => result.matches),\n  //     shareReplay()\n  //   );\n  isHandset$ = false;\n  role: string;\n  isBO: boolean;\n  isAGENT: boolean;\n  isCLIENT: boolean;\n  isHome: boolean = true;\n\n  constructor(\n    private breakpointObserver: BreakpointObserver,\n    private route: Router,\n    private location: Location\n  ) {\n    this.isHome = this.route.url !== '/home';\n    this.role = localStorage.getItem('role');\n    console.log('isBO: ', this.role === 'BO');\n    this.isBO = this.role === 'BO';\n    this.isAGENT = this.role === 'AGENT';\n    this.isCLIENT = this.role === 'CLIENT';\n  }\n\n  back(): void {\n    if (this.route.url.startsWith('/home')) {\n      this.route.routeReuseStrategy.shouldReuseRoute = () => false;\n      this.route.navigate(['home']).then(()=>this.route.onSameUrlNavigation = 'reload')\n    }\n  }\n  async logout() {\n    await localStorage.clear();\n    console.log('cleared');\n    setTimeout(() => {\n      this.route.navigate(['login']);\n    }, 1000);\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CallServerService {\n\n  constructor(private http:HttpClient) { }\n  setAgence(data){\n    return this.http.post('https://192.168.140.30:3132/api/setAgence',data)\n  }\n  setAgenceEtAgent(data){\n    return this.http.post('https://192.168.140.30:3132/api/setAgenceEtAgent',data)\n  }\n  getStatus(data){\n    return this.http.post('http://localhost:3737/users/getStatut',data)\n  }\n  sendToEvolan(data){\n    return this.http.post('https://192.168.140.30:3132/api/ajouterPersonnePhysiqueRS',data)\n  }\n  updatePersonne(data){\n    return this.http.post('https://192.168.140.30:3132/api/updatePersonne',data)\n  }\n  setResutlatTraitement(data){\n    return this.http.post('https://192.168.140.30:3132/api/setResultatTraitement', data)\n  }\n  getAgences(data){\n    return this.http.post('https://192.168.140.30:3132/api/getAgencesRS', data)\n  }\n  getCodeAgence(data){\n    return this.http.post('https://192.168.140.30:3132/api/getCodeAgence', data)\n  }\n  getCodePostalParVille(data){\n    return this.http.post('https://192.168.140.30:3132/api/getCodePostalParVille', data)\n  }\n  // getLogs(data){\n  //   return this.http.post('https://192.168.140.30:3132/api/getLogs',data)\n  // }\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { PpDataService } from 'src/app/services/ppdata.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DialogComponent } from '../dialog/dialog.component';\nimport { DialogSecondComponent } from '../dialog-second/dialog-second.component';\nimport { CallServerService } from 'src/app/services/call-server.service';\nimport { ResultatTraitementComponent } from '../resultat-traitement/resultat-traitement.component';\n\n@Component({\n  selector: 'app-personne-physique-gestionnaire',\n  templateUrl: './personne-physique-gestionnaire.component.html',\n  styleUrls: ['./personne-physique-gestionnaire.component.scss'],\n})\nexport class PersonnePhysiqueGestionnaireComponent implements OnInit {\n  status = [\n    { value: '', viewValue: 'Tous' },\n    { value: 'encours', viewValue: 'En Cours' },\n    { value: 'valide', viewValue: 'Validé' },\n    { value: 'rejete', viewValue: 'Rejeté' },\n    { value: 'decaisse', viewValue: 'Decaissé' },\n  ];\n  statusTraitement = [\n    {statut:'Hors Zone'},\n    {statut:'Erronée'}\n  ]\n  selectedValue: string = '';\n  selectedValueSearch!: string;\n  displayedColumns: string[] = [\n    'numtiers',\n    'numerodossier',\n    'resultatTraitement',\n    'nom',\n    'prenom',\n    'telgsm',\n    'ncin',\n    'statuttraitement',\n    'valeurid',\n    'codeagencecible',\n    'erreur',\n    'options',\n  ];\n  dataSource: any;\n  @ViewChild(MatSort) sort!: MatSort;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  focused: boolean = false;\n  agences: any;\n  agent: any;\n  selectedAgence: any;\n  dataFromDialog: any;\n  alert: any;\n  isAlert: boolean = false;\n  selectedStatut: any;\n  constructor(\n    public callServer: CallServerService,\n    public dialog: MatDialog,\n    private PpDataService: PpDataService,\n    private activatedRoute: ActivatedRoute,\n    private route: Router\n  ) {\n    this.agences = this.activatedRoute.snapshot.data['agences'];\n    this.activatedRoute.data.subscribe((res : any) => {\n      let personnes = res.pps\n      personnes.forEach(element => {\n          element.erreur = element.personnePhysiqueError?1:0\n      });\n      this.dataSource = new MatTableDataSource(personnes);\n    });\n  }\n\n  ngOnInit(): void {}\n  reloadComponent() {\n    let currentUrl = this.route.url;\n    this.route.routeReuseStrategy.shouldReuseRoute = () => false;\n    this.route.onSameUrlNavigation = 'reload';\n    this.route.navigate([currentUrl]);\n  }\n\n  openDialog(valeurid): void {\n    const dialogRef = this.dialog.open(DialogComponent, {\n      width: '350px',\n      data: { agences: this.agences },\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      console.log('The dialog was closed');\n      this.selectedAgence = result;\n      let data = {\n        codeagencecible: result,\n        valeurid,\n      };\n      this.callServer.setAgence(data).subscribe(\n        (res) => {\n          console.log(res);\n        },\n        (err) => {\n          if (err.status === 441) {\n            this.reloadComponent();\n          }\n        }\n      );\n    });\n  }\n  openDialogResultatTraitement(valeurid): void {\n    const dialogRef = this.dialog.open(ResultatTraitementComponent, {\n      width: '350px',\n      data:this.statusTraitement,\n    });\n  \n    dialogRef.afterClosed().subscribe((result) => {\n      console.log('The dialog was closed');\n      this.selectedStatut = result;\n      let data = {\n        resultatTraitement: result,\n        valeurid,\n      };\n      this.callServer.setResutlatTraitement(data).subscribe(\n        (res) => {\n          this.reloadComponent();\n          console.log(res);\n        },\n        (err) => {\n          \n            console.log(err)\n          \n        }\n      );\n    });\n  }\n\n\n  openDialogSecond(valeurid): void {\n    const dialogRef = this.dialog.open(DialogSecondComponent, {\n      width: '350px',\n      data: { agences: this.agences },\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      console.log('The dialog was closed');\n      this.dataFromDialog = result;\n      console.log(result)\n      let data = {\n        codeagencecible: result.selectedAgence,\n        valeurid,\n        codegestionnairecible: result.selectedAgent,\n      };\n      this.callServer.setAgenceEtAgent(data).subscribe(\n        (res) => {\n          console.log(res);\n        },\n        (err) => {\n          if (err.status === 443) {\n            this.reloadComponent();\n          }\n          else alert('error')\n        }\n      );\n    });\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.sort = this.sort;\n    this.dataSource.paginator = this.paginator;\n  }\n\n  onChange() {\n    console.log(this.selectedValue);\n    this.dataSource.filter = this.selectedValue.trim().toLowerCase();\n  }\n\n  makeItFocused(e: any) {\n    this.focused = e.tab.isActive;\n  }\n  keyDownFunction(event: any) {\n    if (event.keyCode == 13) {\n      this.searchByCode();\n    }\n  }\n\n  searchByCode() {\n    console.log(this.selectedValueSearch);\n  }\n  send(personne) {\n    this.route.navigate(['home/details'], { queryParams: personne });\n  }\n\n  getStatut(numtiers, codegestionnaire){\n    let data = {\n      numTier:numtiers,\n      codeGest:codegestionnaire\n    }\n    this.callServer.getStatus(data).subscribe((res:any)=>{\n      this.isAlert = true\n      this.alert = res.EMP.Demande[0].statut\n    },(err)=>{\n      console.log(err)\n    })\n  }\n\n  sendToEvolan(personne){\n    this.callServer.sendToEvolan(personne).subscribe((res:any)=>{\n      let body = {\n        data:res,\n        valeurid:personne.valeurid\n      }\n      console.log('body to send',body)\n      // this.callServer.updatePersonne(body).subscribe((res)=>{\n      //   console.log(res)\n      //   this.reloadComponent();\n      // }, (err)=>{\n      //   console.log('error from 3131',err)\n      // })\n    },(err)=>{\n      console.log('error from 3737',err)\n    })\n  }\n  \n}\n","<mat-tab-group class=\"one\" (selectedTabChange)=\"makeItFocused($event)\" color=\"warn\">\n    <!-- Personne Physique  -->\n\n    <mat-tab label=\"Personne Physique\">\n        <!-- Filter by statut-->\n        <mat-form-field class=\"filter\" appearance=\"fill\">\n            <mat-label>Filtrer par statut</mat-label>\n            <mat-select [(ngModel)]=\"selectedValue\" (selectionChange)=\"onChange()\">\n                <mat-option *ngFor=\"let statut of status\" [value]=\"statut.value\">\n                    {{ statut.viewValue }}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n        <ngb-alert *ngIf=\"isAlert\" type=\"danger\">{{alert}}</ngb-alert>\n        <!--  Table-->\n        <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\" matSort>\n\n            <ng-container matColumnDef=\"numtiers\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>N° TIERS.</th>\n                <td mat-cell *matCellDef=\"let element\">{{ element.numtiers }}</td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"numerodossier\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>N° Dossier.</th>\n                <td mat-cell *matCellDef=\"let element\">{{ element.numerodossier }}</td>\n            </ng-container>\n            <ng-container matColumnDef=\"resultatTraitement\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Résultat Traitement.</th>\n                <td mat-cell *matCellDef=\"let element\">{{ element.resultatTraitement }}</td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"nom\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Nom.</th>\n                <td mat-cell *matCellDef=\"let element\">{{ element.nom }}</td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"prenom\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Prénom.</th>\n                <td mat-cell *matCellDef=\"let element\">{{ element.prenom }}</td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"ncin\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>CIN</th>\n                <td mat-cell *matCellDef=\"let element\">{{ element.ncin }}</td>\n            </ng-container>\n            <ng-container matColumnDef=\"telgsm\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Tel</th>\n                <td mat-cell *matCellDef=\"let element\">{{ element.telgsm }}</td>\n            </ng-container>\n            <ng-container matColumnDef=\"statuttraitement\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Statut</th>\n                <td mat-cell *matCellDef=\"let element\">\n                    {{ element.statuttraitement }}\n                </td>\n            </ng-container>\n            <ng-container matColumnDef=\"valeurid\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>ValeurID</th>\n                <td mat-cell *matCellDef=\"let element\">{{ element.valeurid }}</td>\n            </ng-container>\n            <ng-container matColumnDef=\"codeagencecible\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Agence</th>\n                <td mat-cell *matCellDef=\"let element\">\n                    {{ element.codeagencecible }}\n                </td>\n            </ng-container>\n            <ng-container matColumnDef=\"erreur\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Erreur</th>\n                <td mat-cell *matCellDef=\"let element\">{{ element.erreur }}</td>\n            </ng-container>\n            <ng-container matColumnDef=\"options\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>options</th>\n                <td mat-cell *matCellDef=\"let element\">\n                    <!-- <button (click)=\"openDialog(element.valeurid)\" class=\"btn\" mat-raised-button color=\"warn\">\n                        Set Agence\n                    </button>\n                    <button (click)=\"openDialogSecond(element.valeurid)\" class=\"btn\" mat-raised-button color=\"warn\">\n                        Set Agent\n                    </button>\n                    <button (click)=\"getStatut(element.numtiers, element.codegestionnaire)\" class=\"btn\"\n                        mat-raised-button color=\"warn\">\n                        Get Statut\n                    </button>\n                    <button (click)=\"sendToEvolan(element)\" class=\"btn\" mat-raised-button color=\"warn\">\n                        Send To Evolan\n                    </button>\n                    <button (click)=\"openDialogResultatTraitement(element.valeurid)\" class=\"btn\" mat-raised-button color=\"warn\">\n                        Set Resultat Traitement\n                    </button> -->\n                    <button (click)=\"send(element)\" class=\"btn\" mat-raised-button color=\"warn\">\n                        Details\n                    </button>\n                </td>\n            </ng-container>\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n        </table>\n        <mat-paginator [pageSizeOptions]=\"[5, 10, 15]\" showFirstLastButtons></mat-paginator>\n    </mat-tab>\n</mat-tab-group>","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { DatabaseService } from 'src/app/services/database.service';\ndeclare var window:any;\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss'],\n})\nexport class RegisterComponent implements OnInit {\n  hide = true;\n  data: FormGroup;\n  organismes: any[]=[];\n  agences: any[]=[];\n  constructor(\n    private fb: FormBuilder,\n    private databaseService: DatabaseService\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.data = this.fb.group(\n      {\n        organisme: ['', Validators.required],\n        agence: ['', Validators.required],\n        nom: [''],\n        email: ['', Validators.required],\n        password: ['', Validators.required],\n        confirmedPassword: ['', Validators.required],\n      },\n      { validators: this.checkPasswords }\n    );\n  }\n  ngAfterViewInit(){\n    this.databaseService\n    .getOrganismes()\n    .then((res: any) => {\n      if (window.openDatabase === undefined){\n        this.organismes = res\n      }else{\n        for (let i = 0; i < res.rows.length; i++) {\n          this.organismes.push(res.rows.item(i));\n        }\n      }\n      console.log('result getting organismes', res);\n\n    })\n    .catch((error) => {\n      console.log('error getting organismes', error);\n    });\n  }\n  checkPasswords(group: FormGroup) {\n    // here we have the 'passwords' group\n    const password = group.get('password').value;\n    const confirmedPassword = group.get('confirmedPassword').value;\n    return password === confirmedPassword ? null : { notSame: true };\n  }\n\n  onSubmit() {\n    console.log(this.data.hasError('notSame'));\n  }\n\n  changed() {\n    this.agences = []\n    let organisme = this.data.get('organisme').value\n    this.databaseService\n      .getAgenceByOrganisme(organisme)\n      .then((res: any) => {\n        if (window.openDatabase === undefined){\n          this.agences = res\n        }else{\n          for (let i = 0; i < res.rows.length; i++) {\n            this.agences.push(res.rows.item(i));\n          }\n        }\n        console.log(`result of selecting ${organisme} :`,res)\n      })\n      .catch((error) => {\n        console.log('error getting agences by organisme ', error);\n      });\n  }\n}\n","<div class=\"on_top_of_body\">\n  <div class=\"form_container\">\n    <div class=\"title\">\n      <h1>Enregistrement</h1>\n    </div>\n    <form [formGroup]=\"data\" (ngSubmit)=\"onSubmit()\">\n      <div class=\"fields-container fields-container-of-three\">\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Organisme</mat-label>\n          <mat-select formControlName=\"organisme\" (selectionChange)=\"changed()\">\n            <mat-option *ngFor=\"let organisme of organismes\" [value]=\"organisme.codeorganisme\">\n              {{ organisme.organisme }}\n            </mat-option>\n          </mat-select>\n          <mat-hint *ngIf=\"false\">Hint</mat-hint>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Agence</mat-label>\n          <mat-select formControlName=\"agence\">\n            <mat-option *ngFor=\"let agence of agences\" [value]=\"agence.codeagence\">\n              {{ agence.agence}}\n            </mat-option>\n          </mat-select>\n          <mat-hint *ngIf=\"false\">Hint</mat-hint>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Nom</mat-label>\n          <input formControlName=\"nom\" matInput placeholder=\"Nom\" />\n          <mat-hint *ngIf=\"false\">Hint</mat-hint>\n        </mat-form-field>\n      </div>\n      <div>\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Email</mat-label>\n          <input formControlName=\"email\" matInput placeholder=\"Email\" />\n          <mat-hint *ngIf=\"false\">Hint</mat-hint>\n        </mat-form-field>\n      </div>\n      <div>\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Password</mat-label>\n          <input\n            formControlName=\"password\"\n            matInput\n            [type]=\"hide ? 'password' : 'text'\"\n            placeholder=\"Mot de passe\"\n          />\n          <button\n            mat-icon-button\n            matSuffix\n            (click)=\"hide = !hide\"\n            [attr.aria-label]=\"'Hide password'\"\n            [attr.aria-pressed]=\"hide\"\n          >\n            <mat-icon>{{ hide ? \"visibility_off\" : \"visibility\" }}</mat-icon>\n          </button>\n        </mat-form-field>\n      </div>\n      <div>\n        <mat-form-field class=\"passwordConfirmation\" appearance=\"fill\">\n          <mat-label>Confirmation</mat-label>\n          <input\n            formControlName=\"confirmedPassword\"\n            matInput\n            [type]=\"hide ? 'password' : 'text'\"\n            placeholder=\"confirmer le mot de passe\"\n          />\n          <mat-hint *ngIf=\"data.hasError('notSame')\">\n            Passwords do not match\n          </mat-hint>\n          <button\n            mat-icon-button\n            matSuffix\n            (click)=\"hide = !hide\"\n            [attr.aria-label]=\"'Hide password'\"\n            [attr.aria-pressed]=\"hide\"\n          >\n            <mat-icon>{{ hide ? \"visibility_off\" : \"visibility\" }}</mat-icon>\n          </button>\n        </mat-form-field>\n      </div>\n\n      <p class=\"login\">\n        <button mat-raised-button type=\"submit\">\n          <h1>Enregistrer</h1>\n        </button>\n      </p>\n\n      <p class=\"connecter\"><a href=\"/login\">Se connecter</a></p>\n    </form>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-personne-morale',\n  templateUrl: './personne-morale.component.html',\n  styleUrls: ['./personne-morale.component.scss']\n})\nexport class PersonneMoraleComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-tab-group class=\"two\" color=\"warn\">\n    <mat-tab label=\"Personne Morale \"> Personne Morale </mat-tab>\n    <mat-tab label=\"Ajouter PM\"> Ajouter PM </mat-tab>\n  </mat-tab-group>","import { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree,\n  Router,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NotAuthGuard implements CanActivate {\n  constructor(private authService: AuthService, private route: Router) {}\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree>\n    | boolean\n    | UrlTree {\n    let token = this.authService.getToken();\n    if (token) {\n      this.route.navigate(['home'])\n      return false;\n    } else {\n      return true;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(private http:HttpClient) { }\n\n  login(credentials){\n    return this.http.post('https://192.168.140.30:3132/api/login',credentials)\n  }\n  getToken(){\n    return localStorage.getItem('token')\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router'\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { DatabaseService } from './database.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PmDataService implements Resolve<Object>{\r\n  constructor(private http:HttpClient, private db:DatabaseService) { }\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): any[] | Observable<Object> | Promise<any[]> {\r\n    return null\r\n  }\r\n}\r\n","import { Component, Inject, OnInit } from '@angular/core';\nimport {MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\n\n\n@Component({\n  selector: 'app-resultat-traitement',\n  templateUrl: './resultat-traitement.component.html',\n  styleUrls: ['./resultat-traitement.component.scss']\n})\nexport class ResultatTraitementComponent implements OnInit {\n  data:any;\n  selectedStatus:string\n  constructor(\n    public dialogRef: MatDialogRef<ResultatTraitementComponent>,\n    @Inject(MAT_DIALOG_DATA) public status) {\n      this.data = status\n    }\n\n  ngOnInit(): void {\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n","<h1 mat-dialog-title>Choisir le Statut</h1>\n<div mat-dialog-content>\n    <mat-form-field appearance=\"fill\">\n        <mat-label>Statut de Traitement</mat-label>\n        <mat-select [(ngModel)]=\"selectedStatus\">\n            <mat-option *ngFor=\"let statut of data\" [value]='statut.statut'>\n                {{statut.statut}}\n            </mat-option>\n        </mat-select>\n    </mat-form-field>\n</div>\n<div mat-dialog-actions>\n    <button mat-button (click)=\"onNoClick()\">Annuler</button>\n    <button mat-button [mat-dialog-close]=\"selectedStatus\" cdkFocusInitial>Ok</button>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './pages/login/login.component';\nimport { HomeComponent } from './pages/home/home.component';\nimport { PersonneMoraleComponent } from './components/personne-morale/personne-morale.component';\nimport { PersonnePhysiqueComponent } from './components/personne-physique/personne-physique.component';\nimport { RegisterComponent } from './pages/register/register.component';\nimport { PersonnePhysiqueGestionnaireComponent } from './components/personne-physique-gestionnaire/personne-physique-gestionnaire.component';\nimport { PersonneMoraleGestionnaireComponent } from './components/personne-morale-gestionnaire/personne-morale-gestionnaire.component';\nimport { PpDataService } from './services/ppdata.service';\nimport { PersonneDetailsComponent } from './components/personne-details/personne-details.component';\nimport { AgenceDataService } from './services/agenceData.service';\nimport { PmDataService } from './services/pmData.service';\nimport { PmDataNewService } from './services/pmDataNew.service';\nimport { AuthGuard } from './services/auth.guard';\nimport { NotAuthGuard } from './services/not-auth.guard';\nconst role = localStorage.getItem('role');\nconsole.log('routing', role, role === 'BO');\nconst routes: Routes = [\n  {\n    path: '',\n    pathMatch: 'full',\n    redirectTo: 'login',\n  },\n  {\n    path: 'login',\n    component: LoginComponent,\n    canActivate:[NotAuthGuard]\n  },\n  {\n    path: 'home',\n    component: HomeComponent,\n    runGuardsAndResolvers: 'always',\n    children: [\n      {\n        path: '',\n        pathMatch: 'full',\n        redirectTo: 'pmg',\n      },\n      {\n        path: 'pm',\n        component: PersonneMoraleComponent,\n        runGuardsAndResolvers: 'always'\n      },\n      {\n        path: 'pp',\n        component: PersonnePhysiqueComponent,\n        runGuardsAndResolvers: 'always'\n      },\n      {\n        path: 'ppg',\n        component: PersonnePhysiqueGestionnaireComponent,\n        resolve: { pps: PpDataService, agences: AgenceDataService, ppsn:PmDataNewService },\n        runGuardsAndResolvers: 'always'\n      },\n      {\n        path: 'pmg',\n        component: PersonneMoraleGestionnaireComponent,\n        resolve: { codes: PmDataService},\n        runGuardsAndResolvers: 'always'\n      },\n      {\n        path: 'details',\n        component: PersonneDetailsComponent,\n        resolve: { villes: AgenceDataService},\n        runGuardsAndResolvers: 'always'\n      },\n    ],\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'register',\n    component: RegisterComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import {Pipe, PipeTransform} from '@angular/core';\r\nimport {DomSanitizer} from '@angular/platform-browser';\r\n \r\n@Pipe({\r\n  name: 'safeHtml'\r\n})\r\nexport class SafeHtmlPipe implements PipeTransform {\r\n \r\n  constructor(private sanitizer: DomSanitizer) {\r\n  }\r\n \r\n  transform(value: any, args?: any): any {\r\n    return this.sanitizer.bypassSecurityTrustHtml(value);\r\n  }\r\n \r\n}","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router'\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PpDataService implements Resolve<Object>{\n  constructor(private http:HttpClient) { }\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): any[] | Observable<Object> | Promise<any[]> {\n    return this.http.get('https://192.168.140.30:3132/api/getListPP')\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport 'hammerjs';\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}