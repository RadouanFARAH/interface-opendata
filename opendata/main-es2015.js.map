{"version":3,"sources":["./src/app/services/auth.guard.ts","./src/app/pages/home/home.component.ts","./src/app/pages/home/home.component.html","./src/app/services/agenceData.service.ts","./src/app/components/personne-morale-gestionnaire/personne-morale-gestionnaire.component.ts","./src/app/components/personne-morale-gestionnaire/personne-morale-gestionnaire.component.html","./src/environments/environment.ts","./src/app/components/dialog/dialog.component.ts","./src/app/components/dialog/dialog.component.html","./src/app/pages/login/login.component.ts","./src/app/pages/login/login.component.html","./src/app/components/personne-physique/personne-physique.component.ts","./src/app/components/personne-physique/personne-physique.component.html","./src/app/services/pmDataNew.service.ts","./src/app/services/token-interceptor.service.ts","./node_modules/moment/locale sync ^\\.\\/.*$","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/dialog-second/dialog-second.component.ts","./src/app/components/dialog-second/dialog-second.component.html","./src/app/components/personne-details/personne-details.component.ts","./src/app/components/personne-details/personne-details.component.html","./src/app/app.module.ts","./src/app/services/database.service.ts","./src/app/components/main-nav/main-nav.component.ts","./src/app/components/main-nav/main-nav.component.html","./src/app/services/call-server.service.ts","./src/app/components/personne-physique-gestionnaire/personne-physique-gestionnaire.component.ts","./src/app/components/personne-physique-gestionnaire/personne-physique-gestionnaire.component.html","./src/app/pages/register/register.component.ts","./src/app/pages/register/register.component.html","./src/app/components/personne-morale/personne-morale.component.ts","./src/app/components/personne-morale/personne-morale.component.html","./src/app/services/not-auth.guard.ts","./src/app/services/auth.service.ts","./src/app/services/pmData.service.ts","./src/app/components/resultat-traitement/resultat-traitement.component.ts","./src/app/components/resultat-traitement/resultat-traitement.component.html","./src/app/app-routing.module.ts","./src/app/santi.pipe.ts","./src/app/services/ppdata.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree,\n  Router,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private authService: AuthService, private route: Router) {}\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree>\n    | boolean\n    | UrlTree {\n    let token = this.authService.getToken();\n    if (token) {\n      return true;\n    } else {\n      this.route.navigate(['login']);\n      return false;\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n  public isMenuOpen: boolean = false;\n  constructor(private route:Router) { }\n\n  ngOnInit(): void {\n  }\n\n\n  logout(){\n    this.route.navigate(['login'])\n  }\n}\n","<app-main-nav>\r\n    <router-outlet></router-outlet>\r\n</app-main-nav>","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router'\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AgenceDataService implements Resolve<Object>{\n  constructor(private http:HttpClient) { }\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): any[] | Observable<Object> | Promise<any[]> {\n    return this.http.get('https://192.168.140.30:3132/api/getListVilles')\n  }\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { PmDataService } from 'src/app/services/pmData.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DialogComponent } from '../dialog/dialog.component';\nimport { DialogSecondComponent } from '../dialog-second/dialog-second.component';\nimport { CallServerService } from 'src/app/services/call-server.service';\nimport { ResultatTraitementComponent } from '../resultat-traitement/resultat-traitement.component';\nimport { PmDataNewService } from 'src/app/services/pmDataNew.service';\nimport { DatabaseService } from 'src/app/services/database.service';\n\n@Component({\n  selector: 'app-personne-morale-gestionnaire',\n  templateUrl: './personne-morale-gestionnaire.component.html',\n  styleUrls: ['./personne-morale-gestionnaire.component.scss'],\n})\nexport class PersonneMoraleGestionnaireComponent implements OnInit {\n  source = [\n    { value: 'prequalifier', viewValue: 'Demandes pré-qualifiées' },\n    { value: 'nouvelle', viewValue: 'Nouvelles demandes' },\n    { value: 'evolan', viewValue: 'Demandes traités par le réseaux' },\n  ];\n  // statustraitement = [\n  //   { value: '', viewValue: 'Tous' },\n  //   { viewValue: 'Hors zone agence', value: 'horszone' },\n  //   { viewValue: 'Erronée', value: 'erronee' },\n  //   { viewValue: 'Intéressé', value: 'interesse' },\n  //   { viewValue: 'Non intéressé', value: 'noninteresse' },\n  //   { viewValue: 'Non éligible', value: 'noneligible' },\n  //   { viewValue: 'Injoignable', value: 'injoignable' },\n  // ];\n  status = [\n    { value: '', viewValue: 'Tous' },\n    { value: 'Demande débloquée', viewValue: 'Débloquée' },\n    { value: 'Demande rejetée', viewValue: 'Rejetée' },\n    { value: 'Demande annulée', viewValue: 'Annulée' },\n  ];\n  selectedValue: string = '';\n  selectedValueSearch!: string;\n  displayedColumns: string[] = [\n    'nom',\n    'prenom',\n    'cin',\n    'telgsm',\n    'resultatTraitement',\n    'options',\n  ];\n  dataSource: any;\n  @ViewChild(MatSort) sort!: MatSort;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  focused: boolean = false;\n  agences: any;\n  agent: any;\n  sourceSelectedValue: any;\n  statutSelectedValue: any;\n  dataFromDialog: any;\n  alert: any;\n  isAlert: boolean = false;\n  statusTraitement = [\n    { statutC: '', statut: 'Tous' },\n    { statutC: 'Hors zone agence', statut: 'Hors zone agence' },\n    { statutC: 'Erronée', statut: 'Erronée' },\n    { statutC: 'Intéressé', statut: 'Intéressé' },\n    { statutC: 'Non intéressé', statut: 'Non intéressé' },\n    { statutC: 'Non éligible', statut: 'Non éligible' },\n    { statutC: 'Injoignable', statut: 'Injoignable' },\n    { statutC: 'Intéressé plustard', statut: 'Intéressé plustard' },\n  ];\n  selectedStatut: any;\n  demandesP: any;\n  isSourceSelected = false;\n  constructor(\n    public callServer: CallServerService,\n    public dialog: MatDialog,\n    private PmDataService: PmDataService,\n    private activatedRoute: ActivatedRoute,\n    private route: Router,\n    private newOrdersService: PmDataNewService,\n    private db:DatabaseService\n  ) {\n    // this.activatedRoute.data.subscribe((res) => {\n    //   console.log(res);\n    //   let data = res.codes.results\n    //   console.log('this is the data :', data)\n    // });\n  }\n  sourceChanged() {\n    this.isSourceSelected = true;\n    this.dataSource = null;\n    if (this.sourceSelectedValue === 'nouvelle') {\n      this.getNouvellesDemandes();\n    } else if (this.sourceSelectedValue === 'prequalifier') {\n      this.getDemandesPrequalifies();\n    } else if (this.sourceSelectedValue === 'evolan') {\n      this.getDemandesEvolan();\n    }\n  }\n\n  getDemandesEvolan() {\n    this.newOrdersService.getDemandesEvolan().subscribe(\n      (res: any) => {\n        console.log(res.ville);\n        let personnes = res.results;\n        this.displayedColumns = [\n          'nom',\n          'prenom',\n          'cin',\n          'telgsm',\n          'resultatTraitement',\n          'nbrappel',\n          'entry_date',\n          'agence',\n          'codeagence',\n          'montantdemande',\n          'ville',\n          'statuttraitement',\n          'options',\n        ];\n        this.dataSource = new MatTableDataSource(personnes);\n        this.dataSource.sort = this.sort;\n        this.dataSource.paginator = this.paginator;\n      },\n      (err) => (this.dataSource = null)\n    );\n  }\n  ngOnInit(): void {}\n  reloadComponent() {\n    let currentUrl = this.route.url;\n    this.route.routeReuseStrategy.shouldReuseRoute = () => false;\n    this.route.onSameUrlNavigation = 'reload';\n    this.route.navigate([currentUrl]);\n  }\n  pageSizeOptions = [5, 10, 15];\n  getNouvellesDemandes() {\n    this.newOrdersService.getNouvellesDemandes().subscribe(\n      (res: any) => {\n        let personnes = res.results;\n        console.log(personnes)\n        personnes.forEach((p) => {\n          if (!p.resultatTraitement) {\n            p.resultatTraitement = 'nouvelle';\n          }\n          p.entry_date = new Date(p.entry_date)\n        });\n        personnes.forEach((p) => {\n          this.db.getCodePostaleByVille(p.ville).then((row:any)=>{\n            if (row.length > 0)  p.codepostal = row[0].codePostale\n          })\n        });\n        this.displayedColumns = [\n          'nom',\n          'prenom',\n          'cin',\n          'telgsm',\n          'montantdemande',\n          'email',\n          'secteur',\n          // 'projet',\n          'agence',\n          'codeagence',\n          'entry_date',\n          'options',\n        ];\n        setTimeout(() => {\n          this.dataSource = new MatTableDataSource(personnes);\n          this.dataSource.sort = this.sort;\n          this.dataSource.paginator = this.paginator;\n        }, 1995);\n      },\n      (err) => (this.dataSource = null)\n    );\n  }\n  getDemandesPrequalifies() {\n    this.newOrdersService.getDemandesPrequalifies().subscribe(\n      (res: any) => {\n        console.log(res);\n        let personnes = res.msg;\n        personnes.forEach((p) => {\n          if (!p.resultatTraitement) {\n            p.resultatTraitement = 'nouvelle';\n          }\n        });\n        this.displayedColumns = [\n          'nom',\n          'prenom',\n          'cin',\n          'telgsm',\n          'resultatTraitement',\n          'nbrappel',\n          'entry_date',\n          'agence',\n          'codeagence',\n          'montantdemande',\n          'ville',\n          'valeurid',\n          'options',\n        ];\n        this.dataSource = new MatTableDataSource(personnes);\n        this.dataSource.sort = this.sort;\n        this.dataSource.paginator = this.paginator;\n      },\n      (err) => (this.dataSource = null)\n    );\n  }\n\n  openDialog(valeurid): void {\n    const dialogRef = this.dialog.open(DialogComponent, {\n      width: '350px',\n      data: { agences: this.agences },\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      console.log('The dialog was closed');\n      if (result) {\n        let data = {\n          codeagencecible: result,\n          valeurid,\n        };\n        this.callServer.setAgence(data).subscribe(\n          (res) => {\n            console.log(res);\n          },\n          (err) => {\n            if (err.status === 441) {\n              this.reloadComponent();\n            }\n          }\n        );\n      }\n    });\n  }\n  openDialogSecond(valeurid): void {\n    const dialogRef = this.dialog.open(DialogSecondComponent, {\n      width: '350px',\n      data: { agences: this.agences },\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      console.log('The dialog was closed');\n      this.dataFromDialog = result;\n      console.log(result);\n      if (result.selectedAgence && result.selectedAgent) {\n        let data = {\n          codeagencecible: result.selectedAgence,\n          valeurid,\n          codegestionnairecible: result.selectedAgent,\n        };\n        this.callServer.setAgenceEtAgent(data).subscribe(\n          (res) => {\n            console.log(res);\n          },\n          (err) => {\n            if (err.status === 443) {\n              this.reloadComponent();\n            } else alert('error');\n          }\n        );\n      }\n    });\n  }\n  openDialogResultatTraitement(valeurid): void {\n    const dialogRef = this.dialog.open(ResultatTraitementComponent, {\n      width: '350px',\n      data: this.statusTraitement,\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      console.log('The dialog was closed');\n      this.selectedStatut = result;\n      let data = {\n        resultatTraitement: result,\n        valeurid,\n      };\n      this.callServer.setResutlatTraitement(data).subscribe(\n        (res) => {\n          this.reloadComponent();\n          console.log(res);\n        },\n        (err) => {\n          console.log(err);\n        }\n      );\n    });\n  }\n\n  ngAfterViewInit() {\n    // this.dataSource.sort = this.sort;\n    // this.dataSource.paginator = this.paginator;\n  }\n\n  onChange() {\n    console.log(this.selectedValue);\n    this.dataSource.filter = this.selectedValue.trim().toLowerCase();\n  }\n  onChangeSource() {\n    console.log(this.selectedValue);\n    this.dataSource.filter = this.sourceSelectedValue.trim().toLowerCase();\n  }\n\n  onChangeStatut() {\n    console.log(this.selectedValue);\n    this.dataSource.filter = this.statutSelectedValue.trim().toLowerCase();\n  }\n\n  makeItFocused(e: any) {\n    this.focused = e.tab.isActive;\n  }\n  keyDownFunction(event: any) {\n    if (event.keyCode == 13) {\n      this.searchByCode();\n    }\n  }\n\n  searchByCode() {\n    console.log(this.selectedValueSearch);\n  }\n  send(personne) {\n    console.log(personne);\n    this.route.navigate(['home/details'], { queryParams: personne });\n  }\n\n  getStatut(numtiers, codegestionnaire) {\n    let data = {\n      numTier: numtiers,\n      codeGest: codegestionnaire,\n    };\n    this.callServer.getStatus(data).subscribe(\n      (res: any) => {\n        console.log(res);\n        this.isAlert = true;\n        this.alert = res.EMP.Demande[0].statut;\n      },\n      (err) => {\n        console.log(err);\n      }\n    );\n  }\n  sendToEvolan(personne) {\n    this.callServer.sendToEvolan(personne).subscribe(\n      (res: any) => {\n        let body = {\n          data: res,\n          valeurid: personne.valeurid,\n        };\n        console.log('body to send', body);\n        // this.callServer.updatePersonne(body).subscribe(\n        //   (res) => {\n        //     console.log(res);\n        //     this.reloadComponent();\n        //   },\n        //   (err) => {\n        //     console.log('error from 3131', err);\n        //   }\n        // );\n      },\n      (err) => {\n        console.log('error from 3737', err);\n      }\n    );\n  }\n}\n","<mat-tab-group class=\"one\" (selectedTabChange)=\"makeItFocused($event)\" color=\"warn\">\n    <!-- Personne Physique  -->\n\n    <mat-tab label=\"nouvelles demandes\">\n\n        <!-- Filter by statut-->\n        <mat-form-field class=\"filter\" appearance=\"fill\">\n            <mat-label>selectionner la source</mat-label>\n            <mat-select [(ngModel)]=\"sourceSelectedValue\" (selectionChange)=\"sourceChanged()\">\n                <mat-option *ngFor=\"let statut of source\" [value]=\"statut.value\">\n                    {{ statut.viewValue }}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n        <mat-form-field *ngIf=\"sourceSelectedValue === 'prequalifier' \" class=\"filter\" appearance=\"fill\">\n            <mat-label>Filtrer par statut traitement</mat-label>\n            <mat-select [(ngModel)]=\"statutSelectedValue\" (selectionChange)=\"onChangeStatut()\">\n                <mat-option *ngFor=\"let statut of statusTraitement\" [value]=\"statut.statutC\">\n                    {{ statut.statut }}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n        <mat-form-field *ngIf=\"sourceSelectedValue === 'evolan' \"  class=\"filter\" appearance=\"fill\">\n            <mat-label>Filtrer par statut</mat-label>\n            <mat-select [(ngModel)]=\"selectedValue\" (selectionChange)=\"onChange()\">\n                <mat-option *ngFor=\"let statut of status\" [value]=\"statut.value\">\n                    {{ statut.viewValue }}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n        <ngb-alert *ngIf=\"isAlert\" type=\"danger\">{{ alert }}</ngb-alert>\n        <!--  Table-->\n        <mat-spinner style=\"margin: 0 auto;\"  *ngIf=\"!dataSource && isSourceSelected\"></mat-spinner>\n\n        <div *ngIf=\"dataSource\">\n            <div style=\"margin: 40px auto;\n            display: table;\">\n                <button style=\"margin-left: 10px;\"  mat-raised-button (click)=\"exporter.exportTable('xlsx',{fileName:'demandes_data'})\">Excel</button>\n                <button style=\"margin-left: 10px;\"  mat-raised-button (click)=\"exporter.exportTable('csv',{fileName:'demandes_data'})\">CSV</button>\n                <button style=\"margin-left: 10px;\"  mat-raised-button (click)=\"exporter.exportTable('json',{fileName:'demandes_data'})\">JSON</button>\n                <button style=\"margin-left: 10px;\"  mat-raised-button (click)=\"exporter.exportTable('txt',{fileName:'demandes_data'})\">TEXT</button>\n            </div>\n            <table mat-table  [dataSource]=\"dataSource\" matTableExporter #exporter=\"matTableExporter\" class=\"mat-elevation-z8\" matSort>\n\n                <ng-container matColumnDef=\"nom\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>Nom</th>\n                    <td mat-cell *matCellDef=\"let element\">{{ element.nom }}</td>\n                </ng-container>\n    \n                <ng-container matColumnDef=\"prenom\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>Prenom</th>\n                    <td mat-cell *matCellDef=\"let element\">{{ element.prenom }}</td>\n                </ng-container>\n                <ng-container matColumnDef=\"cin\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>CIN</th>\n                    <td mat-cell *matCellDef=\"let element\">{{ element.cin }}</td>\n                </ng-container>\n                <ng-container matColumnDef=\"telgsm\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>Tel</th>\n                    <td mat-cell *matCellDef=\"let element\">{{ element.telgsm }}</td>\n                </ng-container>\n                <ng-container matColumnDef=\"resultatTraitement\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>Resultat Traitement</th>\n                    <td mat-cell *matCellDef=\"let element\">{{ element.resultatTraitement === 'nouvelle' ? '':element.resultatTraitement}}</td>\n                </ng-container>\n                <ng-container matColumnDef=\"statuttraitement\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>Statut de demande</th>\n                    <td mat-cell *matCellDef=\"let element\">{{ element.statuttraitement }}</td>\n                </ng-container>\n                <ng-container matColumnDef=\"montantdemande\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>Montant demandé</th>\n                    <td mat-cell *matCellDef=\"let element\">{{ element.montantdemande }}</td>\n                </ng-container>\n                <ng-container matColumnDef=\"secteur\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>Secteur</th>\n                    <td mat-cell *matCellDef=\"let element\">{{ element.secteur }}</td>\n                </ng-container>\n                <!-- <ng-container matColumnDef=\"projet\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>Projet</th>\n                    <td mat-cell *matCellDef=\"let element\">{{ element.projet }}</td>\n                </ng-container> -->\n                <ng-container matColumnDef=\"email\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>Email</th>\n                    <td mat-cell *matCellDef=\"let element\">{{ element.email }}</td>\n                </ng-container>\n                <ng-container matColumnDef=\"ville\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>Ville</th>\n                    <td mat-cell *matCellDef=\"let element\">{{ element.ville }}</td>\n                </ng-container>\n                <ng-container matColumnDef=\"agence\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>Agence</th>\n                    <td mat-cell *matCellDef=\"let element\">{{ element.agence }}</td>\n                </ng-container>\n                <ng-container matColumnDef=\"codeagence\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>Code Agence</th>\n                    <td mat-cell *matCellDef=\"let element\">{{ element.codeagence }}</td>\n                </ng-container>\n                <ng-container matColumnDef=\"entry_date\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>Date Entrée</th>\n                    <td mat-cell *matCellDef=\"let element\">{{ element.entry_date | date:'dd/mm/yyyy'}}</td>\n                </ng-container>\n                <ng-container matColumnDef=\"nbrappel\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>Nombre Appel</th>\n                    <td mat-cell *matCellDef=\"let element\">{{ element.nbrappel }}</td>\n                </ng-container>\n                <ng-container matColumnDef=\"valeurid\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>Valeur ID</th>\n                    <td mat-cell *matCellDef=\"let element\">{{ element.valeurid }}</td>\n                </ng-container>\n                <!-- <ng-container matColumnDef=\"id_od\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>Id OD</th>\n                    <td mat-cell *matCellDef=\"let element\">{{ element.id_od }}</td>\n                </ng-container> -->\n                <ng-container matColumnDef=\"options\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>options</th>\n                    <td mat-cell *matCellDef=\"let element\">\n                        <!-- <button (click)=\"openDialog(element.valeurid)\" class=\"btn\" mat-raised-button color=\"warn\">\n                            Set Agence \n                        </button>\n                        <button (click)=\"openDialogSecond(element.valeurid)\" class=\"btn\" mat-raised-button color=\"warn\">\n                            Set Agent\n                        </button>\n                        <button (click)=\"getStatut(element.numtiers, element.codegestionnaire)\" class=\"btn\" mat-raised-button color=\"warn\">\n                            Get Statut\n                        </button>\n                        <button (click)=\"sendToEvolan(element)\" class=\"btn\" mat-raised-button color=\"warn\">\n                            Send To Evolan\n                        </button> -->\n                        <button (click)=\"send(element)\" class=\"btn\" mat-raised-button color=\"warn\">\n                            Details\n                        </button>\n                    </td>\n                </ng-container>\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n            </table>\n        </div>\n        <mat-paginator [pageSizeOptions]=\"pageSizeOptions\" showFirstLastButtons></mat-paginator>\n        \n    </mat-tab>\n</mat-tab-group>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, Inject, OnInit } from '@angular/core';\nimport {MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\n\n\n@Component({\n  selector: 'app-dialog',\n  templateUrl: './dialog.component.html',\n  styleUrls: ['./dialog.component.scss']\n})\nexport class DialogComponent implements OnInit {\n  data:any;\n  selectedAgence:string\n  constructor(\n    public dialogRef: MatDialogRef<DialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public agences) {\n      this.data = agences.agences\n    }\n\n  ngOnInit(): void {\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n","<h1 mat-dialog-title>Choisir l'agence</h1>\n<div mat-dialog-content>\n    <mat-form-field appearance=\"fill\">\n        <mat-label>Agence</mat-label>\n        <mat-select [(ngModel)]=\"selectedAgence\">\n            <mat-option *ngFor=\"let agence of data\" [value]='agence.codeagence'>\n                {{agence.agence}}\n            </mat-option>\n        </mat-select>\n    </mat-form-field>\n</div>\n<div mat-dialog-actions>\n    <button mat-button (click)=\"onNoClick()\">Annuler</button>\n    <button mat-button [mat-dialog-close]=\"selectedAgence\" cdkFocusInitial>Ok</button>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { MatSnackBar } from '@angular/material/snack-bar'\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  hide = true;\n  data:FormGroup\n  constructor(private route:Router, private authService:AuthService, private fb:FormBuilder, private snackBar:MatSnackBar) { }\n\n  ngOnInit(): void {\n    this.data = this.fb.group({\n      identifiant:['', Validators.required],\n      password:['', Validators.required],\n      remember:['']\n    })\n  }\n\n  connectt(event){\n    console.log(event.keyCode );\n    \n    if (event.keyCode === 13 ){\n      console.log('enter');\n      this.connect()\n    }\n  }\n  connect(){\n    console.log('connected')\n    this.authService.login(this.data.value).subscribe((res:any)=>{\n      localStorage.setItem('token',res.token)\n      localStorage.setItem('role',res.role)\n      this.route.navigate(['home'])\n    },(err)=>{\n        if (err.status && err.status === 401) {\n          let snackBarRef = this.snackBar.open('identifiant ou password incorrect ou encours de validation!', 'OK', {duration:15000, horizontalPosition:'center', verticalPosition:'top'});\n          snackBarRef.onAction().subscribe(()=>{\n            snackBarRef.dismiss()\n          })\n        }\n        else {\n          let snackBarRef = this.snackBar.open('Erreur serveur ressayer plus tard!', 'OK', {duration:15000, horizontalPosition:'center', verticalPosition:'top'});\n          snackBarRef.onAction().subscribe(()=>{\n            snackBarRef.dismiss()\n          })\n        }\n    })\n    \n  }\n}\n","<div class=\"on_top_of_body\">\n  <div class=\"form_container\">\n    <div class=\"logo\">\n      <img width=\"150px\" height=\"150px\" src=\"../../../assets/logo.png\" />\n    </div>\n\n    <div class=\"open_data\">\n      <h1>OPEN DATA</h1>\n    </div>\n    <form [formGroup]=\"data\">\n      <div>\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Identifiant</mat-label>\n          <input formControlName=\"identifiant\" matInput placeholder=\"Identifiant\" />\n          <mat-icon matPrefix>account_box</mat-icon>\n          <mat-hint *ngIf=\"false\">Hint</mat-hint>\n        </mat-form-field>\n      </div>\n      <div>\n        <mat-form-field appearance=\"fill\">\n          <mat-label> Mot de passe</mat-label>\n          <input\n          formControlName=\"password\"\n            matInput\n            [type]=\"hide ? 'password' : 'text'\"\n            placeholder=\"Mot de passe\"\n          />\n          <mat-icon matPrefix>lock</mat-icon>\n          <mat-hint *ngIf=\"false\">Hint</mat-hint>\n          <button\n            mat-icon-button\n            matSuffix\n            (click)=\"hide = !hide\"\n            [attr.aria-label]=\"'Hide password'\"\n            [attr.aria-pressed]=\"hide\"\n          >\n            <mat-icon>{{ hide ? \"visibility_off\" : \"visibility\" }}</mat-icon>\n          </button>\n        </mat-form-field>\n      </div>\n  \n      <p class=\"remember_me\">\n        <mat-checkbox formControlName=\"remember\" color=\"warn\">Se rappeler de moi</mat-checkbox>\n        <a href=\"#\">Mot de passe oublié?</a>\n      </p>\n    </form>\n\n\n    <p class=\"login\">\n      <button [disabled]=\"!data.valid\" mat-raised-button (keydown)=\"connectt($event)\" (click)=\"connect()\">\n        <h1>se connecter</h1>\n      </button>\n    </p>\n  <!--\n  <p class=\"login\">\n    <button mat-raised-button (click)=\"setToken()\"><h1>Get Token</h1></button>\n  </p>\n  -->\n\n    <p style=\"text-align: center\"><a href=\"/register\">Créer un compte</a></p>\n  </div>\n</div>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\n\nexport interface Dossier {\n  numTier: string;\n  numDossier: number;\n  nom: string;\n  prenom: string;\n  valeurID: number;\n  nomErreur: number;\n}\n\nconst ELEMENT_DATA: Dossier[] = [\n  {\n    numTier: '0001',\n    numDossier: 1,\n    nom: 'farah',\n    prenom: 'radouan',\n    valeurID: 110,\n    nomErreur: 0,\n  },\n  {\n    numTier: '0002',\n    numDossier: 2,\n    nom: 'baddou',\n    prenom: 'ayoub',\n    valeurID: 21,\n    nomErreur: 5,\n  },\n  {\n    numTier: '0003',\n    numDossier: 3,\n    nom: 'bouziane',\n    prenom: 'ismail',\n    valeurID: 134,\n    nomErreur: 1,\n  },\n];\n@Component({\n  selector: 'app-personne-physique',\n  templateUrl: './personne-physique.component.html',\n  styleUrls: ['./personne-physique.component.scss'],\n})\nexport class PersonnePhysiqueComponent implements OnInit {\n  person!: FormGroup;\n  hideRequiredControl = new FormControl(false);\n  floatLabelControl = new FormControl('auto');\n  status = [\n    { value: '', viewValue: 'Tous' },\n    { value: 'encours', viewValue: 'En Cours' },\n    { value: 'valide', viewValue: 'Validé' },\n    { value: 'rejete', viewValue: 'Rejeté' },\n    { value: 'decaisse', viewValue: 'Decaissé' },\n  ];\n  genres = [\n    { value: 'M.', viewValue: 'Monsieur' },\n    { value: 'MME', viewValue: 'Madame' },\n  ];\n  formalismes = [\n    {\n      value: '1001',\n      viewValue: 'INSCRIT AU REGISTRE DE COMMERCE',\n    },\n    {\n      value: '1003',\n      viewValue: 'ASSUJETTI A LA TAXE PROFESSIONNELLE',\n    },\n    {\n      value: '1004',\n      viewValue: 'INSCRIT DANS DES REGISTRES PROFESSIONNELS',\n    },\n    {\n      value: '1005',\n      viewValue: 'AGRÉMENT PROFESIONNEL',\n    },\n    {\n      value: '1006',\n      viewValue: 'AUCUN JUSTIF FORMALISE',\n    },\n    {\n      value: '1002',\n      viewValue: 'AUTO ENTREPRENEUR',\n    },\n  ];\n  situations = [\n    {\n      value: 'C',\n      viewValue: 'Célibataire',\n    },\n    {\n      value: 'M',\n      viewValue: 'Marié(e)',\n    },\n    {\n      value: 'D',\n      viewValue: 'Divorcé(e)',\n    },\n    {\n      value: 'V',\n      viewValue: 'Veuf(ve)',\n    },\n  ];\n  selectedValue: string = '';\n  selectedValueSearch!: string;\n  displayedColumns: string[] = [\n    'numTier',\n    'numDossier',\n    'nom',\n    'prenom',\n    'valeurID',\n    'nomErreur',\n  ];\n  dataSource = new MatTableDataSource(ELEMENT_DATA);\n  @ViewChild(MatSort) sort!: MatSort;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  focused: boolean = false;\n  statutMessage: string = 'votre statut';\n  uploadedFile: any;\n  showSpinner: boolean = false;\n  color: boolean;\n  message: string;\n  constructor(fb: FormBuilder) {\n    this.person = fb.group({\n      genre: ['', Validators.required],\n      nom: ['', Validators.required],\n      prenom: ['', Validators.required],\n      cin: ['', Validators.required],\n      dateExpiration: ['', Validators.required],\n      adresse: ['', Validators.required],\n      rue: ['', Validators.required],\n      quartier: ['', Validators.required],\n      ville: ['', Validators.required],\n      codePostale: ['', Validators.required],\n      teleDomicile: ['', Validators.required],\n      teleGSM: ['', Validators.required],\n      teleProfessionel: ['', Validators.required],\n      dateNaissance: ['', Validators.required],\n      situationFamiliale: ['', Validators.required],\n      rib: ['', [Validators.nullValidator, Validators.required]],\n      niveauFormalisme: ['', Validators.required],\n      montantDemande: ['', Validators.required],\n      nombreEcheances: ['', Validators.required],\n    });\n  }\n\n  ngOnInit(): void {}\n\n  ngAfterViewInit() {\n    this.dataSource.sort = this.sort;\n    this.dataSource.paginator = this.paginator;\n  }\n\n  onChange() {\n    console.log(this.selectedValue);\n    this.dataSource.filter = this.selectedValue.trim().toLowerCase();\n  }\n\n  makeItFocused(e: any) {\n    this.focused = e.tab.isActive;\n  }\n  registerPerson() {\n    console.log(this.person.value);\n  }\n  keyDownFunction(event: any) {\n    if (event.keyCode == 13) {\n      this.searchByCode();\n    }\n  }\n\n  searchByCode() {\n    console.log(this.selectedValueSearch);\n  }\n\n  // showUploadedFile(){\n  //   let item:string = this.uploadedFile\n  //   var type = item.slice(item.lastIndexOf('.')+1);\n  //   if (type !== 'csv') {\n  //     alert('not a csv file')\n  //   }\n  // }\n\n  uploadFile(e: any) {\n    try {\n      this.showSpinner = true;\n      let item: string = this.uploadedFile;\n      var type = item.slice(item.lastIndexOf('.') + 1);\n      if (type === 'csv') {\n        //do stuff\n        let file = e.target.files[0];\n  \n        let reader = new FileReader();\n        reader.readAsText(file);\n        reader.onloadend = () => {\n          let resultedCSV: string | ArrayBuffer = reader.result;\n          let arrayoflines = resultedCSV.toString();\n          let AllLines = arrayoflines.split('\\n');\n          let headers = AllLines.shift().split(',');\n          if (headers.length === 2) {\n            //do stuff\n            let DataLines = AllLines;\n            let arr = [];\n            for (let i = 0; i < DataLines.length; i++) {\n              if (DataLines[i].split(',').length === 2) {\n                //do stuff\n                arr.push({\n                  status: DataLines[i].split(',')[0],\n                  valeurID: DataLines[i].split(',')[1],\n                });\n              } else {\n                //do not do stuff\n                this.showSpinner = false;\n                this.message = \"Votre fichier n'est pas valide\";\n                this.color = true;\n                this.uploadedFile = ''\n              }\n            }\n            this.showSpinner = false;\n            this.message = 'Votre fichier est valide';\n            this.color = false;\n            this.uploadedFile = ''\n            // do something with the array\n          } else {\n            //do not do stuff\n            this.showSpinner = false;\n            this.message = \"Votre fichier n'est pas valide\";\n            this.color = true;\n            this.uploadedFile = ''\n          }\n        };\n      } else {\n        //do not do stuff\n        this.showSpinner = false;\n        this.message = \"Votre fichier n'est pas valide\";\n        this.color = true;\n        this.uploadedFile = ''\n      }\n    } catch (e) {\n      this.showSpinner = false;\n      this.message = \"Votre fichier n'est pas valide\";\n      this.color = true;\n      this.uploadedFile = ''\n    }\n  }\n\n\n  \n}\n","<mat-tab-group class=\"four\" (selectedTabChange)=\"makeItFocused($event)\" color=\"warn\">\n    <!-- Personne Physique  -->\n\n    <mat-tab label=\"Personne Physique\">\n        <!-- Filter by statut-->\n        <mat-form-field class=\"filter\" appearance=\"fill\">\n            <mat-label>Filtrer par statut</mat-label>\n            <mat-select [(ngModel)]=\"selectedValue\" (selectionChange)=\"onChange()\">\n                <mat-option *ngFor=\"let statut of status\" [value]=\"statut.value\">\n                    {{ statut.viewValue }}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n\n        <!--  Table-->\n        <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\" matSort>\n            <ng-container matColumnDef=\"numTier\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>N° TIERS.</th>\n                <td mat-cell *matCellDef=\"let element\">{{ element.numTier }}</td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"numDossier\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>N° Dossier.</th>\n                <td mat-cell *matCellDef=\"let element\">{{ element.numDossier }}</td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"nom\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Nom.</th>\n                <td mat-cell *matCellDef=\"let element\">{{ element.nom }}</td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"prenom\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Prénom.</th>\n                <td mat-cell *matCellDef=\"let element\">{{ element.prenom }}</td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"valeurID\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Valeur ID.</th>\n                <td mat-cell *matCellDef=\"let element\">{{ element.valeurID }}</td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"nomErreur\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Erreur</th>\n                <td mat-cell *matCellDef=\"let element\">{{ element.nomErreur }}</td>\n            </ng-container>\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n        </table>\n        <mat-paginator [pageSizeOptions]=\"[1, 2, 3]\" showFirstLastButtons></mat-paginator>\n    </mat-tab>\n\n    <!-- Ajouter PP TAB  -->\n    <mat-tab label=\"Ajouter PP\">\n        <div class=\"form-container\">\n            <form [formGroup]=\"person\" (ngSubmit)=\"registerPerson()\">\n                <div class=\"fields-container fields-container-of-three\">\n                    <mat-form-field appearance=\"fill\" [floatLabel]=\"floatLabelControl.value\">\n                        <mat-label>Genre</mat-label>\n                        <mat-select formControlName=\"genre\">\n                            <mat-option *ngFor=\"let genre of genres\" [value]=\"genre.value\">\n                                {{ genre.viewValue }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n\n                    <mat-form-field appearance=\"fill\" [floatLabel]=\"floatLabelControl.value\">\n                        <mat-label>Nom</mat-label>\n                        <input formControlName=\"nom\" matInput />\n                    </mat-form-field>\n\n                    <mat-form-field appearance=\"fill\" [floatLabel]=\"floatLabelControl.value\">\n                        <mat-label>Prénom</mat-label>\n                        <input formControlName=\"prenom\" matInput />\n                    </mat-form-field>\n                </div>\n\n                <div class=\"fields-container fields-container-of-two\">\n                    <mat-form-field appearance=\"fill\" [floatLabel]=\"floatLabelControl.value\">\n                        <mat-label>CIN</mat-label>\n                        <input formControlName=\"cin\" matInput />\n                    </mat-form-field>\n\n                    <mat-form-field appearance=\"fill\" [floatLabel]=\"floatLabelControl.value\">\n                        <mat-label>Date Expiration</mat-label>\n                        <input formControlName=\"dateExpiration\" matInput [matDatepicker]=\"picker\" />\n                        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                        <mat-datepicker #picker></mat-datepicker>\n                    </mat-form-field>\n                </div>\n\n                <div class=\"fields-container fields-container-of-two\">\n                    <mat-form-field appearance=\"fill\" [floatLabel]=\"floatLabelControl.value\">\n                        <mat-label>Adresse</mat-label>\n                        <input formControlName=\"adresse\" matInput />\n                    </mat-form-field>\n\n                    <mat-form-field appearance=\"fill\" [floatLabel]=\"floatLabelControl.value\">\n                        <mat-label>Rue</mat-label>\n                        <input formControlName=\"rue\" matInput />\n                    </mat-form-field>\n                </div>\n\n                <div class=\"fields-container fields-container-of-three\">\n                    <mat-form-field appearance=\"fill\" [floatLabel]=\"floatLabelControl.value\">\n                        <mat-label>Quartier</mat-label>\n                        <input formControlName=\"quartier\" matInput />\n                    </mat-form-field>\n\n                    <mat-form-field appearance=\"fill\" [floatLabel]=\"floatLabelControl.value\">\n                        <mat-label>Ville</mat-label>\n                        <input formControlName=\"ville\" matInput />\n                    </mat-form-field>\n\n                    <mat-form-field appearance=\"fill\" [floatLabel]=\"floatLabelControl.value\">\n                        <mat-label>Code Postale</mat-label>\n                        <input formControlName=\"codePostale\" matInput />\n                    </mat-form-field>\n                </div>\n\n                <div class=\"fields-container fields-container-of-three\">\n                    <mat-form-field appearance=\"fill\" [floatLabel]=\"floatLabelControl.value\">\n                        <mat-label>Téléphone Domicile</mat-label>\n                        <input formControlName=\"teleDomicile\" matInput />\n                    </mat-form-field>\n\n                    <mat-form-field appearance=\"fill\" [floatLabel]=\"floatLabelControl.value\">\n                        <mat-label>Téléphone GSM</mat-label>\n                        <input formControlName=\"teleGSM\" matInput />\n                    </mat-form-field>\n\n                    <mat-form-field appearance=\"fill\" [floatLabel]=\"floatLabelControl.value\">\n                        <mat-label>Téléphone Professionel</mat-label>\n                        <input formControlName=\"teleProfessionel\" matInput />\n                    </mat-form-field>\n                </div>\n\n                <div class=\"fields-container fields-container-of-two\">\n                    <mat-form-field appearance=\"fill\" [floatLabel]=\"floatLabelControl.value\">\n                        <mat-label>Date Naissance</mat-label>\n                        <input formControlName=\"dateNaissance\" matInput [matDatepicker]=\"pickerr\" />\n                        <mat-datepicker-toggle matSuffix [for]=\"pickerr\"></mat-datepicker-toggle>\n                        <mat-datepicker #pickerr></mat-datepicker>\n                    </mat-form-field>\n\n                    <mat-form-field appearance=\"fill\" [floatLabel]=\"floatLabelControl.value\">\n                        <mat-label>Situation Familiale</mat-label>\n                        <mat-select formControlName=\"situationFamiliale\">\n                            <mat-option *ngFor=\"let situation of situations\" [value]=\"situation.value\">\n                                {{ situation.viewValue | titlecase }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n\n                <div class=\"fields-container fields-container-of-two\">\n                    <mat-form-field appearance=\"fill\" [floatLabel]=\"floatLabelControl.value\">\n                        <mat-label>N° RIB</mat-label>\n                        <input formControlName=\"rib\" matInput />\n                    </mat-form-field>\n\n                    <mat-form-field appearance=\"fill\" [floatLabel]=\"floatLabelControl.value\">\n                        <mat-label>Niveau Formalisme</mat-label>\n                        <mat-select formControlName=\"niveauFormalisme\">\n                            <mat-option *ngFor=\"let formalisme of formalismes\" [value]=\"formalisme.value\">\n                                {{ formalisme.viewValue | titlecase }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n\n                <div class=\"fields-container fields-container-of-two\">\n                    <mat-form-field appearance=\"fill\" [floatLabel]=\"floatLabelControl.value\">\n                        <mat-label>Montant Demandé</mat-label>\n                        <input formControlName=\"montantDemande\" matInput />\n                    </mat-form-field>\n\n                    <mat-form-field appearance=\"fill\" [floatLabel]=\"floatLabelControl.value\">\n                        <mat-label>Nombre d'echéances</mat-label>\n                        <input formControlName=\"nombreEcheances\" matInput />\n                    </mat-form-field>\n                </div>\n                <div class=\"button-container\">\n                    <button class=\"register-button\" type=\"submit\">Register</button>\n                </div>\n            </form>\n        </div>\n    </mat-tab>\n    <mat-tab label=\"Upload Statut\">\n        <div class=\"filter\">\n            <h1 class=\"upload-title\">Déposez votre fichier</h1>\n            <input type=\"file\" [(ngModel)]=\"uploadedFile\" name=\"file\" id=\"file\" class=\"inputfile\" accept=\".csv\" (change)=\"uploadFile($event)\" />\n            <label *ngIf=\"!showSpinner\" for=\"file\">Sélectionnez votre fichier</label>\n            <mat-spinner *ngIf=\"showSpinner\"></mat-spinner>\n            <div *ngIf=\"message\" class=\"status-success\">\n                <div [ngClass]=\"{ 'statut-message': true, 'success':color }\">\n                    <p>{{ message }}</p>\n                </div>\n            </div>\n        </div>\n        <div class=\"code\">\n            <h1 class=\"upload-title\">Modèle de fichier :</h1>\n            <h3 class=\"upload-title\">Fichier CSV (séparé par des virgules)</h3>\n            <pre>\n            <code><span style=\"color: rgb(53, 146, 221);\">{{\"statut\"}}</span>{{\",\"}}<span style=\"color: rgb(53, 140, 211);\">{{\"valeurID\"}}</span>{{\"\\n\"}}<span style=\"color: rgb(20, 220, 70);\">{{\"status 1\"}}</span>{{\",\"}}<span style=\"color: rgb(20, 220, 70);\">{{\"valeurID 1\"}}</span>{{\"\\n\"}}<span style=\"color: rgb(20, 220, 70);\">{{\"status 2\"}}</span>{{\",\"}}<span style=\"color: rgb(20, 220, 70);\">{{\"valeurID 2\"}}</span>{{\"\\n\"}}<span style=\"color: rgb(20, 220, 70);\">{{\"status 3\"}}</span>{{\",\"}}<span style=\"color: rgb(20, 220, 70);\">{{\"valeurID 3\"}}</span></code>\n          </pre>\n\n        </div>\n        <!--<button (click)=\"showUploadedFile()\">show it</button>-->\n    </mat-tab>\n    <mat-tab label=\"Etat dossier\">\n        <mat-form-field (keydown)=\"keyDownFunction($event)\" class=\"filter\" appearance=\"fill\">\n            <mat-label>Code du dossier</mat-label>\n            <input [(ngModel)]=\"selectedValueSearch\" matInput placeholder=\"tapez le code du dossier\" />\n            <mat-icon matPrefix>search</mat-icon>\n            <mat-hint *ngIf=\"false\">Hint</mat-hint>\n        </mat-form-field>\n        <div class=\"button-container\">\n            <button (click)=\"searchByCode()\" class=\"register-button\">\n        <span class=\"search\">Chercher</span>\n      </button>\n        </div>\n        <div class=\"status\">\n            <div [ngClass]=\"{ 'statut-message': true }\">\n                <p>{{ statutMessage }}</p>\n            </div>\n        </div>\n    </mat-tab>\n</mat-tab-group>","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router'\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class PmDataNewService\r\n//  implements Resolve<Object>\r\n {\r\n  constructor(private http:HttpClient) { }\r\n  // resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): any[] | Observable<Object> | Promise<any[]> {\r\n  //   return this.http.post('https://192.168.140.30:3132/api/nouvellesdemandes',{})\r\n  // }\r\n   getNouvellesDemandes(){\r\n    return this.http.post('https://192.168.140.30:3132/api/nouvellesdemandes', {})\r\n  }\r\n  getDemandesEvolan(){\r\n    return this.http.post('https://192.168.140.30:3132/api/demandesRS', {})\r\n  }\r\n  getDemandesPrequalifies(){\r\n    return this.http.post('https://192.168.140.30:3132/api/demandesPrequalifies', {})\r\n  }\r\n}\r\n","import { Injectable, Injector } from '@angular/core';\r\nimport { HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http'\r\nimport {AuthService} from './auth.service'\r\n\r\n\r\n@Injectable()\r\nexport class TokenInterceptorService implements HttpInterceptor  {\r\n \r\n  constructor(private injector:Injector) { \r\n  }\r\n  intercept(request: HttpRequest<any>, next: HttpHandler) {\r\n    let authService = this.injector.get(AuthService)\r\n    var clonedRequest = request.clone({\r\n        setHeaders: {\r\n          Authorization: `Bearer ${authService.getToken()}`\r\n        }\r\n      });\r\n    return next.handle(clonedRequest)\r\n  }\r\n}\r\n","var map = {\n\t\"./af\": \"K/tc\",\n\t\"./af.js\": \"K/tc\",\n\t\"./ar\": \"jnO4\",\n\t\"./ar-dz\": \"o1bE\",\n\t\"./ar-dz.js\": \"o1bE\",\n\t\"./ar-kw\": \"Qj4J\",\n\t\"./ar-kw.js\": \"Qj4J\",\n\t\"./ar-ly\": \"HP3h\",\n\t\"./ar-ly.js\": \"HP3h\",\n\t\"./ar-ma\": \"CoRJ\",\n\t\"./ar-ma.js\": \"CoRJ\",\n\t\"./ar-sa\": \"gjCT\",\n\t\"./ar-sa.js\": \"gjCT\",\n\t\"./ar-tn\": \"bYM6\",\n\t\"./ar-tn.js\": \"bYM6\",\n\t\"./ar.js\": \"jnO4\",\n\t\"./az\": \"SFxW\",\n\t\"./az.js\": \"SFxW\",\n\t\"./be\": \"H8ED\",\n\t\"./be.js\": \"H8ED\",\n\t\"./bg\": \"hKrs\",\n\t\"./bg.js\": \"hKrs\",\n\t\"./bm\": \"p/rL\",\n\t\"./bm.js\": \"p/rL\",\n\t\"./bn\": \"kEOa\",\n\t\"./bn-bd\": \"loYQ\",\n\t\"./bn-bd.js\": \"loYQ\",\n\t\"./bn.js\": \"kEOa\",\n\t\"./bo\": \"0mo+\",\n\t\"./bo.js\": \"0mo+\",\n\t\"./br\": \"aIdf\",\n\t\"./br.js\": \"aIdf\",\n\t\"./bs\": \"JVSJ\",\n\t\"./bs.js\": \"JVSJ\",\n\t\"./ca\": \"1xZ4\",\n\t\"./ca.js\": \"1xZ4\",\n\t\"./cs\": \"PA2r\",\n\t\"./cs.js\": \"PA2r\",\n\t\"./cv\": \"A+xa\",\n\t\"./cv.js\": \"A+xa\",\n\t\"./cy\": \"l5ep\",\n\t\"./cy.js\": \"l5ep\",\n\t\"./da\": \"DxQv\",\n\t\"./da.js\": \"DxQv\",\n\t\"./de\": \"tGlX\",\n\t\"./de-at\": \"s+uk\",\n\t\"./de-at.js\": \"s+uk\",\n\t\"./de-ch\": \"u3GI\",\n\t\"./de-ch.js\": \"u3GI\",\n\t\"./de.js\": \"tGlX\",\n\t\"./dv\": \"WYrj\",\n\t\"./dv.js\": \"WYrj\",\n\t\"./el\": \"jUeY\",\n\t\"./el.js\": \"jUeY\",\n\t\"./en-au\": \"Dmvi\",\n\t\"./en-au.js\": \"Dmvi\",\n\t\"./en-ca\": \"OIYi\",\n\t\"./en-ca.js\": \"OIYi\",\n\t\"./en-gb\": \"Oaa7\",\n\t\"./en-gb.js\": \"Oaa7\",\n\t\"./en-ie\": \"4dOw\",\n\t\"./en-ie.js\": \"4dOw\",\n\t\"./en-il\": \"czMo\",\n\t\"./en-il.js\": \"czMo\",\n\t\"./en-in\": \"7C5Q\",\n\t\"./en-in.js\": \"7C5Q\",\n\t\"./en-nz\": \"b1Dy\",\n\t\"./en-nz.js\": \"b1Dy\",\n\t\"./en-sg\": \"t+mt\",\n\t\"./en-sg.js\": \"t+mt\",\n\t\"./eo\": \"Zduo\",\n\t\"./eo.js\": \"Zduo\",\n\t\"./es\": \"iYuL\",\n\t\"./es-do\": \"CjzT\",\n\t\"./es-do.js\": \"CjzT\",\n\t\"./es-mx\": \"tbfe\",\n\t\"./es-mx.js\": \"tbfe\",\n\t\"./es-us\": \"Vclq\",\n\t\"./es-us.js\": \"Vclq\",\n\t\"./es.js\": \"iYuL\",\n\t\"./et\": \"7BjC\",\n\t\"./et.js\": \"7BjC\",\n\t\"./eu\": \"D/JM\",\n\t\"./eu.js\": \"D/JM\",\n\t\"./fa\": \"jfSC\",\n\t\"./fa.js\": \"jfSC\",\n\t\"./fi\": \"gekB\",\n\t\"./fi.js\": \"gekB\",\n\t\"./fil\": \"1ppg\",\n\t\"./fil.js\": \"1ppg\",\n\t\"./fo\": \"ByF4\",\n\t\"./fo.js\": \"ByF4\",\n\t\"./fr\": \"nyYc\",\n\t\"./fr-ca\": \"2fjn\",\n\t\"./fr-ca.js\": \"2fjn\",\n\t\"./fr-ch\": \"Dkky\",\n\t\"./fr-ch.js\": \"Dkky\",\n\t\"./fr.js\": \"nyYc\",\n\t\"./fy\": \"cRix\",\n\t\"./fy.js\": \"cRix\",\n\t\"./ga\": \"USCx\",\n\t\"./ga.js\": \"USCx\",\n\t\"./gd\": \"9rRi\",\n\t\"./gd.js\": \"9rRi\",\n\t\"./gl\": \"iEDd\",\n\t\"./gl.js\": \"iEDd\",\n\t\"./gom-deva\": \"qvJo\",\n\t\"./gom-deva.js\": \"qvJo\",\n\t\"./gom-latn\": \"DKr+\",\n\t\"./gom-latn.js\": \"DKr+\",\n\t\"./gu\": \"4MV3\",\n\t\"./gu.js\": \"4MV3\",\n\t\"./he\": \"x6pH\",\n\t\"./he.js\": \"x6pH\",\n\t\"./hi\": \"3E1r\",\n\t\"./hi.js\": \"3E1r\",\n\t\"./hr\": \"S6ln\",\n\t\"./hr.js\": \"S6ln\",\n\t\"./hu\": \"WxRl\",\n\t\"./hu.js\": \"WxRl\",\n\t\"./hy-am\": \"1rYy\",\n\t\"./hy-am.js\": \"1rYy\",\n\t\"./id\": \"UDhR\",\n\t\"./id.js\": \"UDhR\",\n\t\"./is\": \"BVg3\",\n\t\"./is.js\": \"BVg3\",\n\t\"./it\": \"bpih\",\n\t\"./it-ch\": \"bxKX\",\n\t\"./it-ch.js\": \"bxKX\",\n\t\"./it.js\": \"bpih\",\n\t\"./ja\": \"B55N\",\n\t\"./ja.js\": \"B55N\",\n\t\"./jv\": \"tUCv\",\n\t\"./jv.js\": \"tUCv\",\n\t\"./ka\": \"IBtZ\",\n\t\"./ka.js\": \"IBtZ\",\n\t\"./kk\": \"bXm7\",\n\t\"./kk.js\": \"bXm7\",\n\t\"./km\": \"6B0Y\",\n\t\"./km.js\": \"6B0Y\",\n\t\"./kn\": \"PpIw\",\n\t\"./kn.js\": \"PpIw\",\n\t\"./ko\": \"Ivi+\",\n\t\"./ko.js\": \"Ivi+\",\n\t\"./ku\": \"JCF/\",\n\t\"./ku.js\": \"JCF/\",\n\t\"./ky\": \"lgnt\",\n\t\"./ky.js\": \"lgnt\",\n\t\"./lb\": \"RAwQ\",\n\t\"./lb.js\": \"RAwQ\",\n\t\"./lo\": \"sp3z\",\n\t\"./lo.js\": \"sp3z\",\n\t\"./lt\": \"JvlW\",\n\t\"./lt.js\": \"JvlW\",\n\t\"./lv\": \"uXwI\",\n\t\"./lv.js\": \"uXwI\",\n\t\"./me\": \"KTz0\",\n\t\"./me.js\": \"KTz0\",\n\t\"./mi\": \"aIsn\",\n\t\"./mi.js\": \"aIsn\",\n\t\"./mk\": \"aQkU\",\n\t\"./mk.js\": \"aQkU\",\n\t\"./ml\": \"AvvY\",\n\t\"./ml.js\": \"AvvY\",\n\t\"./mn\": \"lYtQ\",\n\t\"./mn.js\": \"lYtQ\",\n\t\"./mr\": \"Ob0Z\",\n\t\"./mr.js\": \"Ob0Z\",\n\t\"./ms\": \"6+QB\",\n\t\"./ms-my\": \"ZAMP\",\n\t\"./ms-my.js\": \"ZAMP\",\n\t\"./ms.js\": \"6+QB\",\n\t\"./mt\": \"G0Uy\",\n\t\"./mt.js\": \"G0Uy\",\n\t\"./my\": \"honF\",\n\t\"./my.js\": \"honF\",\n\t\"./nb\": \"bOMt\",\n\t\"./nb.js\": \"bOMt\",\n\t\"./ne\": \"OjkT\",\n\t\"./ne.js\": \"OjkT\",\n\t\"./nl\": \"+s0g\",\n\t\"./nl-be\": \"2ykv\",\n\t\"./nl-be.js\": \"2ykv\",\n\t\"./nl.js\": \"+s0g\",\n\t\"./nn\": \"uEye\",\n\t\"./nn.js\": \"uEye\",\n\t\"./oc-lnc\": \"Fnuy\",\n\t\"./oc-lnc.js\": \"Fnuy\",\n\t\"./pa-in\": \"8/+R\",\n\t\"./pa-in.js\": \"8/+R\",\n\t\"./pl\": \"jVdC\",\n\t\"./pl.js\": \"jVdC\",\n\t\"./pt\": \"8mBD\",\n\t\"./pt-br\": \"0tRk\",\n\t\"./pt-br.js\": \"0tRk\",\n\t\"./pt.js\": \"8mBD\",\n\t\"./ro\": \"lyxo\",\n\t\"./ro.js\": \"lyxo\",\n\t\"./ru\": \"lXzo\",\n\t\"./ru.js\": \"lXzo\",\n\t\"./sd\": \"Z4QM\",\n\t\"./sd.js\": \"Z4QM\",\n\t\"./se\": \"//9w\",\n\t\"./se.js\": \"//9w\",\n\t\"./si\": \"7aV9\",\n\t\"./si.js\": \"7aV9\",\n\t\"./sk\": \"e+ae\",\n\t\"./sk.js\": \"e+ae\",\n\t\"./sl\": \"gVVK\",\n\t\"./sl.js\": \"gVVK\",\n\t\"./sq\": \"yPMs\",\n\t\"./sq.js\": \"yPMs\",\n\t\"./sr\": \"zx6S\",\n\t\"./sr-cyrl\": \"E+lV\",\n\t\"./sr-cyrl.js\": \"E+lV\",\n\t\"./sr.js\": \"zx6S\",\n\t\"./ss\": \"Ur1D\",\n\t\"./ss.js\": \"Ur1D\",\n\t\"./sv\": \"X709\",\n\t\"./sv.js\": \"X709\",\n\t\"./sw\": \"dNwA\",\n\t\"./sw.js\": \"dNwA\",\n\t\"./ta\": \"PeUW\",\n\t\"./ta.js\": \"PeUW\",\n\t\"./te\": \"XLvN\",\n\t\"./te.js\": \"XLvN\",\n\t\"./tet\": \"V2x9\",\n\t\"./tet.js\": \"V2x9\",\n\t\"./tg\": \"Oxv6\",\n\t\"./tg.js\": \"Oxv6\",\n\t\"./th\": \"EOgW\",\n\t\"./th.js\": \"EOgW\",\n\t\"./tk\": \"Wv91\",\n\t\"./tk.js\": \"Wv91\",\n\t\"./tl-ph\": \"Dzi0\",\n\t\"./tl-ph.js\": \"Dzi0\",\n\t\"./tlh\": \"z3Vd\",\n\t\"./tlh.js\": \"z3Vd\",\n\t\"./tr\": \"DoHr\",\n\t\"./tr.js\": \"DoHr\",\n\t\"./tzl\": \"z1FC\",\n\t\"./tzl.js\": \"z1FC\",\n\t\"./tzm\": \"wQk9\",\n\t\"./tzm-latn\": \"tT3J\",\n\t\"./tzm-latn.js\": \"tT3J\",\n\t\"./tzm.js\": \"wQk9\",\n\t\"./ug-cn\": \"YRex\",\n\t\"./ug-cn.js\": \"YRex\",\n\t\"./uk\": \"raLr\",\n\t\"./uk.js\": \"raLr\",\n\t\"./ur\": \"UpQW\",\n\t\"./ur.js\": \"UpQW\",\n\t\"./uz\": \"Loxo\",\n\t\"./uz-latn\": \"AQ68\",\n\t\"./uz-latn.js\": \"AQ68\",\n\t\"./uz.js\": \"Loxo\",\n\t\"./vi\": \"KSF8\",\n\t\"./vi.js\": \"KSF8\",\n\t\"./x-pseudo\": \"/X5v\",\n\t\"./x-pseudo.js\": \"/X5v\",\n\t\"./yo\": \"fzPg\",\n\t\"./yo.js\": \"fzPg\",\n\t\"./zh-cn\": \"XDpg\",\n\t\"./zh-cn.js\": \"XDpg\",\n\t\"./zh-hk\": \"SatO\",\n\t\"./zh-hk.js\": \"SatO\",\n\t\"./zh-mo\": \"OmwH\",\n\t\"./zh-mo.js\": \"OmwH\",\n\t\"./zh-tw\": \"kOpN\",\n\t\"./zh-tw.js\": \"kOpN\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"RnhZ\";","import { Component } from '@angular/core';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {}\n","<router-outlet></router-outlet>","import { Component,Inject ,OnInit } from '@angular/core';\nimport {MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-dialog-second',\n  templateUrl: './dialog-second.component.html',\n  styleUrls: ['./dialog-second.component.scss']\n})\nexport class DialogSecondComponent implements OnInit {\n  data:any\n  dataToSend={\n    selectedAgence:'',\n    selectedAgent:''\n  }\n  constructor(\n    public dialogRef: MatDialogRef<DialogSecondComponent>,\n    @Inject(MAT_DIALOG_DATA) public agences) {\n      this.data = agences.agences\n     }\n\n  ngOnInit(): void {\n  }\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n","<h1 mat-dialog-title>Agence vers Agent</h1>\n<div mat-dialog-content>\n    <mat-form-field appearance=\"fill\">\n        <mat-label>Agence</mat-label>\n        <mat-select [(ngModel)]=\"dataToSend.selectedAgence\">\n            <mat-option *ngFor=\"let agence of data\" [value]='agence.agence'>\n                {{agence.agence}}\n            </mat-option>\n        </mat-select>\n    </mat-form-field>\n    <mat-form-field appearance=\"fill\">\n        <mat-label>Agent</mat-label>\n        <mat-select [(ngModel)]=\"dataToSend.selectedAgent\">\n            <mat-option value='R91'>Agent1</mat-option>\n            <mat-option value='R91'>Agent2</mat-option>\n            <mat-option value='R91'>Agent3</mat-option>\n        </mat-select>\n    </mat-form-field>\n</div>\n<div mat-dialog-actions>\n    <button mat-button (click)=\"onNoClick()\">Annuler</button>\n    <button mat-button [mat-dialog-close]=\"dataToSend\" cdkFocusInitial>Ok</button>\n</div>","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DateAdapter } from '@angular/material/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CallServerService } from 'src/app/services/call-server.service';\nimport { DialogSecondComponent } from '../dialog-second/dialog-second.component';\nimport { DialogComponent } from '../dialog/dialog.component';\nimport { ResultatTraitementComponent } from '../resultat-traitement/resultat-traitement.component';\nimport * as moment from 'moment/moment';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n@Component({\n  selector: 'app-personne-details',\n  templateUrl: './personne-details.component.html',\n  styleUrls: ['./personne-details.component.scss'],\n})\nexport class PersonneDetailsComponent implements OnInit {\n  personne: any;\n  // personneREC = {\n  // typeclient: \"M\",\n  // raisonsociale: \"WhoAmI\",\n  // raisonsocialesuite: \"\",\n  // ice: \"3003003033\",\n  // rcommerce: \"3003003033\",\n  // nifiscale: \"3003003033\",\n  // numpattente: \"3003003033\",\n  // datecreation: \"04/04/2006\",\n  // ribentreprise: \"350810000000000057561622\",\n  // formejuridique: \"B\",\n  // telbureau: \"0667647353\",\n  // adresseentreprise: \"rue avenue ville pays\",\n  // rueentreprise: \"rue\",\n  // quartierentreprise: \"quartier\",\n  // codepostaleentreprise: \"10000\",\n  // villeentreprise: \"ville\",\n  // genre: \"M.\",\n  // nom: \"Radouan\",\n  // prenom: \"FARAH\",\n  // cin: \"TH2021\",\n  // dateexpiration: \"01/01/2025\",\n  // adresse: \"rue avenue ville pays\",\n  // rue: \"rue\",\n  // quartier: \"quartier\",\n  // codepostal: \"10000\",\n  // ville: \"ville\",\n  // teldomicile: \"0638373737\",\n  // telgsm: \"0638373734\",\n  // telprofessionnel: \"0638373737\",\n  // datenaissance: \"01/01/1995\",\n  // situationfamiliale: \"M\",\n  // numrib: \"350810000000000057561622\",\n  // niveauformalisme: 1001,\n  // montantdemande: \"10000\",\n  // nombreecheance: \"12\",\n  // codeagence: \"0002\",\n  // codegestionnaire: \"AWB\",\n  // action: \"REC\"\n  // }\n  agences: any;\n  isAlert: boolean = false;\n  alert: any;\n  // logs: any;\n\n  statusTraitement = [\n    { statut: 'Hors zone agence' },\n    { statut: 'Erronée' },\n    { statut: 'Intéressé' },\n    { statut: 'Non intéressé' },\n    { statut: 'Non éligible' },\n    { statut: 'Injoignable' },\n    { statut: 'Intéressé plustard' },\n  ];\n  url: any;\n  url2: 'sip:0618265025';\n  form: FormGroup;\n  HintNom: string;\n  isHintNom: boolean = false;\n  HintNomAR: string;\n  isHintNomAR: boolean = false;\n  HintPrenom: string;\n  isHintPrenom: boolean = false;\n  HintPrenomAR: string;\n  isHintPrenomAR: boolean = false;\n  HintCIN: string;\n  isHintCIN: boolean = false;\n  HintSituationFamiliale: string;\n  isHintSituationFamiliale: boolean = false;\n  HintAdresse: string;\n  isHintAdresse: boolean = false;\n  HintAdresseAR: string;\n  isHintAdresseAR: boolean = false;\n  HintVille: string;\n  isHintVille: boolean = false;\n  HintVilleAR: string;\n  isHintVilleAR: boolean = false;\n  HintStatutTraitement: string;\n  isHintStatutTraitement: boolean = false;\n  HintGenre: string;\n  isHintGenre: boolean = false;\n  isHintCodeAgence: boolean = false;\n  HintCodeAgence: string;\n  villes: any;\n  villecodeagence: any;\n  isSettingEnded: boolean = false;\n  // codeagence: any;\n  constructor(\n    private router: Router,\n    private snackBar: MatSnackBar,\n    public callServer: CallServerService,\n    public dialog: MatDialog,\n    private dateadapter: DateAdapter<Date>,\n    private activeRoute: ActivatedRoute,\n    private http: HttpClient,\n    private sanitizer: DomSanitizer,\n    private fb: FormBuilder // private server:CallServerService\n  ) {\n    setTimeout(() => {\n      this.isSettingEnded = true;\n    }, 2000);\n    this.dateadapter.setLocale('en-GB'); // dd/MM/YYYY\n    this.activeRoute.data.subscribe((respp) => {\n      this.villes = respp.villes.results;\n      console.log(respp);\n    });\n    this.activeRoute.queryParams.subscribe((res) => {\n      this.personne = res;\n      console.log('le personne',res)\n      let data = {\n        agence: res.agence,\n      };\n      let dataville = {\n        ville: res.ville,\n      };\n      this.callServer.getAgences(dataville).subscribe(\n        (resp: any) => {\n          this.agences = resp.results;\n          console.log(this.agences);\n          this.callServer.getCodeAgence(data).subscribe(\n            (resp: any) => {\n              console.log(resp.results);\n              this.villecodeagence =\n                resp.results.length > 0 ? resp.results[0].codeagence : '';\n              let datenaissance;\n              let datecreation;\n              let dateexpiration;\n              if (this.personne.datenaissance) {\n                datenaissance = new Date(this.personne.datenaissance);\n              }\n              if (this.personne.datecreation) {\n                datecreation = new Date(this.personne.datecreation);\n              }\n              if (this.personne.dateexpiration) {\n                dateexpiration = new Date(this.personne.dateexpiration);\n              }\n\n              //  this.personne.datecreation = this.personne.datecreation && new Date(this.personne.datecreation)\n              //  this.personne.dateexpiration = this.personne.dateexpiration && new Date(this.personne.dateexpiration)\n              this.url = this.sanitizer.bypassSecurityTrustUrl(\n                `sip:${this.personne.telgsm}`\n              );\n              console.log(this.personne.agence);\n              console.log(this.personne.ville);\n              console.log(this.personne.codePostal);\n\n              this.form = this.fb.group({\n                agence: [this.personne.agence],\n                entry_date: [moment(this.personne.entry_date).format('L')],\n                email: [this.personne.email],\n                secteur: [this.personne.secteur],\n                projet: [this.personne.projet],\n                daterendezvous: [null],\n                typeclient: ['P'],\n                raisonsociale: [this.personne.raisonsociale],\n                raisonsocialesuite: [''],\n                ice: [this.personne.ice],\n                rcommerce: [this.personne.rcommerce],\n                nifiscale: [this.personne.nifiscale],\n                numpattente: [this.personne.numpattente],\n                datecreation: [ datecreation],\n                ribentreprise: [this.personne.ribentreprise],\n                formejuridique: [this.personne.formejuridique],\n                telbureau: [this.personne.telbureau],\n                adresseentreprise: [this.personne.adresseentreprise],\n                rueentreprise: [this.personne.rueentreprise],\n                quartierentreprise: [this.personne.quartierentreprise],\n                codepostaleentreprise: [this.personne.codepostaleentreprise],\n                villeentreprise: [this.personne.villeentreprise],\n                genre: ['M.'],\n                nom: [this.personne.nom],\n                prenom: [this.personne.prenom],\n                cin: [this.personne.cin],\n                dateexpiration: [ dateexpiration],\n                adresse: [this.personne.adresse],\n                rue: [this.personne.rue],\n                quartier: [this.personne.quartier],\n                codepostal: [this.personne.codepostal],\n                ville: [res.ville],\n                teldomicile: [this.personne.teldomicile],\n                telgsm: [this.personne.telgsm],\n                telprofessionnel: [this.personne.telprofessionnel],\n                datenaissance: [ datenaissance],\n                situationfamiliale: [this.personne.situationfamiliale],\n                numrib: [this.personne.numrib],\n                niveauformalisme: ['1006'],\n                montantdemande: [this.personne.montantdemande],\n                nombreecheance: [this.personne.nombreecheance],\n                codeagence: [this.villecodeagence],\n                codegestionnaire: ['RSS'],\n                action: ['TEST'],\n                canal: ['107'],\n                codeagencecible: [''],\n                codeorganisme: ['RS'],\n                origine: ['RS'],\n                produit: [''],\n                statutTraitement: [this.personne.resultatTraitement],\n                id_od: [this.personne.id],\n                valeurid: [this.personne.valeurid],\n              });\n            },\n            (err) => console.log(err)\n          );\n        },\n        (err) => console.log(err)\n      );\n    });\n  }\n  getcodeagenes() {\n    let data = {\n      ville: this.form.value.ville,\n    };\n    this.callServer.getAgences(data).subscribe(\n      (resp: any) => {\n        this.agences = resp.results;\n      },\n      (err) => console.log(err)\n    );\n  }\n  ngOnInit(): void {\n    // console.log(this.personne);\n  }\n  show() {\n    console.log(this.form.value);\n  }\n  openDialog(valeurid): void {\n    const dialogRef = this.dialog.open(DialogComponent, {\n      width: '350px',\n      data: { agences: this.agences },\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      console.log('The dialog was closed');\n      let data = {\n        codeagencecible: result,\n        valeurid,\n      };\n      this.callServer.setAgence(data).subscribe(\n        (res) => {\n          console.log(res);\n        },\n        (err) => {\n          if (err.status === 441) {\n            alert('successfuly set');\n          } else alert('error');\n        }\n      );\n    });\n  }\n\n  openDialogSecond(valeurid): void {\n    const dialogRef = this.dialog.open(DialogSecondComponent, {\n      width: '350px',\n      data: { agences: this.agences },\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      console.log('The dialog was closed');\n      let data = {\n        codeagencecible: result.selectedAgence,\n        valeurid,\n        codegestionnairecible: result.selectedAgent,\n      };\n      this.callServer.setAgenceEtAgent(data).subscribe(\n        (res) => {\n          console.log(res);\n        },\n        (err) => {\n          if (err.status === 443) {\n            alert('successfully set');\n          } else alert('error');\n        }\n      );\n    });\n  }\n  getStatut(numtiers, codegestionnaire) {\n    let data = {\n      numTier: numtiers,\n      codeGest: codegestionnaire,\n    };\n    this.callServer.getStatus(data).subscribe(\n      (res: any) => {\n        this.isAlert = true;\n        this.alert = res.EMP.Demande[0].statut;\n      },\n      (err) => {\n        console.log(err);\n      }\n    );\n  }\n  sendToEvolan() {\n    let personne = this.form.value;\n    console.log(personne);\n    if (personne.datenaissance){\n      personne.datenaissance =  moment(personne.datenaissance).format('L')\n    }\n    if (personne.datecreation){\n      personne.datecreation =  moment(personne.datecreation).format('L')\n    }\n    if (personne.dateexpiration){\n      personne.dateexpiration =  moment(personne.dateexpiration).format('L')\n    }\n    if (personne.daterendezvous){\n      personne.daterendezvous =  moment(personne.daterendezvous).format('L')\n    }\n    if (personne.statutTraitement) {\n      if (personne.statutTraitement === 'Intéressé') {\n        personne.action = 'REC';\n        var arabicCharUnicodeRange = /[\\u0600-\\u06FF]/;\n        console.log('recording...');\n        if (!personne.nom) {\n          console.log('le nom est obligatoire');\n          this.HintNom = 'le nom est obligatoire';\n          this.isHintNom = true;\n          return;\n        } else if (\n          arabicCharUnicodeRange.test(\n            String.fromCharCode(personne.nom.charCodeAt(0))\n          )\n        ) {\n          this.HintNomAR = 'le nom doit être en francais';\n          this.isHintNomAR = true;\n          return;\n        }\n        if (!personne.prenom) {\n          this.HintPrenom = 'le prenom est obligatoire';\n          this.isHintPrenom = true;\n          return;\n        } else if (\n          arabicCharUnicodeRange.test(\n            String.fromCharCode(personne.prenom.charCodeAt(0))\n          )\n        ) {\n          this.HintPrenomAR = 'le prenom doit être en francais';\n          this.isHintPrenomAR = true;\n          return;\n        }\n        if (!personne.genre) {\n          this.HintGenre = 'le genre est obligatoire';\n          this.isHintGenre = true;\n          return;\n        }\n        if (!personne.cin) {\n          this.HintCIN = 'le cin est obligatoire';\n          this.isHintCIN = true;\n          return;\n        }\n        if (!personne.situationfamiliale) {\n          this.HintSituationFamiliale =\n            'la situation familiale est obligatoire';\n          this.isHintSituationFamiliale = true;\n          return;\n        }\n        if (!personne.codeagence) {\n          this.HintCodeAgence = 'le Code Agence est obligatoire';\n          this.isHintCodeAgence = true;\n          return;\n        }\n        if (!personne.adresse) {\n          this.HintAdresse = \"l'adresse est obligatoire\";\n          this.isHintAdresse = true;\n          return;\n        } else if (\n          arabicCharUnicodeRange.test(\n            String.fromCharCode(personne.adresse.charCodeAt(0))\n          )\n        ) {\n          this.HintAdresseAR = \"l'adresse doit être en francais\";\n          this.isHintAdresseAR = true;\n          return;\n        }\n        if (!personne.ville) {\n          this.HintVille = 'la ville est obligatoire';\n          this.isHintVille = true;\n          return;\n        } else if (\n          arabicCharUnicodeRange.test(\n            String.fromCharCode(personne.ville.charCodeAt(0))\n          )\n        ) {\n          this.HintVilleAR = 'la ville doit être en francais';\n          this.isHintVilleAR = true;\n          return;\n        }\n        this.isSettingEnded = false;\n        this.callServer.sendToEvolan(personne).subscribe(\n          (res: any) => {\n            this.router.navigate(['home']).then(() => {\n              let snackBarRef = this.snackBar.open(\n                'Demande enregistrer avec ID :' + res.msg,\n                'OK',\n                {\n                  duration: 15000,\n                  horizontalPosition: 'center',\n                  verticalPosition: 'bottom',\n                  panelClass: 'successClassSnack',\n                }\n              );\n              snackBarRef.onAction().subscribe(() => {\n                snackBarRef.dismiss();\n              });\n            });\n          },\n          (err) => {\n            if (err.status === 500) {\n              let snackBarRef = this.snackBar.open('une erreur est survenue, veuillez réessayer plustard', 'OK', {duration:15000, horizontalPosition:'center', verticalPosition:'top'});\n              snackBarRef.onAction().subscribe(()=>{\n                snackBarRef.dismiss()\n              })\n            }else {\n            this.isSettingEnded = true;\n\n            err.error.forEach((an) => {\n              let snackBarRef = this.snackBar.open(\n                an.champ + an.anomalie,\n                'OK',\n                {\n                  duration: 15000,\n                  horizontalPosition: 'center',\n                  verticalPosition: 'top',\n                }\n              );\n              snackBarRef.onAction().subscribe(() => {\n                snackBarRef.dismiss();\n              });\n            });\n          }\n          }\n        );\n      } else {\n        if (personne.statutTraitement === 'nouvelle') {\n          console.log('please insert a status');\n          this.HintStatutTraitement = 'le statut de traitement est obligatoire';\n          this.isHintStatutTraitement = true;\n        } else {\n          personne.action = 'TEST';\n          this.isSettingEnded = false;\n\n          this.callServer.sendToEvolan(personne).subscribe(\n            (res: any) => {\n              this.router.navigate(['home']).then(() => {\n                let snackBarRef = this.snackBar.open(\n                  'Demande enregistrer avec ID :' + res.msg,\n                  'OK',\n                  {\n                    duration: 15000,\n                    horizontalPosition: 'center',\n                    verticalPosition: 'bottom',\n                    panelClass: 'successClassSnack',\n                  }\n                );\n                snackBarRef.onAction().subscribe(() => {\n                  snackBarRef.dismiss();\n                });\n              });\n            },\n            (err) => {\n              this.isSettingEnded = true;\n\n              err.error.forEach((an) => {\n                let snackBarRef = this.snackBar.open(\n                  an.champ + an.anomalie,\n                  'OK',\n                  {\n                    duration: 15000,\n                    horizontalPosition: 'center',\n                    verticalPosition: 'top',\n                  }\n                );\n                snackBarRef.onAction().subscribe(() => {\n                  snackBarRef.dismiss();\n                });\n              });\n            }\n          );\n        }\n      }\n    } else {\n      console.log('please insert a status');\n      this.HintStatutTraitement = 'le statut de traitement est obligatoire';\n      this.isHintStatutTraitement = true;\n    }\n  }\n\n  openDialogResultatTraitement(valeurid): void {\n    const dialogRef = this.dialog.open(ResultatTraitementComponent, {\n      width: '350px',\n      data: this.statusTraitement,\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      console.log('The dialog was closed');\n      let data = {\n        resultatTraitement: result,\n        valeurid,\n      };\n      this.callServer.setResutlatTraitement(data).subscribe(\n        (res) => {\n          this.alert('successfully sent');\n        },\n        (err) => {\n          this.alert('error');\n        }\n      );\n    });\n  }\n}\n","<div class=\"nbrappel\" *ngIf=\"personne.resultatTraitement != 'nouvelle'\">\n  <p>\n    Nombre appels:\n    {{\n      personne.nbrappel\n    }}\n  </p>\n</div>\n<div class=\"resultatTraitement\">\n  <p>\n    {{\n      personne.resultatTraitement === \"nouvelle\"\n        ? \"Nouvelle demande\"\n        : personne.resultatTraitement\n    }}\n  </p>\n</div>\n<div class=\"resultatEvolan\">\n  <p>\n    {{\n      personne.personnePhysiqueError\n    }}\n  </p>\n</div>\n<mat-spinner style=\"margin: 0 auto;\"  *ngIf=\"!isSettingEnded\"></mat-spinner>\n\n<form class=\"form\" [formGroup]=\"form\" *ngIf=\"isSettingEnded\">\n  <div>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Nom</mat-label>\n      <input\n        type=\"text\"\n        maxlength=\"32\"\n        minlength=\"3\"\n        formControlName=\"nom\"\n        matInput\n      />\n      <mat-hint style=\"color: crimson\" *ngIf=\"isHintNom\">{{\n        HintNom\n      }}</mat-hint>\n      <mat-hint style=\"color: crimson\" *ngIf=\"isHintNomAR\">{{\n        HintNomAR\n      }}</mat-hint>\n    </mat-form-field>\n  </div>\n\n  <div>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Prénom</mat-label>\n      <input\n        type=\"text\"\n        maxlength=\"32\"\n        minlength=\"3\"\n        formControlName=\"prenom\"\n        matInput\n      />\n      <mat-hint style=\"color: crimson\" *ngIf=\"isHintPrenom\">{{\n        HintPrenom\n      }}</mat-hint>\n      <mat-hint style=\"color: crimson\" *ngIf=\"isHintPrenomAR\">{{\n        HintPrenomAR\n      }}</mat-hint>\n    </mat-form-field>\n  </div>\n\n  <div>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Genre</mat-label>\n      <mat-select formControlName=\"genre\">\n        <mat-option value=\"M.\"> Monsieur </mat-option>\n        <mat-option value=\"MME\"> Madame </mat-option>\n      </mat-select>\n      <mat-hint style=\"color: crimson\" *ngIf=\"isHintGenre\">{{\n        HintGenre\n      }}</mat-hint>\n    </mat-form-field>\n  </div>\n\n  <div>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Date Naissance</mat-label>\n      <input\n        formControlName=\"datenaissance\"\n        matInput\n        [matDatepicker]=\"datenaisscepicker\"\n      />\n      <mat-datepicker-toggle\n        matSuffix\n        [for]=\"datenaisscepicker\"\n      ></mat-datepicker-toggle>\n      <mat-datepicker #datenaisscepicker></mat-datepicker>\n      <mat-hint style=\"color: crimson\" *ngIf=\"false\">Hint</mat-hint>\n    </mat-form-field>\n  </div>\n  <div>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Situation Familiale</mat-label>\n      <mat-select formControlName=\"situationfamiliale\">\n        <mat-option value=\"M\"> Marié </mat-option>\n        <mat-option value=\"C\"> Célibataire </mat-option>\n      </mat-select>\n      <mat-hint style=\"color: crimson\" *ngIf=\"isHintSituationFamiliale\">{{\n        HintSituationFamiliale\n      }}</mat-hint>\n    </mat-form-field>\n  </div>\n  <div>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>CIN</mat-label>\n      <input\n        type=\"text\"\n        maxlength=\"15\"\n        minlength=\"3\"\n        formControlName=\"cin\"\n        matInput\n      />\n      <mat-hint style=\"color: crimson\" *ngIf=\"isHintCIN\">{{\n        HintCIN\n      }}</mat-hint>\n    </mat-form-field>\n  </div>\n\n  <div>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Date Expiration</mat-label>\n      <input\n        formControlName=\"dateexpiration\"\n        matInput\n        [matDatepicker]=\"dateexpirationpicker\"\n      />\n      <mat-datepicker-toggle\n        matSuffix\n        [for]=\"dateexpirationpicker\"\n      ></mat-datepicker-toggle>\n      <mat-datepicker #dateexpirationpicker></mat-datepicker>\n      <mat-hint style=\"color: crimson\" *ngIf=\"false\">Hint</mat-hint>\n    </mat-form-field>\n  </div>\n\n  <div>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Adresse</mat-label>\n      <input\n        type=\"text\"\n        maxlength=\"32\"\n        minlength=\"3\"\n        formControlName=\"adresse\"\n        matInput\n      />\n      <mat-hint style=\"color: crimson\" *ngIf=\"isHintAdresse\">{{\n        HintAdresse\n      }}</mat-hint>\n      <mat-hint style=\"color: crimson\" *ngIf=\"isHintAdresseAR\">{{\n        HintAdresseAR\n      }}</mat-hint>\n    </mat-form-field>\n  </div>\n  <div>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Adresse ligne 1</mat-label>\n      <input\n        type=\"text\"\n        maxlength=\"32\"\n        minlength=\"3\"\n        formControlName=\"rue\"\n        matInput\n      />\n      <!-- <mat-hint style=\"color: crimson\" *ngIf=\"isHintAdresse\">{{\n        HintAdresse\n      }}</mat-hint> -->\n    </mat-form-field>\n  </div>\n  <div>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Adresse ligne 2</mat-label>\n      <input\n        type=\"text\"\n        maxlength=\"32\"\n        minlength=\"3\"\n        formControlName=\"quartier\"\n        matInput\n      />\n      <!-- <mat-hint style=\"color: crimson\" *ngIf=\"isHintAdresse\">{{\n        HintAdresse\n      }}</mat-hint> -->\n    </mat-form-field>\n  </div>\n\n  <div>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Ville</mat-label>\n      <mat-select  formControlName=\"ville\" (selectionChange)=\"getcodeagenes()\">\n        <mat-option [value]=\"personne.ville\">{{personne.ville}}</mat-option>\n        <mat-option *ngFor=\"let v of villes\" [value]=\"v.ville\">\n          {{ v.ville }}\n        </mat-option>\n      </mat-select>\n      <mat-hint\n        type=\"text\"\n        style=\"color: crimson\"\n        *ngIf=\"isHintVille\"\n        >{{ HintVille }}</mat-hint\n      >\n      <mat-hint\n      type=\"text\"\n      style=\"color: crimson\"\n      *ngIf=\"isHintVilleAR\"\n      >{{ HintVilleAR }}</mat-hint\n    >\n    </mat-form-field>\n  </div>\n\n  <div>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Code Postal</mat-label>\n      <input\n        type=\"text\"\n        maxlength=\"5\"\n        minlength=\"5\"\n        formControlName=\"codepostal\"\n        matInput\n      />\n      <mat-hint style=\"color: crimson\" *ngIf=\"false\">Hint</mat-hint>\n    </mat-form-field>\n  </div>\n\n  <div>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Agence</mat-label>\n      <mat-select formControlName=\"codeagence\">\n        <mat-option [value]=\"form.value.codeagence\">{{form.value.codeagence?personne.agence:'à choisir...'}}</mat-option>\n        <mat-option *ngFor=\"let agence of agences\" [value]=\"agence.codeagence\">\n          {{ agence.agence }}\n        </mat-option>\n      </mat-select>\n      <mat-hint style=\"color: crimson\" *ngIf=\"isHintCodeAgence\">{{\n        HintCodeAgence\n      }}</mat-hint>\n      <mat-hint style=\"color: crimson\" *ngIf=\"isHintCodeAgenceAR\">{{\n        HintCodeAgenceAR\n      }}</mat-hint>\n    </mat-form-field>\n  </div>\n\n  <div>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Tel Domicile</mat-label>\n      <input\n        type=\"text\"\n        maxlength=\"10\"\n        minlength=\"10\"\n        formControlName=\"teldomicile\"\n        matInput\n      />\n      <mat-hint style=\"color: crimson\" *ngIf=\"false\">Hint</mat-hint>\n    </mat-form-field>\n  </div>\n  <div>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Tel GSM</mat-label>\n      <input\n        type=\"text\"\n        maxlength=\"10\"\n        minlength=\"10\"\n        formControlName=\"telgsm\"\n        matInput\n      />\n      <mat-hint style=\"color: crimson\" *ngIf=\"false\">Hint</mat-hint>\n    </mat-form-field>\n  </div>\n  <div>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Tel Professionnel</mat-label>\n      <input\n        type=\"text\"\n        maxlength=\"10\"\n        minlength=\"10\"\n        formControlName=\"telprofessionnel\"\n        matInput\n      />\n      <mat-hint style=\"color: crimson\" *ngIf=\"false\">Hint</mat-hint>\n    </mat-form-field>\n  </div>\n  <!-- <div>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>typeclient</mat-label>\n      <input formControlName=\"typeclient\" matInput />\n      <mat-hint style=\"color: crimson;\" *ngIf=\"false\">Hint</mat-hint>\n    </mat-form-field>\n  </div> -->\n\n  <!-- <p>{{personne.action}}</p>\n<div>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Identifiant</mat-label>\n      <input [(ngModel)]=\"\" matInput />\n      <mat-hint style=\"color: crimson;\" *ngIf=\"false\">Hint</mat-hint>\n    </mat-form-field>\n  </div> -->\n\n  <!-- <p>{{personne.autoinsert}}</p>\n<div>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Identifiant</mat-label>\n      <input [(ngModel)]=\"\" matInput />\n      <mat-hint style=\"color: crimson;\" *ngIf=\"false\">Hint</mat-hint>\n    </mat-form-field>\n  </div> -->\n\n  <!-- <div>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Canal</mat-label>\n      <input formControlName=\"canal\" matInput />\n      <mat-hint style=\"color: crimson;\" *ngIf=\"false\">Hint</mat-hint>\n    </mat-form-field>\n  </div> -->\n\n  <!-- <div>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>codeagencecible</mat-label>\n      <input formControlName=\"codeagencecible\" matInput />\n      <mat-hint style=\"color: crimson;\" *ngIf=\"false\">Hint</mat-hint>\n    </mat-form-field>\n  </div> -->\n\n  <!-- <div>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>codegestionnaire</mat-label>\n      <input formControlName=\"codegestionnaire\" matInput />\n      <mat-hint style=\"color: crimson;\" *ngIf=\"false\">Hint</mat-hint>\n    </mat-form-field>\n  </div> -->\n\n  <!-- <div>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>codeorganisme</mat-label>\n      <input formControlName=\"codeorganisme\" matInput />\n      <mat-hint style=\"color: crimson;\" *ngIf=\"false\">Hint</mat-hint>\n    </mat-form-field>\n  </div> -->\n\n  <!-- <p>{{personne.dateinsert}}</p>\n<div>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>dateinsert</mat-label>\n      <input [(ngModel)]=\"\" matInput />\n      <mat-hint style=\"color: crimson;\" *ngIf=\"false\">Hint</mat-hint>\n    </mat-form-field>\n  </div> -->\n\n  <!-- <p>{{personne.erreur}}</p>\n<div>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Identifiant</mat-label>\n      <input [(ngModel)]=\"\" matInput />\n      <mat-hint style=\"color: crimson;\" *ngIf=\"false\">Hint</mat-hint>\n    </mat-form-field>\n  </div> -->\n\n  <!-- <p>{{personne.id}}</p>\n<div>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Identifiant</mat-label>\n      <input [(ngModel)]=\"\" matInput />\n      <mat-hint style=\"color: crimson;\" *ngIf=\"false\">Hint</mat-hint>\n    </mat-form-field>\n  </div> -->\n  <!-- <p>{{personne.idstatut}}</p>\n<div>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Identifiant</mat-label>\n      <input [(ngModel)]=\"\" matInput />\n      <mat-hint style=\"color: crimson;\" *ngIf=\"false\">Hint</mat-hint>\n    </mat-form-field>\n  </div> -->\n\n  <div>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Montant Demandé</mat-label>\n      <input\n        type=\"number\"\n        max=\"50000\"\n        min=\"0\"\n        formControlName=\"montantdemande\"\n        matInput\n      />\n      <mat-hint style=\"color: crimson\" *ngIf=\"false\">Hint</mat-hint>\n    </mat-form-field>\n  </div>\n\n  <div>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Nombre d'échéances</mat-label>\n      <input\n        type=\"number\"\n        max=\"24\"\n        min=\"1\"\n        formControlName=\"nombreecheance\"\n        matInput\n      />\n      <mat-hint style=\"color: crimson\" *ngIf=\"false\">Hint</mat-hint>\n    </mat-form-field>\n  </div>\n\n   <!-- <div>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Niveau Formalisme</mat-label>\n      <input formControlName=\"niveauformalisme\" matInput />\n      <mat-hint style=\"color: crimson;\" *ngIf=\"false\">Hint</mat-hint>\n    </mat-form-field>\n  </div>  -->\n\n  <div>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Produit</mat-label>\n      <input formControlName=\"produit\" matInput />\n      <mat-hint style=\"color: crimson\" *ngIf=\"false\">Hint</mat-hint>\n    </mat-form-field>\n  </div>\n  <div>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Secteur</mat-label>\n      <input formControlName=\"secteur\" matInput />\n      <mat-hint style=\"color: crimson\" *ngIf=\"false\">Hint</mat-hint>\n    </mat-form-field>\n  </div>\n  <div>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Projet</mat-label>\n      <input formControlName=\"projet\" matInput />\n      <mat-hint style=\"color: crimson\" *ngIf=\"false\">Hint</mat-hint>\n    </mat-form-field>\n  </div>\n  <div>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Email</mat-label>\n      <input formControlName=\"email\" matInput />\n      <mat-hint style=\"color: crimson\" *ngIf=\"false\">Hint</mat-hint>\n    </mat-form-field>\n  </div>\n\n  <div>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Numéro RIB</mat-label>\n      <input\n        type=\"text\"\n        minlength=\"24\"\n        maxlength=\"24\"\n        formControlName=\"numrib\"\n        matInput\n      />\n      <mat-hint style=\"color: crimson\" *ngIf=\"false\">Hint</mat-hint>\n    </mat-form-field>\n  </div>\n  <!-- <p>{{personne.numtiers}}</p>\n<div>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>numtiers</mat-label>\n      <input [(ngModel)]=\"\" matInput />\n      <mat-hint style=\"color: crimson;\" *ngIf=\"false\">Hint</mat-hint>\n    </mat-form-field>\n  </div> -->\n\n  <!-- <div>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Quartier</mat-label>\n      <input formControlName=\"quartier\" matInput />\n      <mat-hint style=\"color: crimson;\" *ngIf=\"false\">Hint</mat-hint>\n    </mat-form-field>\n  </div> -->\n\n  <!-- <div>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>rue</mat-label>\n      <input formControlName=\"rue\" matInput />\n      <mat-hint style=\"color: crimson;\" *ngIf=\"false\">Hint</mat-hint>\n    </mat-form-field>\n  </div> -->\n\n  <!-- <p>{{personne.source}}</p>\n<div>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Identifiant</mat-label>\n      <input [(ngModel)]=\"\" matInput />\n      <mat-hint style=\"color: crimson;\" *ngIf=\"false\">Hint</mat-hint>\n    </mat-form-field>\n  </div> -->\n\n  <div>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Statut de Traitement</mat-label>\n      <mat-select formControlName=\"statutTraitement\">\n        <mat-option\n          *ngFor=\"let status of statusTraitement\"\n          [value]=\"status.statut\"\n        >\n          {{ status.statut }}\n        </mat-option>\n      </mat-select>\n      <mat-hint style=\"color: crimson\" *ngIf=\"isHintStatutTraitement\">{{\n        HintStatutTraitement\n      }}</mat-hint>\n    </mat-form-field>\n  </div>\n\n  <div>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Date Rendez-Vous</mat-label>\n      <input\n        formControlName=\"daterendezvous\"\n        matInput\n        [matDatepicker]=\"daterendezvouspicker\"\n      />\n      <mat-datepicker-toggle\n        matSuffix\n        [for]=\"daterendezvouspicker\"\n      ></mat-datepicker-toggle>\n      <mat-datepicker #daterendezvouspicker></mat-datepicker>\n      <mat-hint style=\"color: crimson\" *ngIf=\"false\">Hint</mat-hint>\n    </mat-form-field>\n  </div>\n  <!-- <p>{{personne.typeenregistrement}}</p>\n<div>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Identifiant</mat-label>\n      <input [(ngModel)]=\"\" matInput />\n      <mat-hint style=\"color: crimson;\" *ngIf=\"false\">Hint</mat-hint>\n    </mat-form-field>\n  </div> -->\n  <!-- <p>{{personne.valeurid}}</p>\n<div>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Identifiant</mat-label>\n      <input [(ngModel)]=\"\" matInput />\n      <mat-hint style=\"color: crimson;\" *ngIf=\"false\">Hint</mat-hint>\n    </mat-form-field>\n  </div> -->\n\n  <!-- <p>{{personne.personneMoraleGarantError}}</p>\n<div>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Identifiant</mat-label>\n      <input [(ngModel)]=\"\" matInput />\n      <mat-hint style=\"color: crimson;\" *ngIf=\"false\">Hint</mat-hint>\n    </mat-form-field>\n  </div> -->\n  <!-- <p>{{personne.personneMoraleError}}</p>\n<div>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Identifiant</mat-label>\n      <input [(ngModel)]=\"\" matInput />\n      <mat-hint style=\"color: crimson;\" *ngIf=\"false\">Hint</mat-hint>\n    </mat-form-field>\n  </div> -->\n  <!-- <p>{{personne.personnePhysiqueError}}</p>\n<div>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Identifiant</mat-label>\n      <input [(ngModel)]=\"\" matInput />\n      <mat-hint style=\"color: crimson;\" *ngIf=\"false\">Hint</mat-hint>\n    </mat-form-field>\n  </div> -->\n  <!--\n<ul *ngFor=\"let log of logs\">\n    <li>{{log.champ + log.annomalie}}</li>\n</ul>\n-->\n<div class=\"buttons\">\n  <!-- <button (click)=\"openDialog(personne.valeurid)\" mat-raised-button >\n        Affecter Agence\n    </button> -->\n  <!-- <button *ngIf=\"personne.resultatTraitement !='nouvelle'\" (click)=\"openDialogSecond(personne.valeurid)\" mat-raised-button >\n      Affecter Agent\n    </button>\n    <button *ngIf=\"personne.resultatTraitement !='nouvelle'\" (click)=\"getStatut(personne.numtiers, personne.codegestionnaire)\"\n        mat-raised-button >\n         Statut Demande\n    </button>\n    <button *ngIf=\"personne.resultatTraitement !='nouvelle'\" (click)=\"sendToEvolan(personne)\" mat-raised-button >\n        Envoyer à  Evolan\n    </button> -->\n    <br>\n  <button\n    [disabled]=\"form.invalid && statusTraitement === 'Intéressé'\"\n    (click)=\"sendToEvolan()\"\n    mat-raised-button\n    color=\"warn\"\n  >\n    Valider\n  </button>\n  <!-- <button (click)=\"openDialogResultatTraitement(personne.valeurid)\" mat-raised-button >\n       Resultat Traitement\n    </button> -->\n\n  <a mat-raised-button [href]=\"url\">Appeler</a>\n</div>\n</form>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './pages/login/login.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {MatTableExporterModule } from 'mat-table-exporter';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatListModule } from '@angular/material/list';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { HomeComponent } from './pages/home/home.component';\nimport { MainNavComponent } from './components/main-nav/main-nav.component';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { PersonnePhysiqueComponent } from './components/personne-physique/personne-physique.component';\nimport { PersonneMoraleComponent } from './components/personne-morale/personne-morale.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule,HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { TokenInterceptorService } from './services/token-interceptor.service';\nimport {MatNativeDateModule} from '@angular/material/core';\nimport { RegisterComponent } from './pages/register/register.component';\nimport { PersonnePhysiqueGestionnaireComponent } from './components/personne-physique-gestionnaire/personne-physique-gestionnaire.component';\nimport { PersonneMoraleGestionnaireComponent } from './components/personne-morale-gestionnaire/personne-morale-gestionnaire.component';\nimport { PersonneDetailsComponent } from './components/personne-details/personne-details.component';\nimport { DialogComponent } from './components/dialog/dialog.component';\nimport { DialogSecondComponent } from './components/dialog-second/dialog-second.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { ResultatTraitementComponent } from './components/resultat-traitement/resultat-traitement.component';\nimport {SafeHtmlPipe} from './santi.pipe'\n\nconst MaterialAngularModules = [\n  MatCheckboxModule,\n  MatButtonModule,\n  MatInputModule,\n  MatAutocompleteModule,\n  MatDatepickerModule,\n  MatFormFieldModule,\n  MatRadioModule,\n  MatSelectModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatMenuModule,\n  MatSidenavModule,\n  MatToolbarModule,\n  MatListModule,\n  MatGridListModule,\n  MatCardModule,\n  MatStepperModule,\n  MatTabsModule,\n  MatExpansionModule,\n  MatButtonToggleModule,\n  MatChipsModule,\n  MatIconModule,\n  MatProgressSpinnerModule,\n  MatProgressBarModule,\n  MatDialogModule,\n  MatTooltipModule,\n  MatSnackBarModule,\n  MatTableModule,\n  MatSortModule,\n  MatPaginatorModule,\n  MatNativeDateModule\n];\n\n@NgModule({\n  declarations: [AppComponent, LoginComponent, HomeComponent, MainNavComponent, PersonnePhysiqueComponent, PersonneMoraleComponent, RegisterComponent, PersonnePhysiqueGestionnaireComponent, PersonneMoraleGestionnaireComponent, PersonneDetailsComponent, DialogComponent, DialogSecondComponent, ResultatTraitementComponent, SafeHtmlPipe],\n  imports: [MatTableExporterModule, HttpClientModule,BrowserModule,FormsModule,ReactiveFormsModule, AppRoutingModule, BrowserAnimationsModule, MaterialAngularModules, LayoutModule, MatToolbarModule, MatButtonModule, MatSidenavModule, MatIconModule, MatListModule, NgbModule],\n  providers: [{\n    provide:HTTP_INTERCEPTORS,\n    useClass:TokenInterceptorService,\n    multi:true\n  }],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\ndeclare var window: any;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DatabaseService {\n  Database: any;\n  organismes: any;\n  agences: any;\n  CodePostales: any;\n  constructor(private http: HttpClient) {\n    if (window.openDatabase !== undefined) {\n      const db = window.openDatabase(\n        'OpenDataDB.db',\n        '1.0',\n        'DEV',\n        100 * 1024 * 1024\n      );\n      this.Database = db;\n    }\n    this.http\n    .get('https://192.168.140.30:3132/api/getCodePostales')\n    .subscribe((res: any) => {\n      this.CodePostales = res.results;\n      if (window.openDatabase === undefined) {\n        localStorage.setItem('CodePostales', JSON.stringify(this.CodePostales));\n      } else {\n        const db = window.openDatabase(\n          'OpenDataDB.db',\n          '1.0',\n          'DEV',\n          100 * 1024 * 1024\n        );\n        this.Database = db;\n        this.InsertCodePostalVille(this.CodePostales);\n      }\n    });\n    this.http\n      .get('https://192.168.140.30:3132/api/getListOrganisme')\n      .subscribe((res: any) => {\n        this.organismes = res;\n        if (window.openDatabase === undefined) {\n          localStorage.setItem('organismes', JSON.stringify(this.organismes));\n        } else {\n          const db = window.openDatabase(\n            'OpenDataDB.db',\n            '1.0',\n            'DEV',\n            100 * 1024 * 1024\n          );\n          this.Database = db;\n          this.InsertOrganisme(this.organismes);\n        }\n      });\n    this.http\n      .get('https://192.168.140.30:3132/api/getListALLAgence')\n      .subscribe((res: any) => {\n        this.agences = res;\n        if (window.openDatabase === undefined) {\n          localStorage.setItem('agences', JSON.stringify(this.agences));\n        } else {\n          const db = window.openDatabase(\n            'OpenDataDB.db',\n            '1.0',\n            'DEV',\n            100 * 1024 * 1024\n          );\n          this.Database = db;\n          this.InsertAgence(this.agences);\n        }\n      });\n  }\n  InsertAgence(agences) {\n    this.Database.transaction((SQLtransaction) => {\n      const CreationQuery =\n        \"CREATE TABLE IF NOT EXISTS 'agences' (codeorganisme text,codeagence text PRIMARY KEY,agence text)\";\n      SQLtransaction.executeSql(\n        CreationQuery,\n        [],\n        (transaction, resultSet) => {\n          agences.forEach((agence) => {\n            const InsertionQuery = `REPLACE into 'agences' (codeorganisme, codeagence, agence)  values('${agence.codeorganisme}','${agence.codeagence}','${agence.agence}' )`;\n            SQLtransaction.executeSql(\n              InsertionQuery,\n              [],\n              (transaction, resultSet) => {},\n              (transaction, error) => {\n                console.log('Error inserting agences', error);\n              }\n            );\n          });\n        },\n        (transaction, error) => {\n          console.log('Error creating agences', error);\n        }\n      );\n    });\n  }\n  InsertOrganisme(organismes) {\n    this.Database.transaction((SQLtransaction) => {\n      const CreationQuery =\n        \"CREATE TABLE IF NOT EXISTS 'organismes' (codeorganisme text PRIMARY KEY,organisme text)\";\n      SQLtransaction.executeSql(\n        CreationQuery,\n        [],\n        (transaction, resultSet) => {\n          organismes.forEach((organisme) => {\n            const InsertionQuery = `REPLACE into 'organismes' (codeorganisme, organisme)  values('${organisme.codeorganisme}','${organisme.organisme}' )`;\n            SQLtransaction.executeSql(\n              InsertionQuery,\n              [],\n              (transaction, resultSet) => {},\n              (transaction, error) => {\n                console.log('Error inserting organismes', error);\n              }\n            );\n          });\n        },\n        (transaction, error) => {\n          console.log('Error inserting organismes', error);\n        }\n      );\n    });\n  }\n\n  getOrganismes() {\n    return new Promise((resolve, reject) => {\n      if (this.Database === undefined) {\n        resolve(JSON.parse(localStorage.getItem('organismes')))\n      }else{\n        this.Database.transaction((SQLtransaction) => {\n          const GettingQuery = 'select codeorganisme, organisme from organismes;';\n          SQLtransaction.executeSql(\n            GettingQuery,\n            [],\n            (transaction, resultSet) => {\n              resolve(resultSet);\n            },\n            (transaction, error) => {\n              console.log('Error getting organismes', error);\n              reject(error);\n            }\n          );\n        });\n      }\n    });\n  }\n  getAgenceByOrganisme(organisme) {\n    return new Promise((resolve, reject) => {\n      if (this.Database === undefined){\n        let agences:any[] = JSON.parse(localStorage.getItem('agences'))\n        let filtredAgences = agences.filter(agence=>agence.codeorganisme===organisme)\n        resolve(filtredAgences)\n      }else{\n        this.Database.transaction((SQLtransaction) => {\n          const GettingQuery = `select codeagence, agence from agences where codeorganisme='${organisme}';`;\n          SQLtransaction.executeSql(\n            GettingQuery,\n            [],\n            (transaction, resultSet) => {\n              resolve(resultSet);\n            },\n            (transaction, error) => {\n              console.log(\n                `Error getting agence by organisme ${organisme}`,\n                error\n              );\n              reject(error);\n            }\n          );\n        }); \n      }\n    });\n  }\n\n  InsertCodePostalVille(data) {\n    this.Database.transaction((SQLtransaction) => {\n      const CreationQuery =\n        `CREATE TABLE IF NOT EXISTS villecodepostale (\n          'id' INT NOT NULL AUTO_INCREMENT,\n          'ville' VARCHAR(45) NULL DEFAULT NULL,\n          'codePostale' VARCHAR(45) NULL DEFAULT NULL,\n          PRIMARY KEY ('id'));`\n      SQLtransaction.executeSql(\n        CreationQuery,\n        [],\n        (transaction, resultSet) => {\n          data.forEach((row) => {\n            const InsertionQuery = `REPLACE into 'villecodepostale' (ville, codePostale)  values('${row.ville}','${row.codePostale}' )`;\n            SQLtransaction.executeSql(\n              InsertionQuery,\n              [],\n              (transaction, resultSet) => {\n                console.log('inserted')\n              },\n              (transaction, error) => {\n                console.log('Error inserting ville with there codepostales', error);\n              }\n            );\n          });\n        },\n        (transaction, error) => {\n          console.log('Error inserting ville with there codepostales', error);\n        }\n      );\n    });\n  }\n  getCodePostaleByVille(ville:string) {\n    return new Promise((resolve, reject) => {\n      if (this.Database === undefined){\n        console.log('from local storage')\n        let CodePostales:any[] = JSON.parse(localStorage.getItem('CodePostales'))\n        console.log('Ville : ', ville.toUpperCase().replace('É','E').replace('È','E'))\n        let filtredCodePostales = CodePostales.filter(row=>row.ville===ville.toUpperCase().replace('É','E').replace('È','E'))\n        resolve(filtredCodePostales)\n      }else{\n        console.log('from local database ')\n        this.Database.transaction((SQLtransaction) => {\n          const GettingQuery = `select codePostal from villecodepostale where ville='${ville}';`;\n          SQLtransaction.executeSql(\n            GettingQuery,\n            [],\n            (transaction, resultSet) => {\n              resolve(resultSet);\n            },\n            (transaction, error) => {\n              console.log(\n                `Error getting codePostal by ville : ${ville}`,\n                error\n              );\n              reject(error);\n            }\n          );\n        });\n      } \n    });\n  }\n}\n","import { Component } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-main-nav',\n  templateUrl: './main-nav.component.html',\n  styleUrls: ['./main-nav.component.scss'],\n})\nexport class MainNavComponent {\n  // isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n  //   .pipe(\n  //     map(result => result.matches),\n  //     shareReplay()\n  //   );\n  isHandset$ = false;\n  role: string;\n  isBO: boolean;\n  isAGENT: boolean;\n  isCLIENT: boolean;\n  isHome: boolean = true;\n\n  constructor(\n    private breakpointObserver: BreakpointObserver,\n    private route: Router,\n    private location: Location\n  ) {\n    this.isHome = this.route.url !== '/home';\n    this.role = localStorage.getItem('role');\n    console.log('isBO: ', this.role === 'BO');\n    this.isBO = this.role === 'BO';\n    this.isAGENT = this.role === 'AGENT';\n    this.isCLIENT = this.role === 'CLIENT';\n  }\n\n  back(): void {\n    if (this.route.url.startsWith('/home')) {\n      this.route.routeReuseStrategy.shouldReuseRoute = () => false;\n      this.route.navigate(['home']).then(()=>this.route.onSameUrlNavigation = 'reload')\n    }\n  }\n  async logout() {\n    await localStorage.clear();\n    console.log('cleared');\n    setTimeout(() => {\n      this.route.navigate(['login']);\n    }, 1000);\n  }\n}\n","<mat-sidenav-container class=\"sidenav-container\">\n    <mat-sidenav #drawer class=\"sidenav\" fixedInViewport [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\n        [mode]=\"(isHandset$ | async) ? 'over' : 'side'\">\n        <mat-toolbar>\n            <button type=\"button\" aria-label=\"Toggle sidenav\" mat-icon-button (click)=\"drawer.toggle()\"\n                *ngIf=\"isHandset$ | async\">\n                <mat-icon aria-label=\"Side nav toggle icon\">close</mat-icon>\n            </button>\n            <span style=\"color: darkblue\">Menu</span>\n            \n        </mat-toolbar>\n        <mat-nav-list>\n            <!-- <a *ngIf=\"isCLIENT\" (click)=\"drawer.toggle()\" mat-list-item [routerLink]=\"['pp']\">\n                <mat-icon>person</mat-icon> Personne Physique</a>\n            <a *ngIf=\"isCLIENT\" (click)=\"drawer.toggle()\" mat-list-item [routerLink]=\"['pm']\">\n                <mat-icon>domain</mat-icon> Personne Morale</a>\n            <a *ngIf=\"isBO\" (click)=\"drawer.toggle()\" mat-list-item [routerLink]=\"['ppg']\">\n                <mat-icon>person</mat-icon> Personne Physique</a> -->\n            <!-- <a *ngIf=\"isBO\" (click)=\"drawer.toggle()\" mat-list-item [routerLink]=\"['pmg']\">\n                <mat-icon>person</mat-icon> Personne Morale</a> -->\n        </mat-nav-list>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"sidenav-content\">\n        <mat-toolbar color=\"warn\">\n            <button type=\"button\" aria-label=\"Toggle sidenav\" mat-icon-button (click)=\"drawer.toggle()\"\n                *ngIf=\"isHandset$ | async\">\n                <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\n            </button>\n            <button *ngIf=\"isHome\" class=\"goback\" (click)=\"back()\"><mat-icon>arrow_back</mat-icon></button>\n            <span class=\"slag\">Al Amana OpenDATA</span>\n            <span class=\"spacer\"></span>\n            <!-- <a *ngIf=\"isCLIENT\" [routerLink]=\"['pp']\" [ngClass]=\"{ hidden: isHandset$ | async }\" class=\"mat-button mat-button-base\" aria-disabled=\"false\"><span class=\"mat-button-wrapper\">Personne Physique</span\n        ><span class=\"mat-button-focus-overlay\"></span\n      ></a>\n            <a *ngIf=\"isCLIENT\" [routerLink]=\"['pm']\" [ngClass]=\"{ hidden: isHandset$ | async }\" class=\"mat-button mat-button-base\" aria-disabled=\"false\"><span class=\"mat-button-wrapper\">Personne Morale</span\n        ><span class=\"mat-button-focus-overlay\"></span\n      ></a>\n            <a *ngIf=\"isBO\" [routerLink]=\"['ppg']\" [ngClass]=\"{ hidden: isHandset$ | async }\" class=\"mat-button mat-button-base\" aria-disabled=\"false\"><span class=\"mat-button-wrapper\">Personne Physique</span\n        ><span class=\"mat-button-focus-overlay\"></span\n      ></a> -->\n            <!-- <a *ngIf=\"isBO\" [routerLink]=\"['pmg']\" [ngClass]=\"{ hidden: isHandset$ | async }\" class=\"mat-button mat-button-base\" aria-disabled=\"false\"><span class=\"mat-button-wrapper\">Personne Morale</span\n        ><span class=\"mat-button-focus-overlay\"></span\n      ></a> -->\n            <button (click)=\"logout()\" mat-icon-button>\n                <mat-icon>exit_to_app</mat-icon>\n            </button>\n        </mat-toolbar>\n        <ng-content></ng-content>\n    </mat-sidenav-content>\n</mat-sidenav-container>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CallServerService {\n\n  constructor(private http:HttpClient) { }\n  setAgence(data){\n    return this.http.post('https://192.168.140.30:3132/api/setAgence',data)\n  }\n  setAgenceEtAgent(data){\n    return this.http.post('https://192.168.140.30:3132/api/setAgenceEtAgent',data)\n  }\n  getStatus(data){\n    return this.http.post('http://localhost:3737/users/getStatut',data)\n  }\n  sendToEvolan(data){\n    return this.http.post('https://192.168.140.30:3132/api/ajouterPersonnePhysiqueRS',data)\n  }\n  updatePersonne(data){\n    return this.http.post('https://192.168.140.30:3132/api/updatePersonne',data)\n  }\n  setResutlatTraitement(data){\n    return this.http.post('https://192.168.140.30:3132/api/setResultatTraitement', data)\n  }\n  getAgences(data){\n    return this.http.post('https://192.168.140.30:3132/api/getAgencesRS', data)\n  }\n  getCodeAgence(data){\n    return this.http.post('https://192.168.140.30:3132/api/getCodeAgence', data)\n  }\n  getCodePostalParVille(data){\n    return this.http.post('https://192.168.140.30:3132/api/getCodePostalParVille', data)\n  }\n  // getLogs(data){\n  //   return this.http.post('https://192.168.140.30:3132/api/getLogs',data)\n  // }\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { PpDataService } from 'src/app/services/ppdata.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DialogComponent } from '../dialog/dialog.component';\nimport { DialogSecondComponent } from '../dialog-second/dialog-second.component';\nimport { CallServerService } from 'src/app/services/call-server.service';\nimport { ResultatTraitementComponent } from '../resultat-traitement/resultat-traitement.component';\n\n@Component({\n  selector: 'app-personne-physique-gestionnaire',\n  templateUrl: './personne-physique-gestionnaire.component.html',\n  styleUrls: ['./personne-physique-gestionnaire.component.scss'],\n})\nexport class PersonnePhysiqueGestionnaireComponent implements OnInit {\n  status = [\n    { value: '', viewValue: 'Tous' },\n    { value: 'encours', viewValue: 'En Cours' },\n    { value: 'valide', viewValue: 'Validé' },\n    { value: 'rejete', viewValue: 'Rejeté' },\n    { value: 'decaisse', viewValue: 'Decaissé' },\n  ];\n  statusTraitement = [\n    {statut:'Hors Zone'},\n    {statut:'Erronée'}\n  ]\n  selectedValue: string = '';\n  selectedValueSearch!: string;\n  displayedColumns: string[] = [\n    'numtiers',\n    'numerodossier',\n    'resultatTraitement',\n    'nom',\n    'prenom',\n    'telgsm',\n    'ncin',\n    'statuttraitement',\n    'valeurid',\n    'codeagencecible',\n    'erreur',\n    'options',\n  ];\n  dataSource: any;\n  @ViewChild(MatSort) sort!: MatSort;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  focused: boolean = false;\n  agences: any;\n  agent: any;\n  selectedAgence: any;\n  dataFromDialog: any;\n  alert: any;\n  isAlert: boolean = false;\n  selectedStatut: any;\n  constructor(\n    public callServer: CallServerService,\n    public dialog: MatDialog,\n    private PpDataService: PpDataService,\n    private activatedRoute: ActivatedRoute,\n    private route: Router\n  ) {\n    this.agences = this.activatedRoute.snapshot.data['agences'];\n    this.activatedRoute.data.subscribe((res : any) => {\n      let personnes = res.pps\n      personnes.forEach(element => {\n          element.erreur = element.personnePhysiqueError?1:0\n      });\n      this.dataSource = new MatTableDataSource(personnes);\n    });\n  }\n\n  ngOnInit(): void {}\n  reloadComponent() {\n    let currentUrl = this.route.url;\n    this.route.routeReuseStrategy.shouldReuseRoute = () => false;\n    this.route.onSameUrlNavigation = 'reload';\n    this.route.navigate([currentUrl]);\n  }\n\n  openDialog(valeurid): void {\n    const dialogRef = this.dialog.open(DialogComponent, {\n      width: '350px',\n      data: { agences: this.agences },\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      console.log('The dialog was closed');\n      this.selectedAgence = result;\n      let data = {\n        codeagencecible: result,\n        valeurid,\n      };\n      this.callServer.setAgence(data).subscribe(\n        (res) => {\n          console.log(res);\n        },\n        (err) => {\n          if (err.status === 441) {\n            this.reloadComponent();\n          }\n        }\n      );\n    });\n  }\n  openDialogResultatTraitement(valeurid): void {\n    const dialogRef = this.dialog.open(ResultatTraitementComponent, {\n      width: '350px',\n      data:this.statusTraitement,\n    });\n  \n    dialogRef.afterClosed().subscribe((result) => {\n      console.log('The dialog was closed');\n      this.selectedStatut = result;\n      let data = {\n        resultatTraitement: result,\n        valeurid,\n      };\n      this.callServer.setResutlatTraitement(data).subscribe(\n        (res) => {\n          this.reloadComponent();\n          console.log(res);\n        },\n        (err) => {\n          \n            console.log(err)\n          \n        }\n      );\n    });\n  }\n\n\n  openDialogSecond(valeurid): void {\n    const dialogRef = this.dialog.open(DialogSecondComponent, {\n      width: '350px',\n      data: { agences: this.agences },\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      console.log('The dialog was closed');\n      this.dataFromDialog = result;\n      console.log(result)\n      let data = {\n        codeagencecible: result.selectedAgence,\n        valeurid,\n        codegestionnairecible: result.selectedAgent,\n      };\n      this.callServer.setAgenceEtAgent(data).subscribe(\n        (res) => {\n          console.log(res);\n        },\n        (err) => {\n          if (err.status === 443) {\n            this.reloadComponent();\n          }\n          else alert('error')\n        }\n      );\n    });\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.sort = this.sort;\n    this.dataSource.paginator = this.paginator;\n  }\n\n  onChange() {\n    console.log(this.selectedValue);\n    this.dataSource.filter = this.selectedValue.trim().toLowerCase();\n  }\n\n  makeItFocused(e: any) {\n    this.focused = e.tab.isActive;\n  }\n  keyDownFunction(event: any) {\n    if (event.keyCode == 13) {\n      this.searchByCode();\n    }\n  }\n\n  searchByCode() {\n    console.log(this.selectedValueSearch);\n  }\n  send(personne) {\n    this.route.navigate(['home/details'], { queryParams: personne });\n  }\n\n  getStatut(numtiers, codegestionnaire){\n    let data = {\n      numTier:numtiers,\n      codeGest:codegestionnaire\n    }\n    this.callServer.getStatus(data).subscribe((res:any)=>{\n      this.isAlert = true\n      this.alert = res.EMP.Demande[0].statut\n    },(err)=>{\n      console.log(err)\n    })\n  }\n\n  sendToEvolan(personne){\n    this.callServer.sendToEvolan(personne).subscribe((res:any)=>{\n      let body = {\n        data:res,\n        valeurid:personne.valeurid\n      }\n      console.log('body to send',body)\n      // this.callServer.updatePersonne(body).subscribe((res)=>{\n      //   console.log(res)\n      //   this.reloadComponent();\n      // }, (err)=>{\n      //   console.log('error from 3131',err)\n      // })\n    },(err)=>{\n      console.log('error from 3737',err)\n    })\n  }\n  \n}\n","<mat-tab-group class=\"one\" (selectedTabChange)=\"makeItFocused($event)\" color=\"warn\">\n    <!-- Personne Physique  -->\n\n    <mat-tab label=\"Personne Physique\">\n        <!-- Filter by statut-->\n        <mat-form-field class=\"filter\" appearance=\"fill\">\n            <mat-label>Filtrer par statut</mat-label>\n            <mat-select [(ngModel)]=\"selectedValue\" (selectionChange)=\"onChange()\">\n                <mat-option *ngFor=\"let statut of status\" [value]=\"statut.value\">\n                    {{ statut.viewValue }}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n        <ngb-alert *ngIf=\"isAlert\" type=\"danger\">{{alert}}</ngb-alert>\n        <!--  Table-->\n        <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\" matSort>\n\n            <ng-container matColumnDef=\"numtiers\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>N° TIERS.</th>\n                <td mat-cell *matCellDef=\"let element\">{{ element.numtiers }}</td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"numerodossier\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>N° Dossier.</th>\n                <td mat-cell *matCellDef=\"let element\">{{ element.numerodossier }}</td>\n            </ng-container>\n            <ng-container matColumnDef=\"resultatTraitement\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Résultat Traitement.</th>\n                <td mat-cell *matCellDef=\"let element\">{{ element.resultatTraitement }}</td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"nom\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Nom.</th>\n                <td mat-cell *matCellDef=\"let element\">{{ element.nom }}</td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"prenom\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Prénom.</th>\n                <td mat-cell *matCellDef=\"let element\">{{ element.prenom }}</td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"ncin\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>CIN</th>\n                <td mat-cell *matCellDef=\"let element\">{{ element.ncin }}</td>\n            </ng-container>\n            <ng-container matColumnDef=\"telgsm\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Tel</th>\n                <td mat-cell *matCellDef=\"let element\">{{ element.telgsm }}</td>\n            </ng-container>\n            <ng-container matColumnDef=\"statuttraitement\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Statut</th>\n                <td mat-cell *matCellDef=\"let element\">\n                    {{ element.statuttraitement }}\n                </td>\n            </ng-container>\n            <ng-container matColumnDef=\"valeurid\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>ValeurID</th>\n                <td mat-cell *matCellDef=\"let element\">{{ element.valeurid }}</td>\n            </ng-container>\n            <ng-container matColumnDef=\"codeagencecible\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Agence</th>\n                <td mat-cell *matCellDef=\"let element\">\n                    {{ element.codeagencecible }}\n                </td>\n            </ng-container>\n            <ng-container matColumnDef=\"erreur\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Erreur</th>\n                <td mat-cell *matCellDef=\"let element\">{{ element.erreur }}</td>\n            </ng-container>\n            <ng-container matColumnDef=\"options\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>options</th>\n                <td mat-cell *matCellDef=\"let element\">\n                    <!-- <button (click)=\"openDialog(element.valeurid)\" class=\"btn\" mat-raised-button color=\"warn\">\n                        Set Agence\n                    </button>\n                    <button (click)=\"openDialogSecond(element.valeurid)\" class=\"btn\" mat-raised-button color=\"warn\">\n                        Set Agent\n                    </button>\n                    <button (click)=\"getStatut(element.numtiers, element.codegestionnaire)\" class=\"btn\"\n                        mat-raised-button color=\"warn\">\n                        Get Statut\n                    </button>\n                    <button (click)=\"sendToEvolan(element)\" class=\"btn\" mat-raised-button color=\"warn\">\n                        Send To Evolan\n                    </button>\n                    <button (click)=\"openDialogResultatTraitement(element.valeurid)\" class=\"btn\" mat-raised-button color=\"warn\">\n                        Set Resultat Traitement\n                    </button> -->\n                    <button (click)=\"send(element)\" class=\"btn\" mat-raised-button color=\"warn\">\n                        Details\n                    </button>\n                </td>\n            </ng-container>\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n        </table>\n        <mat-paginator [pageSizeOptions]=\"[5, 10, 15]\" showFirstLastButtons></mat-paginator>\n    </mat-tab>\n</mat-tab-group>","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { DatabaseService } from 'src/app/services/database.service';\ndeclare var window:any;\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss'],\n})\nexport class RegisterComponent implements OnInit {\n  hide = true;\n  data: FormGroup;\n  organismes: any[]=[];\n  agences: any[]=[];\n  constructor(\n    private fb: FormBuilder,\n    private databaseService: DatabaseService\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.data = this.fb.group(\n      {\n        organisme: ['', Validators.required],\n        agence: ['', Validators.required],\n        nom: [''],\n        email: ['', Validators.required],\n        password: ['', Validators.required],\n        confirmedPassword: ['', Validators.required],\n      },\n      { validators: this.checkPasswords }\n    );\n  }\n  ngAfterViewInit(){\n    this.databaseService\n    .getOrganismes()\n    .then((res: any) => {\n      if (window.openDatabase === undefined){\n        this.organismes = res\n      }else{\n        for (let i = 0; i < res.rows.length; i++) {\n          this.organismes.push(res.rows.item(i));\n        }\n      }\n      console.log('result getting organismes', res);\n\n    })\n    .catch((error) => {\n      console.log('error getting organismes', error);\n    });\n  }\n  checkPasswords(group: FormGroup) {\n    // here we have the 'passwords' group\n    const password = group.get('password').value;\n    const confirmedPassword = group.get('confirmedPassword').value;\n    return password === confirmedPassword ? null : { notSame: true };\n  }\n\n  onSubmit() {\n    console.log(this.data.hasError('notSame'));\n  }\n\n  changed() {\n    this.agences = []\n    let organisme = this.data.get('organisme').value\n    this.databaseService\n      .getAgenceByOrganisme(organisme)\n      .then((res: any) => {\n        if (window.openDatabase === undefined){\n          this.agences = res\n        }else{\n          for (let i = 0; i < res.rows.length; i++) {\n            this.agences.push(res.rows.item(i));\n          }\n        }\n        console.log(`result of selecting ${organisme} :`,res)\n      })\n      .catch((error) => {\n        console.log('error getting agences by organisme ', error);\n      });\n  }\n}\n","<div class=\"on_top_of_body\">\n  <div class=\"form_container\">\n    <div class=\"title\">\n      <h1>Enregistrement</h1>\n    </div>\n    <form [formGroup]=\"data\" (ngSubmit)=\"onSubmit()\">\n      <div class=\"fields-container fields-container-of-three\">\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Organisme</mat-label>\n          <mat-select formControlName=\"organisme\" (selectionChange)=\"changed()\">\n            <mat-option *ngFor=\"let organisme of organismes\" [value]=\"organisme.codeorganisme\">\n              {{ organisme.organisme }}\n            </mat-option>\n          </mat-select>\n          <mat-hint *ngIf=\"false\">Hint</mat-hint>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Agence</mat-label>\n          <mat-select formControlName=\"agence\">\n            <mat-option *ngFor=\"let agence of agences\" [value]=\"agence.codeagence\">\n              {{ agence.agence}}\n            </mat-option>\n          </mat-select>\n          <mat-hint *ngIf=\"false\">Hint</mat-hint>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Nom</mat-label>\n          <input formControlName=\"nom\" matInput placeholder=\"Nom\" />\n          <mat-hint *ngIf=\"false\">Hint</mat-hint>\n        </mat-form-field>\n      </div>\n      <div>\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Email</mat-label>\n          <input formControlName=\"email\" matInput placeholder=\"Email\" />\n          <mat-hint *ngIf=\"false\">Hint</mat-hint>\n        </mat-form-field>\n      </div>\n      <div>\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Password</mat-label>\n          <input\n            formControlName=\"password\"\n            matInput\n            [type]=\"hide ? 'password' : 'text'\"\n            placeholder=\"Mot de passe\"\n          />\n          <button\n            mat-icon-button\n            matSuffix\n            (click)=\"hide = !hide\"\n            [attr.aria-label]=\"'Hide password'\"\n            [attr.aria-pressed]=\"hide\"\n          >\n            <mat-icon>{{ hide ? \"visibility_off\" : \"visibility\" }}</mat-icon>\n          </button>\n        </mat-form-field>\n      </div>\n      <div>\n        <mat-form-field class=\"passwordConfirmation\" appearance=\"fill\">\n          <mat-label>Confirmation</mat-label>\n          <input\n            formControlName=\"confirmedPassword\"\n            matInput\n            [type]=\"hide ? 'password' : 'text'\"\n            placeholder=\"confirmer le mot de passe\"\n          />\n          <mat-hint *ngIf=\"data.hasError('notSame')\">\n            Passwords do not match\n          </mat-hint>\n          <button\n            mat-icon-button\n            matSuffix\n            (click)=\"hide = !hide\"\n            [attr.aria-label]=\"'Hide password'\"\n            [attr.aria-pressed]=\"hide\"\n          >\n            <mat-icon>{{ hide ? \"visibility_off\" : \"visibility\" }}</mat-icon>\n          </button>\n        </mat-form-field>\n      </div>\n\n      <p class=\"login\">\n        <button mat-raised-button type=\"submit\">\n          <h1>Enregistrer</h1>\n        </button>\n      </p>\n\n      <p class=\"connecter\"><a href=\"/login\">Se connecter</a></p>\n    </form>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-personne-morale',\n  templateUrl: './personne-morale.component.html',\n  styleUrls: ['./personne-morale.component.scss']\n})\nexport class PersonneMoraleComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-tab-group class=\"two\" color=\"warn\">\n    <mat-tab label=\"Personne Morale \"> Personne Morale </mat-tab>\n    <mat-tab label=\"Ajouter PM\"> Ajouter PM </mat-tab>\n  </mat-tab-group>","import { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree,\n  Router,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NotAuthGuard implements CanActivate {\n  constructor(private authService: AuthService, private route: Router) {}\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree>\n    | boolean\n    | UrlTree {\n    let token = this.authService.getToken();\n    if (token) {\n      this.route.navigate(['home'])\n      return false;\n    } else {\n      return true;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(private http:HttpClient) { }\n\n  login(credentials){\n    return this.http.post('https://192.168.140.30:3132/api/login',credentials)\n  }\n  getToken(){\n    return localStorage.getItem('token')\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router'\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { DatabaseService } from './database.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PmDataService implements Resolve<Object>{\r\n  constructor(private http:HttpClient, private db:DatabaseService) { }\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): any[] | Observable<Object> | Promise<any[]> {\r\n    return null\r\n  }\r\n}\r\n","import { Component, Inject, OnInit } from '@angular/core';\nimport {MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\n\n\n@Component({\n  selector: 'app-resultat-traitement',\n  templateUrl: './resultat-traitement.component.html',\n  styleUrls: ['./resultat-traitement.component.scss']\n})\nexport class ResultatTraitementComponent implements OnInit {\n  data:any;\n  selectedStatus:string\n  constructor(\n    public dialogRef: MatDialogRef<ResultatTraitementComponent>,\n    @Inject(MAT_DIALOG_DATA) public status) {\n      this.data = status\n    }\n\n  ngOnInit(): void {\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n","<h1 mat-dialog-title>Choisir le Statut</h1>\n<div mat-dialog-content>\n    <mat-form-field appearance=\"fill\">\n        <mat-label>Statut de Traitement</mat-label>\n        <mat-select [(ngModel)]=\"selectedStatus\">\n            <mat-option *ngFor=\"let statut of data\" [value]='statut.statut'>\n                {{statut.statut}}\n            </mat-option>\n        </mat-select>\n    </mat-form-field>\n</div>\n<div mat-dialog-actions>\n    <button mat-button (click)=\"onNoClick()\">Annuler</button>\n    <button mat-button [mat-dialog-close]=\"selectedStatus\" cdkFocusInitial>Ok</button>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './pages/login/login.component';\nimport { HomeComponent } from './pages/home/home.component';\nimport { PersonneMoraleComponent } from './components/personne-morale/personne-morale.component';\nimport { PersonnePhysiqueComponent } from './components/personne-physique/personne-physique.component';\nimport { RegisterComponent } from './pages/register/register.component';\nimport { PersonnePhysiqueGestionnaireComponent } from './components/personne-physique-gestionnaire/personne-physique-gestionnaire.component';\nimport { PersonneMoraleGestionnaireComponent } from './components/personne-morale-gestionnaire/personne-morale-gestionnaire.component';\nimport { PpDataService } from './services/ppdata.service';\nimport { PersonneDetailsComponent } from './components/personne-details/personne-details.component';\nimport { AgenceDataService } from './services/agenceData.service';\nimport { PmDataService } from './services/pmData.service';\nimport { PmDataNewService } from './services/pmDataNew.service';\nimport { AuthGuard } from './services/auth.guard';\nimport { NotAuthGuard } from './services/not-auth.guard';\nconst role = localStorage.getItem('role');\nconsole.log('routing', role, role === 'BO');\nconst routes: Routes = [\n  {\n    path: '',\n    pathMatch: 'full',\n    redirectTo: 'login',\n  },\n  {\n    path: 'login',\n    component: LoginComponent,\n    canActivate:[NotAuthGuard]\n  },\n  {\n    path: 'home',\n    component: HomeComponent,\n    runGuardsAndResolvers: 'always',\n    children: [\n      {\n        path: '',\n        pathMatch: 'full',\n        redirectTo: 'pmg',\n      },\n      {\n        path: 'pm',\n        component: PersonneMoraleComponent,\n        runGuardsAndResolvers: 'always'\n      },\n      {\n        path: 'pp',\n        component: PersonnePhysiqueComponent,\n        runGuardsAndResolvers: 'always'\n      },\n      {\n        path: 'ppg',\n        component: PersonnePhysiqueGestionnaireComponent,\n        resolve: { pps: PpDataService, agences: AgenceDataService, ppsn:PmDataNewService },\n        runGuardsAndResolvers: 'always'\n      },\n      {\n        path: 'pmg',\n        component: PersonneMoraleGestionnaireComponent,\n        resolve: { codes: PmDataService},\n        runGuardsAndResolvers: 'always'\n      },\n      {\n        path: 'details',\n        component: PersonneDetailsComponent,\n        resolve: { villes: AgenceDataService},\n        runGuardsAndResolvers: 'always'\n      },\n    ],\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'register',\n    component: RegisterComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import {Pipe, PipeTransform} from '@angular/core';\r\nimport {DomSanitizer} from '@angular/platform-browser';\r\n \r\n@Pipe({\r\n  name: 'safeHtml'\r\n})\r\nexport class SafeHtmlPipe implements PipeTransform {\r\n \r\n  constructor(private sanitizer: DomSanitizer) {\r\n  }\r\n \r\n  transform(value: any, args?: any): any {\r\n    return this.sanitizer.bypassSecurityTrustHtml(value);\r\n  }\r\n \r\n}","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router'\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PpDataService implements Resolve<Object>{\n  constructor(private http:HttpClient) { }\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): any[] | Observable<Object> | Promise<any[]> {\n    return this.http.get('https://192.168.140.30:3132/api/getListPP')\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport 'hammerjs';\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}